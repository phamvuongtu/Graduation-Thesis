{"ast":null,"code":"\"use strict\";\n\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HoverFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst UUID = require(\"./utils/uuid\");\nclass HoverFeature extends features_1.TextDocumentLanguageFeature {\n  constructor(client) {\n    super(client, vscode_languageserver_protocol_1.HoverRequest.type);\n  }\n  fillClientCapabilities(capabilities) {\n    const hoverCapability = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'hover');\n    hoverCapability.dynamicRegistration = true;\n    hoverCapability.contentFormat = [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText];\n  }\n  initialize(capabilities, documentSelector) {\n    const options = this.getRegistrationOptions(documentSelector, capabilities.hoverProvider);\n    if (!options) {\n      return;\n    }\n    this.register({\n      id: UUID.generateUuid(),\n      registerOptions: options\n    });\n  }\n  registerLanguageProvider(options) {\n    const selector = options.documentSelector;\n    const provider = {\n      provideHover: (document, position, token) => {\n        const client = this._client;\n        const provideHover = (document, position, token) => {\n          return client.sendRequest(vscode_languageserver_protocol_1.HoverRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(result => {\n            if (token.isCancellationRequested) {\n              return null;\n            }\n            return client.protocol2CodeConverter.asHover(result);\n          }, error => {\n            return client.handleFailedRequest(vscode_languageserver_protocol_1.HoverRequest.type, token, error, null);\n          });\n        };\n        const middleware = client.middleware;\n        return middleware.provideHover ? middleware.provideHover(document, position, token, provideHover) : provideHover(document, position, token);\n      }\n    };\n    return [this.registerProvider(selector, provider), provider];\n  }\n  registerProvider(selector, provider) {\n    return vscode_1.languages.registerHoverProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider);\n  }\n}\nexports.HoverFeature = HoverFeature;","map":{"version":3,"names":["Object","defineProperty","exports","value","HoverFeature","vscode_1","require","vscode_languageserver_protocol_1","features_1","UUID","TextDocumentLanguageFeature","constructor","client","HoverRequest","type","fillClientCapabilities","capabilities","hoverCapability","ensure","dynamicRegistration","contentFormat","MarkupKind","Markdown","PlainText","initialize","documentSelector","options","getRegistrationOptions","hoverProvider","register","id","generateUuid","registerOptions","registerLanguageProvider","selector","provider","provideHover","document","position","token","_client","sendRequest","code2ProtocolConverter","asTextDocumentPositionParams","then","result","isCancellationRequested","protocol2CodeConverter","asHover","error","handleFailedRequest","middleware","registerProvider","languages","registerHoverProvider","asDocumentSelector"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode-languageclient/lib/common/hover.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HoverFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst UUID = require(\"./utils/uuid\");\nclass HoverFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.HoverRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        const hoverCapability = ((0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'hover'));\n        hoverCapability.dynamicRegistration = true;\n        hoverCapability.contentFormat = [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText];\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.hoverProvider);\n        if (!options) {\n            return;\n        }\n        this.register({\n            id: UUID.generateUuid(),\n            registerOptions: options\n        });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideHover: (document, position, token) => {\n                const client = this._client;\n                const provideHover = (document, position, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.HoverRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asHover(result);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.HoverRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideHover\n                    ? middleware.provideHover(document, position, token, provideHover)\n                    : provideHover(document, position, token);\n            }\n        };\n        return [this.registerProvider(selector, provider), provider];\n    }\n    registerProvider(selector, provider) {\n        return vscode_1.languages.registerHoverProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider);\n    }\n}\nexports.HoverFeature = HoverFeature;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}