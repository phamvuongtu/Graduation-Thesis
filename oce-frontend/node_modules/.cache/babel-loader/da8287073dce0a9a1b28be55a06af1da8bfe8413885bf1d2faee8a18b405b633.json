{"ast":null,"code":"\"use strict\";\n\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CompletionItemFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst UUID = require(\"./utils/uuid\");\nconst SupportedCompletionItemKinds = [vscode_languageserver_protocol_1.CompletionItemKind.Text, vscode_languageserver_protocol_1.CompletionItemKind.Method, vscode_languageserver_protocol_1.CompletionItemKind.Function, vscode_languageserver_protocol_1.CompletionItemKind.Constructor, vscode_languageserver_protocol_1.CompletionItemKind.Field, vscode_languageserver_protocol_1.CompletionItemKind.Variable, vscode_languageserver_protocol_1.CompletionItemKind.Class, vscode_languageserver_protocol_1.CompletionItemKind.Interface, vscode_languageserver_protocol_1.CompletionItemKind.Module, vscode_languageserver_protocol_1.CompletionItemKind.Property, vscode_languageserver_protocol_1.CompletionItemKind.Unit, vscode_languageserver_protocol_1.CompletionItemKind.Value, vscode_languageserver_protocol_1.CompletionItemKind.Enum, vscode_languageserver_protocol_1.CompletionItemKind.Keyword, vscode_languageserver_protocol_1.CompletionItemKind.Snippet, vscode_languageserver_protocol_1.CompletionItemKind.Color, vscode_languageserver_protocol_1.CompletionItemKind.File, vscode_languageserver_protocol_1.CompletionItemKind.Reference, vscode_languageserver_protocol_1.CompletionItemKind.Folder, vscode_languageserver_protocol_1.CompletionItemKind.EnumMember, vscode_languageserver_protocol_1.CompletionItemKind.Constant, vscode_languageserver_protocol_1.CompletionItemKind.Struct, vscode_languageserver_protocol_1.CompletionItemKind.Event, vscode_languageserver_protocol_1.CompletionItemKind.Operator, vscode_languageserver_protocol_1.CompletionItemKind.TypeParameter];\nclass CompletionItemFeature extends features_1.TextDocumentLanguageFeature {\n  constructor(client) {\n    super(client, vscode_languageserver_protocol_1.CompletionRequest.type);\n    this.labelDetailsSupport = new Map();\n  }\n  fillClientCapabilities(capabilities) {\n    let completion = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'completion');\n    completion.dynamicRegistration = true;\n    completion.contextSupport = true;\n    completion.completionItem = {\n      snippetSupport: true,\n      commitCharactersSupport: true,\n      documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText],\n      deprecatedSupport: true,\n      preselectSupport: true,\n      tagSupport: {\n        valueSet: [vscode_languageserver_protocol_1.CompletionItemTag.Deprecated]\n      },\n      insertReplaceSupport: true,\n      resolveSupport: {\n        properties: ['documentation', 'detail', 'additionalTextEdits']\n      },\n      insertTextModeSupport: {\n        valueSet: [vscode_languageserver_protocol_1.InsertTextMode.asIs, vscode_languageserver_protocol_1.InsertTextMode.adjustIndentation]\n      },\n      labelDetailsSupport: true\n    };\n    completion.insertTextMode = vscode_languageserver_protocol_1.InsertTextMode.adjustIndentation;\n    completion.completionItemKind = {\n      valueSet: SupportedCompletionItemKinds\n    };\n    completion.completionList = {\n      itemDefaults: ['commitCharacters', 'editRange', 'insertTextFormat', 'insertTextMode', 'data']\n    };\n  }\n  initialize(capabilities, documentSelector) {\n    const options = this.getRegistrationOptions(documentSelector, capabilities.completionProvider);\n    if (!options) {\n      return;\n    }\n    this.register({\n      id: UUID.generateUuid(),\n      registerOptions: options\n    });\n  }\n  registerLanguageProvider(options, id) {\n    this.labelDetailsSupport.set(id, !!options.completionItem?.labelDetailsSupport);\n    const triggerCharacters = options.triggerCharacters ?? [];\n    const defaultCommitCharacters = options.allCommitCharacters;\n    const selector = options.documentSelector;\n    const provider = {\n      provideCompletionItems: (document, position, token, context) => {\n        const client = this._client;\n        const middleware = this._client.middleware;\n        const provideCompletionItems = (document, position, context, token) => {\n          return client.sendRequest(vscode_languageserver_protocol_1.CompletionRequest.type, client.code2ProtocolConverter.asCompletionParams(document, position, context), token).then(result => {\n            if (token.isCancellationRequested) {\n              return null;\n            }\n            return client.protocol2CodeConverter.asCompletionResult(result, defaultCommitCharacters, token);\n          }, error => {\n            return client.handleFailedRequest(vscode_languageserver_protocol_1.CompletionRequest.type, token, error, null);\n          });\n        };\n        return middleware.provideCompletionItem ? middleware.provideCompletionItem(document, position, context, token, provideCompletionItems) : provideCompletionItems(document, position, context, token);\n      },\n      resolveCompletionItem: options.resolveProvider ? (item, token) => {\n        const client = this._client;\n        const middleware = this._client.middleware;\n        const resolveCompletionItem = (item, token) => {\n          return client.sendRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, client.code2ProtocolConverter.asCompletionItem(item, !!this.labelDetailsSupport.get(id)), token).then(result => {\n            if (token.isCancellationRequested) {\n              return null;\n            }\n            return client.protocol2CodeConverter.asCompletionItem(result);\n          }, error => {\n            return client.handleFailedRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, token, error, item);\n          });\n        };\n        return middleware.resolveCompletionItem ? middleware.resolveCompletionItem(item, token, resolveCompletionItem) : resolveCompletionItem(item, token);\n      } : undefined\n    };\n    return [vscode_1.languages.registerCompletionItemProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider, ...triggerCharacters), provider];\n  }\n}\nexports.CompletionItemFeature = CompletionItemFeature;","map":{"version":3,"names":["Object","defineProperty","exports","value","CompletionItemFeature","vscode_1","require","vscode_languageserver_protocol_1","features_1","UUID","SupportedCompletionItemKinds","CompletionItemKind","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","Color","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","TextDocumentLanguageFeature","constructor","client","CompletionRequest","type","labelDetailsSupport","Map","fillClientCapabilities","capabilities","completion","ensure","dynamicRegistration","contextSupport","completionItem","snippetSupport","commitCharactersSupport","documentationFormat","MarkupKind","Markdown","PlainText","deprecatedSupport","preselectSupport","tagSupport","valueSet","CompletionItemTag","Deprecated","insertReplaceSupport","resolveSupport","properties","insertTextModeSupport","InsertTextMode","asIs","adjustIndentation","insertTextMode","completionItemKind","completionList","itemDefaults","initialize","documentSelector","options","getRegistrationOptions","completionProvider","register","id","generateUuid","registerOptions","registerLanguageProvider","set","triggerCharacters","defaultCommitCharacters","allCommitCharacters","selector","provider","provideCompletionItems","document","position","token","context","_client","middleware","sendRequest","code2ProtocolConverter","asCompletionParams","then","result","isCancellationRequested","protocol2CodeConverter","asCompletionResult","error","handleFailedRequest","provideCompletionItem","resolveCompletionItem","resolveProvider","item","CompletionResolveRequest","asCompletionItem","get","undefined","languages","registerCompletionItemProvider","asDocumentSelector"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode-languageclient/lib/common/completion.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CompletionItemFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst UUID = require(\"./utils/uuid\");\nconst SupportedCompletionItemKinds = [\n    vscode_languageserver_protocol_1.CompletionItemKind.Text,\n    vscode_languageserver_protocol_1.CompletionItemKind.Method,\n    vscode_languageserver_protocol_1.CompletionItemKind.Function,\n    vscode_languageserver_protocol_1.CompletionItemKind.Constructor,\n    vscode_languageserver_protocol_1.CompletionItemKind.Field,\n    vscode_languageserver_protocol_1.CompletionItemKind.Variable,\n    vscode_languageserver_protocol_1.CompletionItemKind.Class,\n    vscode_languageserver_protocol_1.CompletionItemKind.Interface,\n    vscode_languageserver_protocol_1.CompletionItemKind.Module,\n    vscode_languageserver_protocol_1.CompletionItemKind.Property,\n    vscode_languageserver_protocol_1.CompletionItemKind.Unit,\n    vscode_languageserver_protocol_1.CompletionItemKind.Value,\n    vscode_languageserver_protocol_1.CompletionItemKind.Enum,\n    vscode_languageserver_protocol_1.CompletionItemKind.Keyword,\n    vscode_languageserver_protocol_1.CompletionItemKind.Snippet,\n    vscode_languageserver_protocol_1.CompletionItemKind.Color,\n    vscode_languageserver_protocol_1.CompletionItemKind.File,\n    vscode_languageserver_protocol_1.CompletionItemKind.Reference,\n    vscode_languageserver_protocol_1.CompletionItemKind.Folder,\n    vscode_languageserver_protocol_1.CompletionItemKind.EnumMember,\n    vscode_languageserver_protocol_1.CompletionItemKind.Constant,\n    vscode_languageserver_protocol_1.CompletionItemKind.Struct,\n    vscode_languageserver_protocol_1.CompletionItemKind.Event,\n    vscode_languageserver_protocol_1.CompletionItemKind.Operator,\n    vscode_languageserver_protocol_1.CompletionItemKind.TypeParameter\n];\nclass CompletionItemFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.CompletionRequest.type);\n        this.labelDetailsSupport = new Map();\n    }\n    fillClientCapabilities(capabilities) {\n        let completion = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'completion');\n        completion.dynamicRegistration = true;\n        completion.contextSupport = true;\n        completion.completionItem = {\n            snippetSupport: true,\n            commitCharactersSupport: true,\n            documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText],\n            deprecatedSupport: true,\n            preselectSupport: true,\n            tagSupport: { valueSet: [vscode_languageserver_protocol_1.CompletionItemTag.Deprecated] },\n            insertReplaceSupport: true,\n            resolveSupport: {\n                properties: ['documentation', 'detail', 'additionalTextEdits']\n            },\n            insertTextModeSupport: { valueSet: [vscode_languageserver_protocol_1.InsertTextMode.asIs, vscode_languageserver_protocol_1.InsertTextMode.adjustIndentation] },\n            labelDetailsSupport: true\n        };\n        completion.insertTextMode = vscode_languageserver_protocol_1.InsertTextMode.adjustIndentation;\n        completion.completionItemKind = { valueSet: SupportedCompletionItemKinds };\n        completion.completionList = {\n            itemDefaults: [\n                'commitCharacters', 'editRange', 'insertTextFormat', 'insertTextMode', 'data'\n            ]\n        };\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.completionProvider);\n        if (!options) {\n            return;\n        }\n        this.register({\n            id: UUID.generateUuid(),\n            registerOptions: options\n        });\n    }\n    registerLanguageProvider(options, id) {\n        this.labelDetailsSupport.set(id, !!options.completionItem?.labelDetailsSupport);\n        const triggerCharacters = options.triggerCharacters ?? [];\n        const defaultCommitCharacters = options.allCommitCharacters;\n        const selector = options.documentSelector;\n        const provider = {\n            provideCompletionItems: (document, position, token, context) => {\n                const client = this._client;\n                const middleware = this._client.middleware;\n                const provideCompletionItems = (document, position, context, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.CompletionRequest.type, client.code2ProtocolConverter.asCompletionParams(document, position, context), token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asCompletionResult(result, defaultCommitCharacters, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.CompletionRequest.type, token, error, null);\n                    });\n                };\n                return middleware.provideCompletionItem\n                    ? middleware.provideCompletionItem(document, position, context, token, provideCompletionItems)\n                    : provideCompletionItems(document, position, context, token);\n            },\n            resolveCompletionItem: options.resolveProvider\n                ? (item, token) => {\n                    const client = this._client;\n                    const middleware = this._client.middleware;\n                    const resolveCompletionItem = (item, token) => {\n                        return client.sendRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, client.code2ProtocolConverter.asCompletionItem(item, !!this.labelDetailsSupport.get(id)), token).then((result) => {\n                            if (token.isCancellationRequested) {\n                                return null;\n                            }\n                            return client.protocol2CodeConverter.asCompletionItem(result);\n                        }, (error) => {\n                            return client.handleFailedRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, token, error, item);\n                        });\n                    };\n                    return middleware.resolveCompletionItem\n                        ? middleware.resolveCompletionItem(item, token, resolveCompletionItem)\n                        : resolveCompletionItem(item, token);\n                }\n                : undefined\n        };\n        return [vscode_1.languages.registerCompletionItemProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider, ...triggerCharacters), provider];\n    }\n}\nexports.CompletionItemFeature = CompletionItemFeature;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}