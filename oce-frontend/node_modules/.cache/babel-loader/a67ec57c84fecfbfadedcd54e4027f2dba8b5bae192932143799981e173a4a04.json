{"ast":null,"code":"import { Codicon } from './codicons.js';\nvar ThemeColor;\n(function (ThemeColor) {\n  function isThemeColor(obj) {\n    return obj && typeof obj === 'object' && typeof obj.id === 'string';\n  }\n  ThemeColor.isThemeColor = isThemeColor;\n})(ThemeColor || (ThemeColor = {}));\nfunction themeColorFromId(id) {\n  return {\n    id\n  };\n}\nvar ThemeIcon;\n(function (ThemeIcon) {\n  ThemeIcon.iconNameSegment = '[A-Za-z0-9]+';\n  ThemeIcon.iconNameExpression = '[A-Za-z0-9-]+';\n  ThemeIcon.iconModifierExpression = '~[A-Za-z]+';\n  ThemeIcon.iconNameCharacter = '[A-Za-z0-9~-]';\n  const ThemeIconIdRegex = new RegExp(`^(${ThemeIcon.iconNameExpression})(${ThemeIcon.iconModifierExpression})?$`);\n  function asClassNameArray(icon) {\n    const match = ThemeIconIdRegex.exec(icon.id);\n    if (!match) {\n      return asClassNameArray(Codicon.error);\n    }\n    const [, id, modifier] = match;\n    const classNames = ['codicon', 'codicon-' + id];\n    if (modifier) {\n      classNames.push('codicon-modifier-' + modifier.substring(1));\n    }\n    return classNames;\n  }\n  ThemeIcon.asClassNameArray = asClassNameArray;\n  function asClassName(icon) {\n    return asClassNameArray(icon).join(' ');\n  }\n  ThemeIcon.asClassName = asClassName;\n  function asCSSSelector(icon) {\n    return '.' + asClassNameArray(icon).join('.');\n  }\n  ThemeIcon.asCSSSelector = asCSSSelector;\n  function isThemeIcon(obj) {\n    return obj && typeof obj === 'object' && typeof obj.id === 'string' && (typeof obj.color === 'undefined' || ThemeColor.isThemeColor(obj.color));\n  }\n  ThemeIcon.isThemeIcon = isThemeIcon;\n  const _regexFromString = new RegExp(`^\\\\$\\\\((${ThemeIcon.iconNameExpression}(?:${ThemeIcon.iconModifierExpression})?)\\\\)$`);\n  function fromString(str) {\n    const match = _regexFromString.exec(str);\n    if (!match) {\n      return undefined;\n    }\n    const [, name] = match;\n    return {\n      id: name\n    };\n  }\n  ThemeIcon.fromString = fromString;\n  function fromId(id) {\n    return {\n      id\n    };\n  }\n  ThemeIcon.fromId = fromId;\n  function modify(icon, modifier) {\n    let id = icon.id;\n    const tildeIndex = id.lastIndexOf('~');\n    if (tildeIndex !== -1) {\n      id = id.substring(0, tildeIndex);\n    }\n    if (modifier) {\n      id = `${id}~${modifier}`;\n    }\n    return {\n      id\n    };\n  }\n  ThemeIcon.modify = modify;\n  function getModifier(icon) {\n    const tildeIndex = icon.id.lastIndexOf('~');\n    if (tildeIndex !== -1) {\n      return icon.id.substring(tildeIndex + 1);\n    }\n    return undefined;\n  }\n  ThemeIcon.getModifier = getModifier;\n  function isEqual(ti1, ti2) {\n    return ti1.id === ti2.id && ti1.color?.id === ti2.color?.id;\n  }\n  ThemeIcon.isEqual = isEqual;\n})(ThemeIcon || (ThemeIcon = {}));\nexport { ThemeColor, ThemeIcon, themeColorFromId };","map":{"version":3,"names":["Codicon","ThemeColor","isThemeColor","obj","id","themeColorFromId","ThemeIcon","iconNameSegment","iconNameExpression","iconModifierExpression","iconNameCharacter","ThemeIconIdRegex","RegExp","asClassNameArray","icon","match","exec","error","modifier","classNames","push","substring","asClassName","join","asCSSSelector","isThemeIcon","color","_regexFromString","fromString","str","undefined","name","fromId","modify","tildeIndex","lastIndexOf","getModifier","isEqual","ti1","ti2"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode/vscode/src/vs/base/common/themables.js"],"sourcesContent":["import { Codicon } from './codicons.js';\nvar ThemeColor;\n( (function(ThemeColor) {\n    function isThemeColor(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string';\n    }\n    ThemeColor.isThemeColor = isThemeColor;\n})(ThemeColor || (ThemeColor = {})));\nfunction themeColorFromId(id) {\n    return { id };\n}\nvar ThemeIcon;\n( (function(ThemeIcon) {\n    ThemeIcon.iconNameSegment = '[A-Za-z0-9]+';\n    ThemeIcon.iconNameExpression = '[A-Za-z0-9-]+';\n    ThemeIcon.iconModifierExpression = '~[A-Za-z]+';\n    ThemeIcon.iconNameCharacter = '[A-Za-z0-9~-]';\n    const ThemeIconIdRegex = ( new RegExp(\n        `^(${ThemeIcon.iconNameExpression})(${ThemeIcon.iconModifierExpression})?$`\n    ));\n    function asClassNameArray(icon) {\n        const match = ThemeIconIdRegex.exec(icon.id);\n        if (!match) {\n            return asClassNameArray(Codicon.error);\n        }\n        const [, id, modifier] = match;\n        const classNames = ['codicon', 'codicon-' + id];\n        if (modifier) {\n            classNames.push('codicon-modifier-' + modifier.substring(1));\n        }\n        return classNames;\n    }\n    ThemeIcon.asClassNameArray = asClassNameArray;\n    function asClassName(icon) {\n        return asClassNameArray(icon).join(' ');\n    }\n    ThemeIcon.asClassName = asClassName;\n    function asCSSSelector(icon) {\n        return '.' + asClassNameArray(icon).join('.');\n    }\n    ThemeIcon.asCSSSelector = asCSSSelector;\n    function isThemeIcon(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string' && (typeof obj.color === 'undefined' || ThemeColor.isThemeColor(obj.color));\n    }\n    ThemeIcon.isThemeIcon = isThemeIcon;\n    const _regexFromString = ( new RegExp(\n        `^\\\\$\\\\((${ThemeIcon.iconNameExpression}(?:${ThemeIcon.iconModifierExpression})?)\\\\)$`\n    ));\n    function fromString(str) {\n        const match = _regexFromString.exec(str);\n        if (!match) {\n            return undefined;\n        }\n        const [, name] = match;\n        return { id: name };\n    }\n    ThemeIcon.fromString = fromString;\n    function fromId(id) {\n        return { id };\n    }\n    ThemeIcon.fromId = fromId;\n    function modify(icon, modifier) {\n        let id = icon.id;\n        const tildeIndex = id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            id = id.substring(0, tildeIndex);\n        }\n        if (modifier) {\n            id = `${id}~${modifier}`;\n        }\n        return { id };\n    }\n    ThemeIcon.modify = modify;\n    function getModifier(icon) {\n        const tildeIndex = icon.id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            return icon.id.substring(tildeIndex + 1);\n        }\n        return undefined;\n    }\n    ThemeIcon.getModifier = getModifier;\n    function isEqual(ti1, ti2) {\n        return ti1.id === ti2.id && ti1.color?.id === ti2.color?.id;\n    }\n    ThemeIcon.isEqual = isEqual;\n})(ThemeIcon || (ThemeIcon = {})));\nexport { ThemeColor, ThemeIcon, themeColorFromId };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}