{"ast":null,"code":"import { URI } from '../../../../base/common/uri.js';\nimport { localizeWithPath } from '../../../../nls.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nconst _moduleId = \"vs/workbench/contrib/debug/common/debug\";\nconst VIEWLET_ID = 'workbench.view.debug';\nconst VARIABLES_VIEW_ID = 'workbench.debug.variablesView';\nconst WATCH_VIEW_ID = 'workbench.debug.watchExpressionsView';\nconst CALLSTACK_VIEW_ID = 'workbench.debug.callStackView';\nconst LOADED_SCRIPTS_VIEW_ID = 'workbench.debug.loadedScriptsView';\nconst BREAKPOINTS_VIEW_ID = 'workbench.debug.breakPointsView';\nconst DISASSEMBLY_VIEW_ID = 'workbench.debug.disassemblyView';\nconst DEBUG_PANEL_ID = 'workbench.panel.repl';\nconst REPL_VIEW_ID = 'workbench.panel.repl.view';\nconst CONTEXT_DEBUG_TYPE = new RawContextKey('debugType', undefined, {\n  type: 'string',\n  description: localizeWithPath(_moduleId, 0, \"Debug type of the active debug session. For example 'python'.\")\n});\nconst CONTEXT_DEBUG_CONFIGURATION_TYPE = new RawContextKey('debugConfigurationType', undefined, {\n  type: 'string',\n  description: localizeWithPath(_moduleId, 1, \"Debug type of the selected launch configuration. For example 'python'.\")\n});\nconst CONTEXT_DEBUG_STATE = new RawContextKey('debugState', 'inactive', {\n  type: 'string',\n  description: localizeWithPath(_moduleId, 2, \"State that the focused debug session is in. One of the following: 'inactive', 'initializing', 'stopped' or 'running'.\")\n});\nconst CONTEXT_DEBUG_UX_KEY = 'debugUx';\nconst CONTEXT_DEBUG_UX = new RawContextKey(CONTEXT_DEBUG_UX_KEY, 'default', {\n  type: 'string',\n  description: localizeWithPath(_moduleId, 3, \"Debug UX state. When there are no debug configurations it is 'simple', otherwise 'default'. Used to decide when to show welcome views in the debug viewlet.\")\n});\nconst CONTEXT_HAS_DEBUGGED = new RawContextKey('hasDebugged', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 4, \"True when a debug session has been started at least once, false otherwise.\")\n});\nconst CONTEXT_IN_DEBUG_MODE = new RawContextKey('inDebugMode', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 5, \"True when debugging, false otherwise.\")\n});\nconst CONTEXT_IN_DEBUG_REPL = new RawContextKey('inDebugRepl', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 6, \"True when focus is in the debug console, false otherwise.\")\n});\nconst CONTEXT_BREAKPOINT_WIDGET_VISIBLE = new RawContextKey('breakpointWidgetVisible', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 7, \"True when breakpoint editor zone widget is visible, false otherwise.\")\n});\nconst CONTEXT_IN_BREAKPOINT_WIDGET = new RawContextKey('inBreakpointWidget', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 8, \"True when focus is in the breakpoint editor zone widget, false otherwise.\")\n});\nconst CONTEXT_BREAKPOINTS_FOCUSED = new RawContextKey('breakpointsFocused', true, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 9, \"True when the BREAKPOINTS view is focused, false otherwise.\")\n});\nconst CONTEXT_WATCH_EXPRESSIONS_FOCUSED = new RawContextKey('watchExpressionsFocused', true, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 10, \"True when the WATCH view is focused, false otherwsie.\")\n});\nconst CONTEXT_WATCH_EXPRESSIONS_EXIST = new RawContextKey('watchExpressionsExist', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 11, \"True when at least one watch expression exists, false otherwise.\")\n});\nconst CONTEXT_VARIABLES_FOCUSED = new RawContextKey('variablesFocused', true, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 12, \"True when the VARIABLES views is focused, false otherwsie\")\n});\nconst CONTEXT_EXPRESSION_SELECTED = new RawContextKey('expressionSelected', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 13, \"True when an expression input box is open in either the WATCH or the VARIABLES view, false otherwise.\")\n});\nconst CONTEXT_BREAKPOINT_INPUT_FOCUSED = new RawContextKey('breakpointInputFocused', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 14, \"True when the input box has focus in the BREAKPOINTS view.\")\n});\nconst CONTEXT_CALLSTACK_ITEM_TYPE = new RawContextKey('callStackItemType', undefined, {\n  type: 'string',\n  description: localizeWithPath(_moduleId, 15, \"Represents the item type of the focused element in the CALL STACK view. For example: 'session', 'thread', 'stackFrame'\")\n});\nconst CONTEXT_CALLSTACK_SESSION_IS_ATTACH = new RawContextKey('callStackSessionIsAttach', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 16, \"True when the session in the CALL STACK view is attach, false otherwise. Used internally for inline menus in the CALL STACK view.\")\n});\nconst CONTEXT_CALLSTACK_ITEM_STOPPED = new RawContextKey('callStackItemStopped', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 17, \"True when the focused item in the CALL STACK is stopped. Used internaly for inline menus in the CALL STACK view.\")\n});\nconst CONTEXT_CALLSTACK_SESSION_HAS_ONE_THREAD = new RawContextKey('callStackSessionHasOneThread', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 18, \"True when the focused session in the CALL STACK view has exactly one thread. Used internally for inline menus in the CALL STACK view.\")\n});\nconst CONTEXT_WATCH_ITEM_TYPE = new RawContextKey('watchItemType', undefined, {\n  type: 'string',\n  description: localizeWithPath(_moduleId, 19, \"Represents the item type of the focused element in the WATCH view. For example: 'expression', 'variable'\")\n});\nconst CONTEXT_CAN_VIEW_MEMORY = new RawContextKey('canViewMemory', undefined, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 20, \"Indicates whether the item in the view has an associated memory refrence.\")\n});\nconst CONTEXT_BREAKPOINT_ITEM_TYPE = new RawContextKey('breakpointItemType', undefined, {\n  type: 'string',\n  description: localizeWithPath(_moduleId, 21, \"Represents the item type of the focused element in the BREAKPOINTS view. For example: 'breakpoint', 'exceptionBreakppint', 'functionBreakpoint', 'dataBreakpoint'\")\n});\nconst CONTEXT_BREAKPOINT_ITEM_IS_DATA_BYTES = new RawContextKey('breakpointItemBytes', undefined, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 22, \"Whether the breakpoint item is a data breakpoint on a byte range.\")\n});\nconst CONTEXT_BREAKPOINT_HAS_MODES = new RawContextKey('breakpointHasModes', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 23, \"Whether the breakpoint has multiple modes it can switch to.\")\n});\nconst CONTEXT_BREAKPOINT_SUPPORTS_CONDITION = new RawContextKey('breakpointSupportsCondition', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 24, \"True when the focused breakpoint supports conditions.\")\n});\nconst CONTEXT_LOADED_SCRIPTS_SUPPORTED = new RawContextKey('loadedScriptsSupported', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 25, \"True when the focused sessions supports the LOADED SCRIPTS view\")\n});\nconst CONTEXT_LOADED_SCRIPTS_ITEM_TYPE = new RawContextKey('loadedScriptsItemType', undefined, {\n  type: 'string',\n  description: localizeWithPath(_moduleId, 26, \"Represents the item type of the focused element in the LOADED SCRIPTS view.\")\n});\nconst CONTEXT_FOCUSED_SESSION_IS_ATTACH = new RawContextKey('focusedSessionIsAttach', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 27, \"True when the focused session is 'attach'.\")\n});\nconst CONTEXT_FOCUSED_SESSION_IS_NO_DEBUG = new RawContextKey('focusedSessionIsNoDebug', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 28, \"True when the focused session is run without debugging.\")\n});\nconst CONTEXT_STEP_BACK_SUPPORTED = new RawContextKey('stepBackSupported', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 29, \"True when the focused session supports 'stepBack' requests.\")\n});\nconst CONTEXT_RESTART_FRAME_SUPPORTED = new RawContextKey('restartFrameSupported', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 30, \"True when the focused session supports 'restartFrame' requests.\")\n});\nconst CONTEXT_STACK_FRAME_SUPPORTS_RESTART = new RawContextKey('stackFrameSupportsRestart', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 31, \"True when the focused stack frame suppots 'restartFrame'.\")\n});\nconst CONTEXT_JUMP_TO_CURSOR_SUPPORTED = new RawContextKey('jumpToCursorSupported', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 32, \"True when the focused session supports 'jumpToCursor' request.\")\n});\nconst CONTEXT_STEP_INTO_TARGETS_SUPPORTED = new RawContextKey('stepIntoTargetsSupported', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 33, \"True when the focused session supports 'stepIntoTargets' request.\")\n});\nconst CONTEXT_BREAKPOINTS_EXIST = new RawContextKey('breakpointsExist', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 34, \"True when at least one breakpoint exists.\")\n});\nconst CONTEXT_DEBUGGERS_AVAILABLE = new RawContextKey('debuggersAvailable', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 35, \"True when there is at least one debug extensions active.\")\n});\nconst CONTEXT_DEBUG_EXTENSION_AVAILABLE = new RawContextKey('debugExtensionAvailable', true, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 36, \"True when there is at least one debug extension installed and enabled.\")\n});\nconst CONTEXT_DEBUG_PROTOCOL_VARIABLE_MENU_CONTEXT = new RawContextKey('debugProtocolVariableMenuContext', undefined, {\n  type: 'string',\n  description: localizeWithPath(_moduleId, 37, \"Represents the context the debug adapter sets on the focused variable in the VARIABLES view.\")\n});\nconst CONTEXT_SET_VARIABLE_SUPPORTED = new RawContextKey('debugSetVariableSupported', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 38, \"True when the focused session supports 'setVariable' request.\")\n});\nconst CONTEXT_SET_DATA_BREAKPOINT_BYTES_SUPPORTED = new RawContextKey('debugSetDataBreakpointAddressSupported', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 39, \"True when the focused session supports 'getBreakpointInfo' request on an address.\")\n});\nconst CONTEXT_SET_EXPRESSION_SUPPORTED = new RawContextKey('debugSetExpressionSupported', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 40, \"True when the focused session supports 'setExpression' request.\")\n});\nconst CONTEXT_BREAK_WHEN_VALUE_CHANGES_SUPPORTED = new RawContextKey('breakWhenValueChangesSupported', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 41, \"True when the focused session supports to break when value changes.\")\n});\nconst CONTEXT_BREAK_WHEN_VALUE_IS_ACCESSED_SUPPORTED = new RawContextKey('breakWhenValueIsAccessedSupported', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 42, \"True when the focused breakpoint supports to break when value is accessed.\")\n});\nconst CONTEXT_BREAK_WHEN_VALUE_IS_READ_SUPPORTED = new RawContextKey('breakWhenValueIsReadSupported', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 43, \"True when the focused breakpoint supports to break when value is read.\")\n});\nconst CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED = new RawContextKey('terminateDebuggeeSupported', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 44, \"True when the focused session supports the terminate debuggee capability.\")\n});\nconst CONTEXT_SUSPEND_DEBUGGEE_SUPPORTED = new RawContextKey('suspendDebuggeeSupported', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 45, \"True when the focused session supports the suspend debuggee capability.\")\n});\nconst CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT = new RawContextKey('variableEvaluateNamePresent', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 46, \"True when the focused variable has an 'evalauteName' field set.\")\n});\nconst CONTEXT_VARIABLE_IS_READONLY = new RawContextKey('variableIsReadonly', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 47, \"True when the focused variable is read-only.\")\n});\nconst CONTEXT_VARIABLE_VALUE = new RawContextKey('variableValue', false, {\n  type: 'string',\n  description: localizeWithPath(_moduleId, 48, \"Value of the variable, present for debug visualization clauses.\")\n});\nconst CONTEXT_VARIABLE_TYPE = new RawContextKey('variableType', false, {\n  type: 'string',\n  description: localizeWithPath(_moduleId, 49, \"Type of the variable, present for debug visualization clauses.\")\n});\nconst CONTEXT_VARIABLE_INTERFACES = new RawContextKey('variableInterfaces', false, {\n  type: 'array',\n  description: localizeWithPath(_moduleId, 50, \"Any interfaces or contracts that the variable satisfies, present for debug visualization clauses.\")\n});\nconst CONTEXT_VARIABLE_NAME = new RawContextKey('variableName', false, {\n  type: 'string',\n  description: localizeWithPath(_moduleId, 51, \"Name of the variable, present for debug visualization clauses.\")\n});\nconst CONTEXT_VARIABLE_LANGUAGE = new RawContextKey('variableLanguage', false, {\n  type: 'string',\n  description: localizeWithPath(_moduleId, 52, \"Language of the variable source, present for debug visualization clauses.\")\n});\nconst CONTEXT_VARIABLE_EXTENSIONID = new RawContextKey('variableExtensionId', false, {\n  type: 'string',\n  description: localizeWithPath(_moduleId, 53, \"Extension ID of the variable source, present for debug visualization clauses.\")\n});\nconst CONTEXT_EXCEPTION_WIDGET_VISIBLE = new RawContextKey('exceptionWidgetVisible', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 54, \"True when the exception widget is visible.\")\n});\nconst CONTEXT_MULTI_SESSION_REPL = new RawContextKey('multiSessionRepl', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 55, \"True when there is more than 1 debug console.\")\n});\nconst CONTEXT_MULTI_SESSION_DEBUG = new RawContextKey('multiSessionDebug', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 56, \"True when there is more than 1 active debug session.\")\n});\nconst CONTEXT_DISASSEMBLE_REQUEST_SUPPORTED = new RawContextKey('disassembleRequestSupported', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 57, \"True when the focused sessions supports disassemble request.\")\n});\nconst CONTEXT_DISASSEMBLY_VIEW_FOCUS = new RawContextKey('disassemblyViewFocus', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 58, \"True when the Disassembly View is focused.\")\n});\nconst CONTEXT_LANGUAGE_SUPPORTS_DISASSEMBLE_REQUEST = new RawContextKey('languageSupportsDisassembleRequest', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 59, \"True when the language in the current editor supports disassemble request.\")\n});\nconst CONTEXT_FOCUSED_STACK_FRAME_HAS_INSTRUCTION_POINTER_REFERENCE = new RawContextKey('focusedStackFrameHasInstructionReference', false, {\n  type: 'boolean',\n  description: localizeWithPath(_moduleId, 60, \"True when the focused stack frame has instruction pointer reference.\")\n});\nconst debuggerDisabledMessage = debugType => localizeWithPath(_moduleId, 61, \"Configured debug type '{0}' is installed but not supported in this environment.\", debugType);\nconst EDITOR_CONTRIBUTION_ID = 'editor.contrib.debug';\nconst BREAKPOINT_EDITOR_CONTRIBUTION_ID = 'editor.contrib.breakpoint';\nconst DEBUG_SCHEME = 'debug';\nconst INTERNAL_CONSOLE_OPTIONS_SCHEMA = {\n  enum: ['neverOpen', 'openOnSessionStart', 'openOnFirstSessionStart'],\n  default: 'openOnFirstSessionStart',\n  description: localizeWithPath(_moduleId, 62, \"Controls when the internal Debug Console should open.\")\n};\nfunction getStateLabel(state) {\n  switch (state) {\n    case 1:\n      return 'initializing';\n    case 2:\n      return 'stopped';\n    case 3:\n      return 'running';\n    default:\n      return 'inactive';\n  }\n}\nconst DEBUG_MEMORY_SCHEME = 'vscode-debug-memory';\nfunction isFrameDeemphasized(frame) {\n  return frame.source.presentationHint === 'deemphasize' || frame.presentationHint === 'deemphasize' || frame.presentationHint === 'subtle';\n}\nvar DebugConfigurationProviderTriggerKind;\n(function (DebugConfigurationProviderTriggerKind) {\n  DebugConfigurationProviderTriggerKind[DebugConfigurationProviderTriggerKind[\"Initial\"] = 1] = \"Initial\";\n  DebugConfigurationProviderTriggerKind[DebugConfigurationProviderTriggerKind[\"Dynamic\"] = 2] = \"Dynamic\";\n})(DebugConfigurationProviderTriggerKind || (DebugConfigurationProviderTriggerKind = {}));\nvar DebuggerString;\n(function (DebuggerString) {\n  DebuggerString[\"UnverifiedBreakpoints\"] = \"unverifiedBreakpoints\";\n})(DebuggerString || (DebuggerString = {}));\nvar IDebugVisualization;\n(function (IDebugVisualization) {\n  IDebugVisualization.deserialize = v => ({\n    id: v.id,\n    name: v.name,\n    iconPath: v.iconPath && {\n      light: URI.revive(v.iconPath.light),\n      dark: URI.revive(v.iconPath.dark)\n    },\n    iconClass: v.iconClass,\n    visualization: v.visualization\n  });\n  IDebugVisualization.serialize = visualizer => visualizer;\n})(IDebugVisualization || (IDebugVisualization = {}));\nexport { BREAKPOINTS_VIEW_ID, BREAKPOINT_EDITOR_CONTRIBUTION_ID, CALLSTACK_VIEW_ID, CONTEXT_BREAKPOINTS_EXIST, CONTEXT_BREAKPOINTS_FOCUSED, CONTEXT_BREAKPOINT_HAS_MODES, CONTEXT_BREAKPOINT_INPUT_FOCUSED, CONTEXT_BREAKPOINT_ITEM_IS_DATA_BYTES, CONTEXT_BREAKPOINT_ITEM_TYPE, CONTEXT_BREAKPOINT_SUPPORTS_CONDITION, CONTEXT_BREAKPOINT_WIDGET_VISIBLE, CONTEXT_BREAK_WHEN_VALUE_CHANGES_SUPPORTED, CONTEXT_BREAK_WHEN_VALUE_IS_ACCESSED_SUPPORTED, CONTEXT_BREAK_WHEN_VALUE_IS_READ_SUPPORTED, CONTEXT_CALLSTACK_ITEM_STOPPED, CONTEXT_CALLSTACK_ITEM_TYPE, CONTEXT_CALLSTACK_SESSION_HAS_ONE_THREAD, CONTEXT_CALLSTACK_SESSION_IS_ATTACH, CONTEXT_CAN_VIEW_MEMORY, CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_DEBUG_CONFIGURATION_TYPE, CONTEXT_DEBUG_EXTENSION_AVAILABLE, CONTEXT_DEBUG_PROTOCOL_VARIABLE_MENU_CONTEXT, CONTEXT_DEBUG_STATE, CONTEXT_DEBUG_TYPE, CONTEXT_DEBUG_UX, CONTEXT_DEBUG_UX_KEY, CONTEXT_DISASSEMBLE_REQUEST_SUPPORTED, CONTEXT_DISASSEMBLY_VIEW_FOCUS, CONTEXT_EXCEPTION_WIDGET_VISIBLE, CONTEXT_EXPRESSION_SELECTED, CONTEXT_FOCUSED_SESSION_IS_ATTACH, CONTEXT_FOCUSED_SESSION_IS_NO_DEBUG, CONTEXT_FOCUSED_STACK_FRAME_HAS_INSTRUCTION_POINTER_REFERENCE, CONTEXT_HAS_DEBUGGED, CONTEXT_IN_BREAKPOINT_WIDGET, CONTEXT_IN_DEBUG_MODE, CONTEXT_IN_DEBUG_REPL, CONTEXT_JUMP_TO_CURSOR_SUPPORTED, CONTEXT_LANGUAGE_SUPPORTS_DISASSEMBLE_REQUEST, CONTEXT_LOADED_SCRIPTS_ITEM_TYPE, CONTEXT_LOADED_SCRIPTS_SUPPORTED, CONTEXT_MULTI_SESSION_DEBUG, CONTEXT_MULTI_SESSION_REPL, CONTEXT_RESTART_FRAME_SUPPORTED, CONTEXT_SET_DATA_BREAKPOINT_BYTES_SUPPORTED, CONTEXT_SET_EXPRESSION_SUPPORTED, CONTEXT_SET_VARIABLE_SUPPORTED, CONTEXT_STACK_FRAME_SUPPORTS_RESTART, CONTEXT_STEP_BACK_SUPPORTED, CONTEXT_STEP_INTO_TARGETS_SUPPORTED, CONTEXT_SUSPEND_DEBUGGEE_SUPPORTED, CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED, CONTEXT_VARIABLES_FOCUSED, CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT, CONTEXT_VARIABLE_EXTENSIONID, CONTEXT_VARIABLE_INTERFACES, CONTEXT_VARIABLE_IS_READONLY, CONTEXT_VARIABLE_LANGUAGE, CONTEXT_VARIABLE_NAME, CONTEXT_VARIABLE_TYPE, CONTEXT_VARIABLE_VALUE, CONTEXT_WATCH_EXPRESSIONS_EXIST, CONTEXT_WATCH_EXPRESSIONS_FOCUSED, CONTEXT_WATCH_ITEM_TYPE, DEBUG_MEMORY_SCHEME, DEBUG_PANEL_ID, DEBUG_SCHEME, DISASSEMBLY_VIEW_ID, DebugConfigurationProviderTriggerKind, DebuggerString, EDITOR_CONTRIBUTION_ID, IDebugVisualization, INTERNAL_CONSOLE_OPTIONS_SCHEMA, LOADED_SCRIPTS_VIEW_ID, REPL_VIEW_ID, VARIABLES_VIEW_ID, VIEWLET_ID, WATCH_VIEW_ID, debuggerDisabledMessage, getStateLabel, isFrameDeemphasized };","map":{"version":3,"names":["URI","localizeWithPath","RawContextKey","_moduleId","VIEWLET_ID","VARIABLES_VIEW_ID","WATCH_VIEW_ID","CALLSTACK_VIEW_ID","LOADED_SCRIPTS_VIEW_ID","BREAKPOINTS_VIEW_ID","DISASSEMBLY_VIEW_ID","DEBUG_PANEL_ID","REPL_VIEW_ID","CONTEXT_DEBUG_TYPE","undefined","type","description","CONTEXT_DEBUG_CONFIGURATION_TYPE","CONTEXT_DEBUG_STATE","CONTEXT_DEBUG_UX_KEY","CONTEXT_DEBUG_UX","CONTEXT_HAS_DEBUGGED","CONTEXT_IN_DEBUG_MODE","CONTEXT_IN_DEBUG_REPL","CONTEXT_BREAKPOINT_WIDGET_VISIBLE","CONTEXT_IN_BREAKPOINT_WIDGET","CONTEXT_BREAKPOINTS_FOCUSED","CONTEXT_WATCH_EXPRESSIONS_FOCUSED","CONTEXT_WATCH_EXPRESSIONS_EXIST","CONTEXT_VARIABLES_FOCUSED","CONTEXT_EXPRESSION_SELECTED","CONTEXT_BREAKPOINT_INPUT_FOCUSED","CONTEXT_CALLSTACK_ITEM_TYPE","CONTEXT_CALLSTACK_SESSION_IS_ATTACH","CONTEXT_CALLSTACK_ITEM_STOPPED","CONTEXT_CALLSTACK_SESSION_HAS_ONE_THREAD","CONTEXT_WATCH_ITEM_TYPE","CONTEXT_CAN_VIEW_MEMORY","CONTEXT_BREAKPOINT_ITEM_TYPE","CONTEXT_BREAKPOINT_ITEM_IS_DATA_BYTES","CONTEXT_BREAKPOINT_HAS_MODES","CONTEXT_BREAKPOINT_SUPPORTS_CONDITION","CONTEXT_LOADED_SCRIPTS_SUPPORTED","CONTEXT_LOADED_SCRIPTS_ITEM_TYPE","CONTEXT_FOCUSED_SESSION_IS_ATTACH","CONTEXT_FOCUSED_SESSION_IS_NO_DEBUG","CONTEXT_STEP_BACK_SUPPORTED","CONTEXT_RESTART_FRAME_SUPPORTED","CONTEXT_STACK_FRAME_SUPPORTS_RESTART","CONTEXT_JUMP_TO_CURSOR_SUPPORTED","CONTEXT_STEP_INTO_TARGETS_SUPPORTED","CONTEXT_BREAKPOINTS_EXIST","CONTEXT_DEBUGGERS_AVAILABLE","CONTEXT_DEBUG_EXTENSION_AVAILABLE","CONTEXT_DEBUG_PROTOCOL_VARIABLE_MENU_CONTEXT","CONTEXT_SET_VARIABLE_SUPPORTED","CONTEXT_SET_DATA_BREAKPOINT_BYTES_SUPPORTED","CONTEXT_SET_EXPRESSION_SUPPORTED","CONTEXT_BREAK_WHEN_VALUE_CHANGES_SUPPORTED","CONTEXT_BREAK_WHEN_VALUE_IS_ACCESSED_SUPPORTED","CONTEXT_BREAK_WHEN_VALUE_IS_READ_SUPPORTED","CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED","CONTEXT_SUSPEND_DEBUGGEE_SUPPORTED","CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT","CONTEXT_VARIABLE_IS_READONLY","CONTEXT_VARIABLE_VALUE","CONTEXT_VARIABLE_TYPE","CONTEXT_VARIABLE_INTERFACES","CONTEXT_VARIABLE_NAME","CONTEXT_VARIABLE_LANGUAGE","CONTEXT_VARIABLE_EXTENSIONID","CONTEXT_EXCEPTION_WIDGET_VISIBLE","CONTEXT_MULTI_SESSION_REPL","CONTEXT_MULTI_SESSION_DEBUG","CONTEXT_DISASSEMBLE_REQUEST_SUPPORTED","CONTEXT_DISASSEMBLY_VIEW_FOCUS","CONTEXT_LANGUAGE_SUPPORTS_DISASSEMBLE_REQUEST","CONTEXT_FOCUSED_STACK_FRAME_HAS_INSTRUCTION_POINTER_REFERENCE","debuggerDisabledMessage","debugType","EDITOR_CONTRIBUTION_ID","BREAKPOINT_EDITOR_CONTRIBUTION_ID","DEBUG_SCHEME","INTERNAL_CONSOLE_OPTIONS_SCHEMA","enum","default","getStateLabel","state","DEBUG_MEMORY_SCHEME","isFrameDeemphasized","frame","source","presentationHint","DebugConfigurationProviderTriggerKind","DebuggerString","IDebugVisualization","deserialize","v","id","name","iconPath","light","revive","dark","iconClass","visualization","serialize","visualizer"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode/vscode/src/vs/workbench/contrib/debug/common/debug.js"],"sourcesContent":["import { URI } from '../../../../base/common/uri.js';\nimport { localizeWithPath } from '../../../../nls.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nconst _moduleId = \"vs/workbench/contrib/debug/common/debug\";\nconst VIEWLET_ID = 'workbench.view.debug';\nconst VARIABLES_VIEW_ID = 'workbench.debug.variablesView';\nconst WATCH_VIEW_ID = 'workbench.debug.watchExpressionsView';\nconst CALLSTACK_VIEW_ID = 'workbench.debug.callStackView';\nconst LOADED_SCRIPTS_VIEW_ID = 'workbench.debug.loadedScriptsView';\nconst BREAKPOINTS_VIEW_ID = 'workbench.debug.breakPointsView';\nconst DISASSEMBLY_VIEW_ID = 'workbench.debug.disassemblyView';\nconst DEBUG_PANEL_ID = 'workbench.panel.repl';\nconst REPL_VIEW_ID = 'workbench.panel.repl.view';\nconst CONTEXT_DEBUG_TYPE = ( (new RawContextKey('debugType', undefined, { type: 'string', description: ( localizeWithPath(\n    _moduleId,\n    0,\n    \"Debug type of the active debug session. For example 'python'.\"\n)) })));\nconst CONTEXT_DEBUG_CONFIGURATION_TYPE = ( (new RawContextKey(\n    'debugConfigurationType',\n    undefined,\n    { type: 'string', description: ( localizeWithPath(\n        _moduleId,\n        1,\n        \"Debug type of the selected launch configuration. For example 'python'.\"\n    )) }\n)));\nconst CONTEXT_DEBUG_STATE = ( (new RawContextKey('debugState', 'inactive', { type: 'string', description: ( localizeWithPath(\n    _moduleId,\n    2,\n    \"State that the focused debug session is in. One of the following: 'inactive', 'initializing', 'stopped' or 'running'.\"\n)) })));\nconst CONTEXT_DEBUG_UX_KEY = 'debugUx';\nconst CONTEXT_DEBUG_UX = ( (new RawContextKey(\n    CONTEXT_DEBUG_UX_KEY,\n    'default',\n    { type: 'string', description: ( localizeWithPath(\n        _moduleId,\n        3,\n        \"Debug UX state. When there are no debug configurations it is 'simple', otherwise 'default'. Used to decide when to show welcome views in the debug viewlet.\"\n    )) }\n)));\nconst CONTEXT_HAS_DEBUGGED = ( (new RawContextKey('hasDebugged', false, { type: 'boolean', description: ( localizeWithPath(\n    _moduleId,\n    4,\n    \"True when a debug session has been started at least once, false otherwise.\"\n)) })));\nconst CONTEXT_IN_DEBUG_MODE = ( (new RawContextKey('inDebugMode', false, { type: 'boolean', description: ( localizeWithPath(_moduleId, 5, \"True when debugging, false otherwise.\")) })));\nconst CONTEXT_IN_DEBUG_REPL = ( (new RawContextKey('inDebugRepl', false, { type: 'boolean', description: ( localizeWithPath(_moduleId, 6, \"True when focus is in the debug console, false otherwise.\")) })));\nconst CONTEXT_BREAKPOINT_WIDGET_VISIBLE = ( (new RawContextKey(\n    'breakpointWidgetVisible',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        7,\n        \"True when breakpoint editor zone widget is visible, false otherwise.\"\n    )) }\n)));\nconst CONTEXT_IN_BREAKPOINT_WIDGET = ( (new RawContextKey(\n    'inBreakpointWidget',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        8,\n        \"True when focus is in the breakpoint editor zone widget, false otherwise.\"\n    )) }\n)));\nconst CONTEXT_BREAKPOINTS_FOCUSED = ( (new RawContextKey('breakpointsFocused', true, { type: 'boolean', description: ( localizeWithPath(\n    _moduleId,\n    9,\n    \"True when the BREAKPOINTS view is focused, false otherwise.\"\n)) })));\nconst CONTEXT_WATCH_EXPRESSIONS_FOCUSED = ( (new RawContextKey(\n    'watchExpressionsFocused',\n    true,\n    { type: 'boolean', description: ( localizeWithPath(_moduleId, 10, \"True when the WATCH view is focused, false otherwsie.\")) }\n)));\nconst CONTEXT_WATCH_EXPRESSIONS_EXIST = ( (new RawContextKey(\n    'watchExpressionsExist',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        11,\n        \"True when at least one watch expression exists, false otherwise.\"\n    )) }\n)));\nconst CONTEXT_VARIABLES_FOCUSED = ( (new RawContextKey('variablesFocused', true, { type: 'boolean', description: ( localizeWithPath(_moduleId, 12, \"True when the VARIABLES views is focused, false otherwsie\")) })));\nconst CONTEXT_EXPRESSION_SELECTED = ( (new RawContextKey(\n    'expressionSelected',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        13,\n        \"True when an expression input box is open in either the WATCH or the VARIABLES view, false otherwise.\"\n    )) }\n)));\nconst CONTEXT_BREAKPOINT_INPUT_FOCUSED = ( (new RawContextKey(\n    'breakpointInputFocused',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        14,\n        \"True when the input box has focus in the BREAKPOINTS view.\"\n    )) }\n)));\nconst CONTEXT_CALLSTACK_ITEM_TYPE = ( (new RawContextKey(\n    'callStackItemType',\n    undefined,\n    { type: 'string', description: ( localizeWithPath(\n        _moduleId,\n        15,\n        \"Represents the item type of the focused element in the CALL STACK view. For example: 'session', 'thread', 'stackFrame'\"\n    )) }\n)));\nconst CONTEXT_CALLSTACK_SESSION_IS_ATTACH = ( (new RawContextKey(\n    'callStackSessionIsAttach',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        16,\n        \"True when the session in the CALL STACK view is attach, false otherwise. Used internally for inline menus in the CALL STACK view.\"\n    )) }\n)));\nconst CONTEXT_CALLSTACK_ITEM_STOPPED = ( (new RawContextKey(\n    'callStackItemStopped',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        17,\n        \"True when the focused item in the CALL STACK is stopped. Used internaly for inline menus in the CALL STACK view.\"\n    )) }\n)));\nconst CONTEXT_CALLSTACK_SESSION_HAS_ONE_THREAD = ( (new RawContextKey(\n    'callStackSessionHasOneThread',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        18,\n        \"True when the focused session in the CALL STACK view has exactly one thread. Used internally for inline menus in the CALL STACK view.\"\n    )) }\n)));\nconst CONTEXT_WATCH_ITEM_TYPE = ( (new RawContextKey('watchItemType', undefined, { type: 'string', description: ( localizeWithPath(\n    _moduleId,\n    19,\n    \"Represents the item type of the focused element in the WATCH view. For example: 'expression', 'variable'\"\n)) })));\nconst CONTEXT_CAN_VIEW_MEMORY = ( (new RawContextKey('canViewMemory', undefined, { type: 'boolean', description: ( localizeWithPath(\n    _moduleId,\n    20,\n    \"Indicates whether the item in the view has an associated memory refrence.\"\n)) })));\nconst CONTEXT_BREAKPOINT_ITEM_TYPE = ( (new RawContextKey(\n    'breakpointItemType',\n    undefined,\n    { type: 'string', description: ( localizeWithPath(\n        _moduleId,\n        21,\n        \"Represents the item type of the focused element in the BREAKPOINTS view. For example: 'breakpoint', 'exceptionBreakppint', 'functionBreakpoint', 'dataBreakpoint'\"\n    )) }\n)));\nconst CONTEXT_BREAKPOINT_ITEM_IS_DATA_BYTES = ( (new RawContextKey(\n    'breakpointItemBytes',\n    undefined,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        22,\n        \"Whether the breakpoint item is a data breakpoint on a byte range.\"\n    )) }\n)));\nconst CONTEXT_BREAKPOINT_HAS_MODES = ( (new RawContextKey(\n    'breakpointHasModes',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        23,\n        \"Whether the breakpoint has multiple modes it can switch to.\"\n    )) }\n)));\nconst CONTEXT_BREAKPOINT_SUPPORTS_CONDITION = ( (new RawContextKey(\n    'breakpointSupportsCondition',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(_moduleId, 24, \"True when the focused breakpoint supports conditions.\")) }\n)));\nconst CONTEXT_LOADED_SCRIPTS_SUPPORTED = ( (new RawContextKey(\n    'loadedScriptsSupported',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        25,\n        \"True when the focused sessions supports the LOADED SCRIPTS view\"\n    )) }\n)));\nconst CONTEXT_LOADED_SCRIPTS_ITEM_TYPE = ( (new RawContextKey(\n    'loadedScriptsItemType',\n    undefined,\n    { type: 'string', description: ( localizeWithPath(\n        _moduleId,\n        26,\n        \"Represents the item type of the focused element in the LOADED SCRIPTS view.\"\n    )) }\n)));\nconst CONTEXT_FOCUSED_SESSION_IS_ATTACH = ( (new RawContextKey(\n    'focusedSessionIsAttach',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(_moduleId, 27, \"True when the focused session is 'attach'.\")) }\n)));\nconst CONTEXT_FOCUSED_SESSION_IS_NO_DEBUG = ( (new RawContextKey(\n    'focusedSessionIsNoDebug',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(_moduleId, 28, \"True when the focused session is run without debugging.\")) }\n)));\nconst CONTEXT_STEP_BACK_SUPPORTED = ( (new RawContextKey('stepBackSupported', false, { type: 'boolean', description: ( localizeWithPath(\n    _moduleId,\n    29,\n    \"True when the focused session supports 'stepBack' requests.\"\n)) })));\nconst CONTEXT_RESTART_FRAME_SUPPORTED = ( (new RawContextKey(\n    'restartFrameSupported',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        30,\n        \"True when the focused session supports 'restartFrame' requests.\"\n    )) }\n)));\nconst CONTEXT_STACK_FRAME_SUPPORTS_RESTART = ( (new RawContextKey(\n    'stackFrameSupportsRestart',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(_moduleId, 31, \"True when the focused stack frame suppots 'restartFrame'.\")) }\n)));\nconst CONTEXT_JUMP_TO_CURSOR_SUPPORTED = ( (new RawContextKey(\n    'jumpToCursorSupported',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        32,\n        \"True when the focused session supports 'jumpToCursor' request.\"\n    )) }\n)));\nconst CONTEXT_STEP_INTO_TARGETS_SUPPORTED = ( (new RawContextKey(\n    'stepIntoTargetsSupported',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        33,\n        \"True when the focused session supports 'stepIntoTargets' request.\"\n    )) }\n)));\nconst CONTEXT_BREAKPOINTS_EXIST = ( (new RawContextKey('breakpointsExist', false, { type: 'boolean', description: ( localizeWithPath(_moduleId, 34, \"True when at least one breakpoint exists.\")) })));\nconst CONTEXT_DEBUGGERS_AVAILABLE = ( (new RawContextKey(\n    'debuggersAvailable',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(_moduleId, 35, \"True when there is at least one debug extensions active.\")) }\n)));\nconst CONTEXT_DEBUG_EXTENSION_AVAILABLE = ( (new RawContextKey(\n    'debugExtensionAvailable',\n    true,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        36,\n        \"True when there is at least one debug extension installed and enabled.\"\n    )) }\n)));\nconst CONTEXT_DEBUG_PROTOCOL_VARIABLE_MENU_CONTEXT = ( (new RawContextKey(\n    'debugProtocolVariableMenuContext',\n    undefined,\n    { type: 'string', description: ( localizeWithPath(\n        _moduleId,\n        37,\n        \"Represents the context the debug adapter sets on the focused variable in the VARIABLES view.\"\n    )) }\n)));\nconst CONTEXT_SET_VARIABLE_SUPPORTED = ( (new RawContextKey(\n    'debugSetVariableSupported',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        38,\n        \"True when the focused session supports 'setVariable' request.\"\n    )) }\n)));\nconst CONTEXT_SET_DATA_BREAKPOINT_BYTES_SUPPORTED = ( (new RawContextKey(\n    'debugSetDataBreakpointAddressSupported',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        39,\n        \"True when the focused session supports 'getBreakpointInfo' request on an address.\"\n    )) }\n)));\nconst CONTEXT_SET_EXPRESSION_SUPPORTED = ( (new RawContextKey(\n    'debugSetExpressionSupported',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        40,\n        \"True when the focused session supports 'setExpression' request.\"\n    )) }\n)));\nconst CONTEXT_BREAK_WHEN_VALUE_CHANGES_SUPPORTED = ( (new RawContextKey(\n    'breakWhenValueChangesSupported',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        41,\n        \"True when the focused session supports to break when value changes.\"\n    )) }\n)));\nconst CONTEXT_BREAK_WHEN_VALUE_IS_ACCESSED_SUPPORTED = ( (new RawContextKey(\n    'breakWhenValueIsAccessedSupported',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        42,\n        \"True when the focused breakpoint supports to break when value is accessed.\"\n    )) }\n)));\nconst CONTEXT_BREAK_WHEN_VALUE_IS_READ_SUPPORTED = ( (new RawContextKey(\n    'breakWhenValueIsReadSupported',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        43,\n        \"True when the focused breakpoint supports to break when value is read.\"\n    )) }\n)));\nconst CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED = ( (new RawContextKey(\n    'terminateDebuggeeSupported',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        44,\n        \"True when the focused session supports the terminate debuggee capability.\"\n    )) }\n)));\nconst CONTEXT_SUSPEND_DEBUGGEE_SUPPORTED = ( (new RawContextKey(\n    'suspendDebuggeeSupported',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        45,\n        \"True when the focused session supports the suspend debuggee capability.\"\n    )) }\n)));\nconst CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT = ( (new RawContextKey(\n    'variableEvaluateNamePresent',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        46,\n        \"True when the focused variable has an 'evalauteName' field set.\"\n    )) }\n)));\nconst CONTEXT_VARIABLE_IS_READONLY = ( (new RawContextKey(\n    'variableIsReadonly',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(_moduleId, 47, \"True when the focused variable is read-only.\")) }\n)));\nconst CONTEXT_VARIABLE_VALUE = ( (new RawContextKey('variableValue', false, { type: 'string', description: ( localizeWithPath(\n    _moduleId,\n    48,\n    \"Value of the variable, present for debug visualization clauses.\"\n)) })));\nconst CONTEXT_VARIABLE_TYPE = ( (new RawContextKey('variableType', false, { type: 'string', description: ( localizeWithPath(\n    _moduleId,\n    49,\n    \"Type of the variable, present for debug visualization clauses.\"\n)) })));\nconst CONTEXT_VARIABLE_INTERFACES = ( (new RawContextKey('variableInterfaces', false, { type: 'array', description: ( localizeWithPath(\n    _moduleId,\n    50,\n    \"Any interfaces or contracts that the variable satisfies, present for debug visualization clauses.\"\n)) })));\nconst CONTEXT_VARIABLE_NAME = ( (new RawContextKey('variableName', false, { type: 'string', description: ( localizeWithPath(\n    _moduleId,\n    51,\n    \"Name of the variable, present for debug visualization clauses.\"\n)) })));\nconst CONTEXT_VARIABLE_LANGUAGE = ( (new RawContextKey('variableLanguage', false, { type: 'string', description: ( localizeWithPath(\n    _moduleId,\n    52,\n    \"Language of the variable source, present for debug visualization clauses.\"\n)) })));\nconst CONTEXT_VARIABLE_EXTENSIONID = ( (new RawContextKey(\n    'variableExtensionId',\n    false,\n    { type: 'string', description: ( localizeWithPath(\n        _moduleId,\n        53,\n        \"Extension ID of the variable source, present for debug visualization clauses.\"\n    )) }\n)));\nconst CONTEXT_EXCEPTION_WIDGET_VISIBLE = ( (new RawContextKey(\n    'exceptionWidgetVisible',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(_moduleId, 54, \"True when the exception widget is visible.\")) }\n)));\nconst CONTEXT_MULTI_SESSION_REPL = ( (new RawContextKey('multiSessionRepl', false, { type: 'boolean', description: ( localizeWithPath(_moduleId, 55, \"True when there is more than 1 debug console.\")) })));\nconst CONTEXT_MULTI_SESSION_DEBUG = ( (new RawContextKey('multiSessionDebug', false, { type: 'boolean', description: ( localizeWithPath(_moduleId, 56, \"True when there is more than 1 active debug session.\")) })));\nconst CONTEXT_DISASSEMBLE_REQUEST_SUPPORTED = ( (new RawContextKey(\n    'disassembleRequestSupported',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        57,\n        \"True when the focused sessions supports disassemble request.\"\n    )) }\n)));\nconst CONTEXT_DISASSEMBLY_VIEW_FOCUS = ( (new RawContextKey(\n    'disassemblyViewFocus',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(_moduleId, 58, \"True when the Disassembly View is focused.\")) }\n)));\nconst CONTEXT_LANGUAGE_SUPPORTS_DISASSEMBLE_REQUEST = ( (new RawContextKey(\n    'languageSupportsDisassembleRequest',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        59,\n        \"True when the language in the current editor supports disassemble request.\"\n    )) }\n)));\nconst CONTEXT_FOCUSED_STACK_FRAME_HAS_INSTRUCTION_POINTER_REFERENCE = ( (new RawContextKey(\n    'focusedStackFrameHasInstructionReference',\n    false,\n    { type: 'boolean', description: ( localizeWithPath(\n        _moduleId,\n        60,\n        \"True when the focused stack frame has instruction pointer reference.\"\n    )) }\n)));\nconst debuggerDisabledMessage = (debugType) => ( localizeWithPath(\n    _moduleId,\n    61,\n    \"Configured debug type '{0}' is installed but not supported in this environment.\",\n    debugType\n));\nconst EDITOR_CONTRIBUTION_ID = 'editor.contrib.debug';\nconst BREAKPOINT_EDITOR_CONTRIBUTION_ID = 'editor.contrib.breakpoint';\nconst DEBUG_SCHEME = 'debug';\nconst INTERNAL_CONSOLE_OPTIONS_SCHEMA = {\n    enum: ['neverOpen', 'openOnSessionStart', 'openOnFirstSessionStart'],\n    default: 'openOnFirstSessionStart',\n    description: ( localizeWithPath(_moduleId, 62, \"Controls when the internal Debug Console should open.\"))\n};\nfunction getStateLabel(state) {\n    switch (state) {\n        case 1 : return 'initializing';\n        case 2 : return 'stopped';\n        case 3 : return 'running';\n        default: return 'inactive';\n    }\n}\nconst DEBUG_MEMORY_SCHEME = 'vscode-debug-memory';\nfunction isFrameDeemphasized(frame) {\n    return frame.source.presentationHint === 'deemphasize' || frame.presentationHint === 'deemphasize' || frame.presentationHint === 'subtle';\n}\nvar DebugConfigurationProviderTriggerKind;\n( ((function(DebugConfigurationProviderTriggerKind) {\n    DebugConfigurationProviderTriggerKind[DebugConfigurationProviderTriggerKind[\"Initial\"] = 1] = \"Initial\";\n    DebugConfigurationProviderTriggerKind[DebugConfigurationProviderTriggerKind[\"Dynamic\"] = 2] = \"Dynamic\";\n})(\n    DebugConfigurationProviderTriggerKind || (DebugConfigurationProviderTriggerKind = {})\n)));\nvar DebuggerString;\n( ((function(DebuggerString) {\n    DebuggerString[\"UnverifiedBreakpoints\"] = \"unverifiedBreakpoints\";\n})(DebuggerString || (DebuggerString = {}))));\nvar IDebugVisualization;\n( ((function(IDebugVisualization) {\n    IDebugVisualization.deserialize = (v) => ({\n        id: v.id,\n        name: v.name,\n        iconPath: v.iconPath && { light: URI.revive(v.iconPath.light), dark: URI.revive(v.iconPath.dark) },\n        iconClass: v.iconClass,\n        visualization: v.visualization,\n    });\n    IDebugVisualization.serialize = (visualizer) => visualizer;\n})(IDebugVisualization || (IDebugVisualization = {}))));\nexport { BREAKPOINTS_VIEW_ID, BREAKPOINT_EDITOR_CONTRIBUTION_ID, CALLSTACK_VIEW_ID, CONTEXT_BREAKPOINTS_EXIST, CONTEXT_BREAKPOINTS_FOCUSED, CONTEXT_BREAKPOINT_HAS_MODES, CONTEXT_BREAKPOINT_INPUT_FOCUSED, CONTEXT_BREAKPOINT_ITEM_IS_DATA_BYTES, CONTEXT_BREAKPOINT_ITEM_TYPE, CONTEXT_BREAKPOINT_SUPPORTS_CONDITION, CONTEXT_BREAKPOINT_WIDGET_VISIBLE, CONTEXT_BREAK_WHEN_VALUE_CHANGES_SUPPORTED, CONTEXT_BREAK_WHEN_VALUE_IS_ACCESSED_SUPPORTED, CONTEXT_BREAK_WHEN_VALUE_IS_READ_SUPPORTED, CONTEXT_CALLSTACK_ITEM_STOPPED, CONTEXT_CALLSTACK_ITEM_TYPE, CONTEXT_CALLSTACK_SESSION_HAS_ONE_THREAD, CONTEXT_CALLSTACK_SESSION_IS_ATTACH, CONTEXT_CAN_VIEW_MEMORY, CONTEXT_DEBUGGERS_AVAILABLE, CONTEXT_DEBUG_CONFIGURATION_TYPE, CONTEXT_DEBUG_EXTENSION_AVAILABLE, CONTEXT_DEBUG_PROTOCOL_VARIABLE_MENU_CONTEXT, CONTEXT_DEBUG_STATE, CONTEXT_DEBUG_TYPE, CONTEXT_DEBUG_UX, CONTEXT_DEBUG_UX_KEY, CONTEXT_DISASSEMBLE_REQUEST_SUPPORTED, CONTEXT_DISASSEMBLY_VIEW_FOCUS, CONTEXT_EXCEPTION_WIDGET_VISIBLE, CONTEXT_EXPRESSION_SELECTED, CONTEXT_FOCUSED_SESSION_IS_ATTACH, CONTEXT_FOCUSED_SESSION_IS_NO_DEBUG, CONTEXT_FOCUSED_STACK_FRAME_HAS_INSTRUCTION_POINTER_REFERENCE, CONTEXT_HAS_DEBUGGED, CONTEXT_IN_BREAKPOINT_WIDGET, CONTEXT_IN_DEBUG_MODE, CONTEXT_IN_DEBUG_REPL, CONTEXT_JUMP_TO_CURSOR_SUPPORTED, CONTEXT_LANGUAGE_SUPPORTS_DISASSEMBLE_REQUEST, CONTEXT_LOADED_SCRIPTS_ITEM_TYPE, CONTEXT_LOADED_SCRIPTS_SUPPORTED, CONTEXT_MULTI_SESSION_DEBUG, CONTEXT_MULTI_SESSION_REPL, CONTEXT_RESTART_FRAME_SUPPORTED, CONTEXT_SET_DATA_BREAKPOINT_BYTES_SUPPORTED, CONTEXT_SET_EXPRESSION_SUPPORTED, CONTEXT_SET_VARIABLE_SUPPORTED, CONTEXT_STACK_FRAME_SUPPORTS_RESTART, CONTEXT_STEP_BACK_SUPPORTED, CONTEXT_STEP_INTO_TARGETS_SUPPORTED, CONTEXT_SUSPEND_DEBUGGEE_SUPPORTED, CONTEXT_TERMINATE_DEBUGGEE_SUPPORTED, CONTEXT_VARIABLES_FOCUSED, CONTEXT_VARIABLE_EVALUATE_NAME_PRESENT, CONTEXT_VARIABLE_EXTENSIONID, CONTEXT_VARIABLE_INTERFACES, CONTEXT_VARIABLE_IS_READONLY, CONTEXT_VARIABLE_LANGUAGE, CONTEXT_VARIABLE_NAME, CONTEXT_VARIABLE_TYPE, CONTEXT_VARIABLE_VALUE, CONTEXT_WATCH_EXPRESSIONS_EXIST, CONTEXT_WATCH_EXPRESSIONS_FOCUSED, CONTEXT_WATCH_ITEM_TYPE, DEBUG_MEMORY_SCHEME, DEBUG_PANEL_ID, DEBUG_SCHEME, DISASSEMBLY_VIEW_ID, DebugConfigurationProviderTriggerKind, DebuggerString, EDITOR_CONTRIBUTION_ID, IDebugVisualization, INTERNAL_CONSOLE_OPTIONS_SCHEMA, LOADED_SCRIPTS_VIEW_ID, REPL_VIEW_ID, VARIABLES_VIEW_ID, VIEWLET_ID, WATCH_VIEW_ID, debuggerDisabledMessage, getStateLabel, isFrameDeemphasized };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}