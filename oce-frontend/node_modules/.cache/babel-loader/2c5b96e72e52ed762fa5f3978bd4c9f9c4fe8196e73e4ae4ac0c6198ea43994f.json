{"ast":null,"code":"import { VSBuffer } from '../../../../base/common/buffer.js';\nimport { isRelativePattern, parse as parse$1 } from '../../../../base/common/glob.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport '../../../../base/common/path.js';\nimport { isWindows } from '../../../../base/common/platform.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { generate, parse } from '../../../services/notebook/common/notebookDocumentService.js';\nconst NOTEBOOK_EDITOR_ID = 'workbench.editor.notebook';\nconst NOTEBOOK_DIFF_EDITOR_ID = 'workbench.editor.notebookTextDiffEditor';\nconst INTERACTIVE_WINDOW_EDITOR_ID = 'workbench.editor.interactive';\nvar CellKind;\n(function (CellKind) {\n  CellKind[CellKind[\"Markup\"] = 1] = \"Markup\";\n  CellKind[CellKind[\"Code\"] = 2] = \"Code\";\n})(CellKind || (CellKind = {}));\nconst NOTEBOOK_DISPLAY_ORDER = ['application/json', 'application/javascript', 'text/html', 'image/svg+xml', Mimes.latex, Mimes.markdown, 'image/png', 'image/jpeg', Mimes.text];\nconst ACCESSIBLE_NOTEBOOK_DISPLAY_ORDER = [Mimes.latex, Mimes.markdown, 'application/json', 'text/html', 'image/svg+xml', 'image/png', 'image/jpeg', Mimes.text];\nconst RENDERER_EQUIVALENT_EXTENSIONS = new Map([['ms-toolsai.jupyter', new Set(['jupyter-notebook', 'interactive'])], ['ms-toolsai.jupyter-renderers', new Set(['jupyter-notebook', 'interactive'])]]);\nconst RENDERER_NOT_AVAILABLE = '_notAvailable';\nvar NotebookCellExecutionState;\n(function (NotebookCellExecutionState) {\n  NotebookCellExecutionState[NotebookCellExecutionState[\"Unconfirmed\"] = 1] = \"Unconfirmed\";\n  NotebookCellExecutionState[NotebookCellExecutionState[\"Pending\"] = 2] = \"Pending\";\n  NotebookCellExecutionState[NotebookCellExecutionState[\"Executing\"] = 3] = \"Executing\";\n})(NotebookCellExecutionState || (NotebookCellExecutionState = {}));\nvar NotebookExecutionState;\n(function (NotebookExecutionState) {\n  NotebookExecutionState[NotebookExecutionState[\"Unconfirmed\"] = 1] = \"Unconfirmed\";\n  NotebookExecutionState[NotebookExecutionState[\"Pending\"] = 2] = \"Pending\";\n  NotebookExecutionState[NotebookExecutionState[\"Executing\"] = 3] = \"Executing\";\n})(NotebookExecutionState || (NotebookExecutionState = {}));\nvar NotebookCellsChangeType;\n(function (NotebookCellsChangeType) {\n  NotebookCellsChangeType[NotebookCellsChangeType[\"ModelChange\"] = 1] = \"ModelChange\";\n  NotebookCellsChangeType[NotebookCellsChangeType[\"Move\"] = 2] = \"Move\";\n  NotebookCellsChangeType[NotebookCellsChangeType[\"ChangeCellLanguage\"] = 5] = \"ChangeCellLanguage\";\n  NotebookCellsChangeType[NotebookCellsChangeType[\"Initialize\"] = 6] = \"Initialize\";\n  NotebookCellsChangeType[NotebookCellsChangeType[\"ChangeCellMetadata\"] = 7] = \"ChangeCellMetadata\";\n  NotebookCellsChangeType[NotebookCellsChangeType[\"Output\"] = 8] = \"Output\";\n  NotebookCellsChangeType[NotebookCellsChangeType[\"OutputItem\"] = 9] = \"OutputItem\";\n  NotebookCellsChangeType[NotebookCellsChangeType[\"ChangeCellContent\"] = 10] = \"ChangeCellContent\";\n  NotebookCellsChangeType[NotebookCellsChangeType[\"ChangeDocumentMetadata\"] = 11] = \"ChangeDocumentMetadata\";\n  NotebookCellsChangeType[NotebookCellsChangeType[\"ChangeCellInternalMetadata\"] = 12] = \"ChangeCellInternalMetadata\";\n  NotebookCellsChangeType[NotebookCellsChangeType[\"ChangeCellMime\"] = 13] = \"ChangeCellMime\";\n  NotebookCellsChangeType[NotebookCellsChangeType[\"Unknown\"] = 100] = \"Unknown\";\n})(NotebookCellsChangeType || (NotebookCellsChangeType = {}));\nvar SelectionStateType;\n(function (SelectionStateType) {\n  SelectionStateType[SelectionStateType[\"Handle\"] = 0] = \"Handle\";\n  SelectionStateType[SelectionStateType[\"Index\"] = 1] = \"Index\";\n})(SelectionStateType || (SelectionStateType = {}));\nvar CellUri;\n(function (CellUri) {\n  CellUri.scheme = Schemas.vscodeNotebookCell;\n  function generate$1(notebook, handle) {\n    return generate(notebook, handle);\n  }\n  CellUri.generate = generate$1;\n  function parse$1(cell) {\n    return parse(cell);\n  }\n  CellUri.parse = parse$1;\n  function generateCellOutputUri(notebook, outputId) {\n    return notebook.with({\n      scheme: Schemas.vscodeNotebookCellOutput,\n      fragment: `op${outputId ?? ''},${notebook.scheme !== Schemas.file ? notebook.scheme : ''}`\n    });\n  }\n  CellUri.generateCellOutputUri = generateCellOutputUri;\n  function parseCellOutputUri(uri) {\n    if (uri.scheme !== Schemas.vscodeNotebookCellOutput) {\n      return;\n    }\n    const match = /^op([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?\\,(.*)$/i.exec(uri.fragment);\n    if (!match) {\n      return undefined;\n    }\n    const outputId = match[1] && match[1] !== '' ? match[1] : undefined;\n    const scheme = match[2];\n    return {\n      outputId,\n      notebook: uri.with({\n        scheme: scheme || Schemas.file,\n        fragment: null\n      })\n    };\n  }\n  CellUri.parseCellOutputUri = parseCellOutputUri;\n  function generateCellPropertyUri(notebook, handle, scheme) {\n    return CellUri.generate(notebook, handle).with({\n      scheme: scheme\n    });\n  }\n  CellUri.generateCellPropertyUri = generateCellPropertyUri;\n  function parseCellPropertyUri(uri, propertyScheme) {\n    if (uri.scheme !== propertyScheme) {\n      return undefined;\n    }\n    return CellUri.parse(uri.with({\n      scheme: CellUri.scheme\n    }));\n  }\n  CellUri.parseCellPropertyUri = parseCellPropertyUri;\n})(CellUri || (CellUri = {}));\nconst normalizeSlashes = str => isWindows ? str.replace(/\\//g, '\\\\') : str;\nclass MimeTypeDisplayOrder {\n  constructor(initialValue = [], defaultOrder = NOTEBOOK_DISPLAY_ORDER) {\n    this.defaultOrder = defaultOrder;\n    this.order = [...new Set(initialValue)].map(pattern => ({\n      pattern,\n      matches: parse$1(normalizeSlashes(pattern))\n    }));\n  }\n  sort(mimetypes) {\n    const remaining = new Map(Iterable.map(mimetypes, m => [m, normalizeSlashes(m)]));\n    let sorted = [];\n    for (const {\n      matches\n    } of this.order) {\n      for (const [original, normalized] of remaining) {\n        if (matches(normalized)) {\n          sorted.push(original);\n          remaining.delete(original);\n          break;\n        }\n      }\n    }\n    if (remaining.size) {\n      sorted = sorted.concat([...remaining.keys()].sort((a, b) => this.defaultOrder.indexOf(a) - this.defaultOrder.indexOf(b)));\n    }\n    return sorted;\n  }\n  prioritize(chosenMimetype, otherMimetypes) {\n    const chosenIndex = this.findIndex(chosenMimetype);\n    if (chosenIndex === -1) {\n      this.order.unshift({\n        pattern: chosenMimetype,\n        matches: parse$1(normalizeSlashes(chosenMimetype))\n      });\n      return;\n    }\n    const uniqueIndicies = new Set(otherMimetypes.map(m => this.findIndex(m, chosenIndex)));\n    uniqueIndicies.delete(-1);\n    const otherIndices = Array.from(uniqueIndicies).sort();\n    this.order.splice(chosenIndex + 1, 0, ...otherIndices.map(i => this.order[i]));\n    for (let oi = otherIndices.length - 1; oi >= 0; oi--) {\n      this.order.splice(otherIndices[oi], 1);\n    }\n  }\n  toArray() {\n    return this.order.map(o => o.pattern);\n  }\n  findIndex(mimeType, maxIndex = this.order.length) {\n    const normalized = normalizeSlashes(mimeType);\n    for (let i = 0; i < maxIndex; i++) {\n      if (this.order[i].matches(normalized)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n}\nfunction diff(before, after, contains, equal = (a, b) => a === b) {\n  const result = [];\n  function pushSplice(start, deleteCount, toInsert) {\n    if (deleteCount === 0 && toInsert.length === 0) {\n      return;\n    }\n    const latest = result[result.length - 1];\n    if (latest && latest.start + latest.deleteCount === start) {\n      latest.deleteCount += deleteCount;\n      latest.toInsert.push(...toInsert);\n    } else {\n      result.push({\n        start,\n        deleteCount,\n        toInsert\n      });\n    }\n  }\n  let beforeIdx = 0;\n  let afterIdx = 0;\n  while (true) {\n    if (beforeIdx === before.length) {\n      pushSplice(beforeIdx, 0, after.slice(afterIdx));\n      break;\n    }\n    if (afterIdx === after.length) {\n      pushSplice(beforeIdx, before.length - beforeIdx, []);\n      break;\n    }\n    const beforeElement = before[beforeIdx];\n    const afterElement = after[afterIdx];\n    if (equal(beforeElement, afterElement)) {\n      beforeIdx += 1;\n      afterIdx += 1;\n      continue;\n    }\n    if (contains(afterElement)) {\n      pushSplice(beforeIdx, 1, []);\n      beforeIdx += 1;\n    } else {\n      pushSplice(beforeIdx, 0, [afterElement]);\n      afterIdx += 1;\n    }\n  }\n  return result;\n}\nconst NOTEBOOK_EDITOR_CURSOR_BOUNDARY = new RawContextKey('notebookEditorCursorAtBoundary', 'none');\nconst NOTEBOOK_EDITOR_CURSOR_LINE_BOUNDARY = new RawContextKey('notebookEditorCursorAtLineBoundary', 'none');\nvar NotebookEditorPriority;\n(function (NotebookEditorPriority) {\n  NotebookEditorPriority[\"default\"] = \"default\";\n  NotebookEditorPriority[\"option\"] = \"option\";\n})(NotebookEditorPriority || (NotebookEditorPriority = {}));\nfunction isDocumentExcludePattern(filenamePattern) {\n  const arg = filenamePattern;\n  if ((typeof arg.include === 'string' || isRelativePattern(arg.include)) && (typeof arg.exclude === 'string' || isRelativePattern(arg.exclude))) {\n    return true;\n  }\n  return false;\n}\nconst NotebookSetting = {\n  displayOrder: 'notebook.displayOrder',\n  cellToolbarLocation: 'notebook.cellToolbarLocation',\n  cellToolbarVisibility: 'notebook.cellToolbarVisibility',\n  showCellStatusBar: 'notebook.showCellStatusBar',\n  textDiffEditorPreview: 'notebook.diff.enablePreview',\n  diffOverviewRuler: 'notebook.diff.overviewRuler',\n  experimentalInsertToolbarAlignment: 'notebook.experimental.insertToolbarAlignment',\n  compactView: 'notebook.compactView',\n  focusIndicator: 'notebook.cellFocusIndicator',\n  insertToolbarLocation: 'notebook.insertToolbarLocation',\n  globalToolbar: 'notebook.globalToolbar',\n  stickyScrollEnabled: 'notebook.stickyScroll.enabled',\n  stickyScrollMode: 'notebook.stickyScroll.mode',\n  undoRedoPerCell: 'notebook.undoRedoPerCell',\n  consolidatedOutputButton: 'notebook.consolidatedOutputButton',\n  showFoldingControls: 'notebook.showFoldingControls',\n  dragAndDropEnabled: 'notebook.dragAndDropEnabled',\n  cellEditorOptionsCustomizations: 'notebook.editorOptionsCustomizations',\n  consolidatedRunButton: 'notebook.consolidatedRunButton',\n  openGettingStarted: 'notebook.experimental.openGettingStarted',\n  globalToolbarShowLabel: 'notebook.globalToolbarShowLabel',\n  markupFontSize: 'notebook.markup.fontSize',\n  interactiveWindowCollapseCodeCells: 'interactiveWindow.collapseCellInputCode',\n  outputScrollingDeprecated: 'notebook.experimental.outputScrolling',\n  outputScrolling: 'notebook.output.scrolling',\n  textOutputLineLimit: 'notebook.output.textLineLimit',\n  LinkifyOutputFilePaths: 'notebook.output.linkifyFilePaths',\n  minimalErrorRendering: 'notebook.output.minimalErrorRendering',\n  formatOnSave: 'notebook.formatOnSave.enabled',\n  insertFinalNewline: 'notebook.insertFinalNewline',\n  formatOnCellExecution: 'notebook.formatOnCellExecution',\n  codeActionsOnSave: 'notebook.codeActionsOnSave',\n  outputWordWrap: 'notebook.output.wordWrap',\n  outputLineHeightDeprecated: 'notebook.outputLineHeight',\n  outputLineHeight: 'notebook.output.lineHeight',\n  outputFontSizeDeprecated: 'notebook.outputFontSize',\n  outputFontSize: 'notebook.output.fontSize',\n  outputFontFamilyDeprecated: 'notebook.outputFontFamily',\n  outputFontFamily: 'notebook.output.fontFamily',\n  findScope: 'notebook.find.scope',\n  logging: 'notebook.logging',\n  confirmDeleteRunningCell: 'notebook.confirmDeleteRunningCell',\n  remoteSaving: 'notebook.experimental.remoteSave',\n  gotoSymbolsAllSymbols: 'notebook.gotoSymbols.showAllSymbols',\n  outlineShowMarkdownHeadersOnly: 'notebook.outline.showMarkdownHeadersOnly',\n  outlineShowCodeCells: 'notebook.outline.showCodeCells',\n  outlineShowCodeCellSymbols: 'notebook.outline.showCodeCellSymbols',\n  breadcrumbsShowCodeCells: 'notebook.breadcrumbs.showCodeCells',\n  scrollToRevealCell: 'notebook.scrolling.revealNextCellOnExecute',\n  cellChat: 'notebook.experimental.cellChat',\n  cellGenerate: 'notebook.experimental.generate',\n  notebookVariablesView: 'notebook.experimental.variablesView',\n  InteractiveWindowPromptToSave: 'interactiveWindow.promptToSaveOnClose',\n  cellFailureDiagnostics: 'notebook.cellFailureDiagnostics',\n  outputBackupSizeLimit: 'notebook.backup.sizeLimit'\n};\nclass NotebookWorkingCopyTypeIdentifier {\n  static {\n    this._prefix = 'notebook/';\n  }\n  static create(viewType) {\n    return `${NotebookWorkingCopyTypeIdentifier._prefix}${viewType}`;\n  }\n  static parse(candidate) {\n    if (candidate.startsWith(NotebookWorkingCopyTypeIdentifier._prefix)) {\n      return candidate.substring(NotebookWorkingCopyTypeIdentifier._prefix.length);\n    }\n    return undefined;\n  }\n}\nfunction isTextStreamMime(mimeType) {\n  return ['application/vnd.code.notebook.stdout', 'application/vnd.code.notebook.stderr'].includes(mimeType);\n}\nconst textDecoder = new TextDecoder();\nfunction compressOutputItemStreams(outputs) {\n  const buffers = [];\n  let startAppending = false;\n  for (const output of outputs) {\n    if (buffers.length === 0 || startAppending) {\n      buffers.push(output);\n      startAppending = true;\n    }\n  }\n  let didCompression = compressStreamBuffer(buffers);\n  const concatenated = VSBuffer.concat(buffers.map(buffer => VSBuffer.wrap(buffer)));\n  const data = formatStreamText(concatenated);\n  didCompression = didCompression || data.byteLength !== concatenated.byteLength;\n  return {\n    data,\n    didCompression\n  };\n}\nconst MOVE_CURSOR_1_LINE_COMMAND = `${String.fromCharCode(27)}[A`;\nconst MOVE_CURSOR_1_LINE_COMMAND_BYTES = MOVE_CURSOR_1_LINE_COMMAND.split('').map(c => c.charCodeAt(0));\nconst LINE_FEED = 10;\nfunction compressStreamBuffer(streams) {\n  let didCompress = false;\n  streams.forEach((stream, index) => {\n    if (index === 0 || stream.length < MOVE_CURSOR_1_LINE_COMMAND.length) {\n      return;\n    }\n    const previousStream = streams[index - 1];\n    const command = stream.subarray(0, MOVE_CURSOR_1_LINE_COMMAND.length);\n    if (command[0] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[0] && command[1] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[1] && command[2] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[2]) {\n      const lastIndexOfLineFeed = previousStream.lastIndexOf(LINE_FEED);\n      if (lastIndexOfLineFeed === -1) {\n        return;\n      }\n      didCompress = true;\n      streams[index - 1] = previousStream.subarray(0, lastIndexOfLineFeed);\n      streams[index] = stream.subarray(MOVE_CURSOR_1_LINE_COMMAND.length);\n    }\n  });\n  return didCompress;\n}\nfunction fixBackspace(txt) {\n  let tmp = txt;\n  do {\n    txt = tmp;\n    tmp = txt.replace(/[^\\n]\\x08/gm, '');\n  } while (tmp.length < txt.length);\n  return txt;\n}\nfunction fixCarriageReturn(txt) {\n  txt = txt.replace(/\\r+\\n/gm, '\\n');\n  while (txt.search(/\\r[^$]/g) > -1) {\n    const base = txt.match(/^(.*)\\r+/m)[1];\n    let insert = txt.match(/\\r+(.*)$/m)[1];\n    insert = insert + base.slice(insert.length, base.length);\n    txt = txt.replace(/\\r+.*$/m, '\\r').replace(/^.*\\r/m, insert);\n  }\n  return txt;\n}\nconst BACKSPACE_CHARACTER = '\\b'.charCodeAt(0);\nconst CARRIAGE_RETURN_CHARACTER = '\\r'.charCodeAt(0);\nfunction formatStreamText(buffer) {\n  if (!buffer.buffer.includes(BACKSPACE_CHARACTER) && !buffer.buffer.includes(CARRIAGE_RETURN_CHARACTER)) {\n    return buffer;\n  }\n  return VSBuffer.fromString(fixCarriageReturn(fixBackspace(textDecoder.decode(buffer.buffer))));\n}\nexport { ACCESSIBLE_NOTEBOOK_DISPLAY_ORDER, CellKind, CellUri, INTERACTIVE_WINDOW_EDITOR_ID, MOVE_CURSOR_1_LINE_COMMAND, MimeTypeDisplayOrder, NOTEBOOK_DIFF_EDITOR_ID, NOTEBOOK_DISPLAY_ORDER, NOTEBOOK_EDITOR_CURSOR_BOUNDARY, NOTEBOOK_EDITOR_CURSOR_LINE_BOUNDARY, NOTEBOOK_EDITOR_ID, NotebookCellExecutionState, NotebookCellsChangeType, NotebookEditorPriority, NotebookExecutionState, NotebookSetting, NotebookWorkingCopyTypeIdentifier, RENDERER_EQUIVALENT_EXTENSIONS, RENDERER_NOT_AVAILABLE, SelectionStateType, compressOutputItemStreams, diff, isDocumentExcludePattern, isTextStreamMime };","map":{"version":3,"names":["VSBuffer","isRelativePattern","parse","parse$1","Iterable","Mimes","Schemas","isWindows","RawContextKey","generate","NOTEBOOK_EDITOR_ID","NOTEBOOK_DIFF_EDITOR_ID","INTERACTIVE_WINDOW_EDITOR_ID","CellKind","NOTEBOOK_DISPLAY_ORDER","latex","markdown","text","ACCESSIBLE_NOTEBOOK_DISPLAY_ORDER","RENDERER_EQUIVALENT_EXTENSIONS","Map","Set","RENDERER_NOT_AVAILABLE","NotebookCellExecutionState","NotebookExecutionState","NotebookCellsChangeType","SelectionStateType","CellUri","scheme","vscodeNotebookCell","generate$1","notebook","handle","cell","generateCellOutputUri","outputId","with","vscodeNotebookCellOutput","fragment","file","parseCellOutputUri","uri","match","exec","undefined","generateCellPropertyUri","parseCellPropertyUri","propertyScheme","normalizeSlashes","str","replace","MimeTypeDisplayOrder","constructor","initialValue","defaultOrder","order","map","pattern","matches","sort","mimetypes","remaining","m","sorted","original","normalized","push","delete","size","concat","keys","a","b","indexOf","prioritize","chosenMimetype","otherMimetypes","chosenIndex","findIndex","unshift","uniqueIndicies","otherIndices","Array","from","splice","i","oi","length","toArray","o","mimeType","maxIndex","diff","before","after","contains","equal","result","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","slice","beforeElement","afterElement","NOTEBOOK_EDITOR_CURSOR_BOUNDARY","NOTEBOOK_EDITOR_CURSOR_LINE_BOUNDARY","NotebookEditorPriority","isDocumentExcludePattern","filenamePattern","arg","include","exclude","NotebookSetting","displayOrder","cellToolbarLocation","cellToolbarVisibility","showCellStatusBar","textDiffEditorPreview","diffOverviewRuler","experimentalInsertToolbarAlignment","compactView","focusIndicator","insertToolbarLocation","globalToolbar","stickyScrollEnabled","stickyScrollMode","undoRedoPerCell","consolidatedOutputButton","showFoldingControls","dragAndDropEnabled","cellEditorOptionsCustomizations","consolidatedRunButton","openGettingStarted","globalToolbarShowLabel","markupFontSize","interactiveWindowCollapseCodeCells","outputScrollingDeprecated","outputScrolling","textOutputLineLimit","LinkifyOutputFilePaths","minimalErrorRendering","formatOnSave","insertFinalNewline","formatOnCellExecution","codeActionsOnSave","outputWordWrap","outputLineHeightDeprecated","outputLineHeight","outputFontSizeDeprecated","outputFontSize","outputFontFamilyDeprecated","outputFontFamily","findScope","logging","confirmDeleteRunningCell","remoteSaving","gotoSymbolsAllSymbols","outlineShowMarkdownHeadersOnly","outlineShowCodeCells","outlineShowCodeCellSymbols","breadcrumbsShowCodeCells","scrollToRevealCell","cellChat","cellGenerate","notebookVariablesView","InteractiveWindowPromptToSave","cellFailureDiagnostics","outputBackupSizeLimit","NotebookWorkingCopyTypeIdentifier","_prefix","create","viewType","candidate","startsWith","substring","isTextStreamMime","includes","textDecoder","TextDecoder","compressOutputItemStreams","outputs","buffers","startAppending","output","didCompression","compressStreamBuffer","concatenated","buffer","wrap","data","formatStreamText","byteLength","MOVE_CURSOR_1_LINE_COMMAND","String","fromCharCode","MOVE_CURSOR_1_LINE_COMMAND_BYTES","split","c","charCodeAt","LINE_FEED","streams","didCompress","forEach","stream","index","previousStream","command","subarray","lastIndexOfLineFeed","lastIndexOf","fixBackspace","txt","tmp","fixCarriageReturn","search","base","insert","BACKSPACE_CHARACTER","CARRIAGE_RETURN_CHARACTER","fromString","decode"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode/vscode/src/vs/workbench/contrib/notebook/common/notebookCommon.js"],"sourcesContent":["import { VSBuffer } from '../../../../base/common/buffer.js';\nimport { isRelativePattern, parse as parse$1 } from '../../../../base/common/glob.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport '../../../../base/common/path.js';\nimport { isWindows } from '../../../../base/common/platform.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { generate, parse } from '../../../services/notebook/common/notebookDocumentService.js';\nconst NOTEBOOK_EDITOR_ID = 'workbench.editor.notebook';\nconst NOTEBOOK_DIFF_EDITOR_ID = 'workbench.editor.notebookTextDiffEditor';\nconst INTERACTIVE_WINDOW_EDITOR_ID = 'workbench.editor.interactive';\nvar CellKind;\n( (function(CellKind) {\n    CellKind[CellKind[\"Markup\"] = 1] = \"Markup\";\n    CellKind[CellKind[\"Code\"] = 2] = \"Code\";\n})(CellKind || (CellKind = {})));\nconst NOTEBOOK_DISPLAY_ORDER = [\n    'application/json',\n    'application/javascript',\n    'text/html',\n    'image/svg+xml',\n    Mimes.latex,\n    Mimes.markdown,\n    'image/png',\n    'image/jpeg',\n    Mimes.text\n];\nconst ACCESSIBLE_NOTEBOOK_DISPLAY_ORDER = [\n    Mimes.latex,\n    Mimes.markdown,\n    'application/json',\n    'text/html',\n    'image/svg+xml',\n    'image/png',\n    'image/jpeg',\n    Mimes.text,\n];\nconst RENDERER_EQUIVALENT_EXTENSIONS = ( new Map([\n    ['ms-toolsai.jupyter', ( new Set(['jupyter-notebook', 'interactive']))],\n    ['ms-toolsai.jupyter-renderers', ( new Set(['jupyter-notebook', 'interactive']))],\n]));\nconst RENDERER_NOT_AVAILABLE = '_notAvailable';\nvar NotebookCellExecutionState;\n( (function(NotebookCellExecutionState) {\n    NotebookCellExecutionState[NotebookCellExecutionState[\"Unconfirmed\"] = 1] = \"Unconfirmed\";\n    NotebookCellExecutionState[NotebookCellExecutionState[\"Pending\"] = 2] = \"Pending\";\n    NotebookCellExecutionState[NotebookCellExecutionState[\"Executing\"] = 3] = \"Executing\";\n})(NotebookCellExecutionState || (NotebookCellExecutionState = {})));\nvar NotebookExecutionState;\n( (function(NotebookExecutionState) {\n    NotebookExecutionState[NotebookExecutionState[\"Unconfirmed\"] = 1] = \"Unconfirmed\";\n    NotebookExecutionState[NotebookExecutionState[\"Pending\"] = 2] = \"Pending\";\n    NotebookExecutionState[NotebookExecutionState[\"Executing\"] = 3] = \"Executing\";\n})(NotebookExecutionState || (NotebookExecutionState = {})));\nvar NotebookCellsChangeType;\n( (function(NotebookCellsChangeType) {\n    NotebookCellsChangeType[NotebookCellsChangeType[\"ModelChange\"] = 1] = \"ModelChange\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"Move\"] = 2] = \"Move\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"ChangeCellLanguage\"] = 5] = \"ChangeCellLanguage\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"Initialize\"] = 6] = \"Initialize\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"ChangeCellMetadata\"] = 7] = \"ChangeCellMetadata\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"Output\"] = 8] = \"Output\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"OutputItem\"] = 9] = \"OutputItem\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"ChangeCellContent\"] = 10] = \"ChangeCellContent\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"ChangeDocumentMetadata\"] = 11] = \"ChangeDocumentMetadata\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"ChangeCellInternalMetadata\"] = 12] = \"ChangeCellInternalMetadata\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"ChangeCellMime\"] = 13] = \"ChangeCellMime\";\n    NotebookCellsChangeType[NotebookCellsChangeType[\"Unknown\"] = 100] = \"Unknown\";\n})(NotebookCellsChangeType || (NotebookCellsChangeType = {})));\nvar SelectionStateType;\n( (function(SelectionStateType) {\n    SelectionStateType[SelectionStateType[\"Handle\"] = 0] = \"Handle\";\n    SelectionStateType[SelectionStateType[\"Index\"] = 1] = \"Index\";\n})(SelectionStateType || (SelectionStateType = {})));\nvar CellUri;\n( (function(CellUri) {\n    CellUri.scheme = Schemas.vscodeNotebookCell;\n    function generate$1(notebook, handle) {\n        return generate(notebook, handle);\n    }\n    CellUri.generate = generate$1;\n    function parse$1(cell) {\n        return parse(cell);\n    }\n    CellUri.parse = parse$1;\n    function generateCellOutputUri(notebook, outputId) {\n        return notebook.with({\n            scheme: Schemas.vscodeNotebookCellOutput,\n            fragment: `op${outputId ?? ''},${notebook.scheme !== Schemas.file ? notebook.scheme : ''}`\n        });\n    }\n    CellUri.generateCellOutputUri = generateCellOutputUri;\n    function parseCellOutputUri(uri) {\n        if (uri.scheme !== Schemas.vscodeNotebookCellOutput) {\n            return;\n        }\n        const match = /^op([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?\\,(.*)$/i.exec(uri.fragment);\n        if (!match) {\n            return undefined;\n        }\n        const outputId = (match[1] && match[1] !== '') ? match[1] : undefined;\n        const scheme = match[2];\n        return {\n            outputId,\n            notebook: uri.with({\n                scheme: scheme || Schemas.file,\n                fragment: null\n            })\n        };\n    }\n    CellUri.parseCellOutputUri = parseCellOutputUri;\n    function generateCellPropertyUri(notebook, handle, scheme) {\n        return CellUri.generate(notebook, handle).with({ scheme: scheme });\n    }\n    CellUri.generateCellPropertyUri = generateCellPropertyUri;\n    function parseCellPropertyUri(uri, propertyScheme) {\n        if (uri.scheme !== propertyScheme) {\n            return undefined;\n        }\n        return CellUri.parse(uri.with({ scheme: CellUri.scheme }));\n    }\n    CellUri.parseCellPropertyUri = parseCellPropertyUri;\n})(CellUri || (CellUri = {})));\nconst normalizeSlashes = (str) => isWindows ? str.replace(/\\//g, '\\\\') : str;\nclass MimeTypeDisplayOrder {\n    constructor(initialValue = [], defaultOrder = NOTEBOOK_DISPLAY_ORDER) {\n        this.defaultOrder = defaultOrder;\n        this.order = ( [...( new Set(initialValue))].map(pattern => ({\n            pattern,\n            matches: parse$1(normalizeSlashes(pattern))\n        })));\n    }\n    sort(mimetypes) {\n        const remaining = ( new Map(( Iterable.map(mimetypes, m => [m, normalizeSlashes(m)]))));\n        let sorted = [];\n        for (const { matches } of this.order) {\n            for (const [original, normalized] of remaining) {\n                if (matches(normalized)) {\n                    sorted.push(original);\n                    remaining.delete(original);\n                    break;\n                }\n            }\n        }\n        if (remaining.size) {\n            sorted = sorted.concat([...( remaining.keys())].sort((a, b) => this.defaultOrder.indexOf(a) - this.defaultOrder.indexOf(b)));\n        }\n        return sorted;\n    }\n    prioritize(chosenMimetype, otherMimetypes) {\n        const chosenIndex = this.findIndex(chosenMimetype);\n        if (chosenIndex === -1) {\n            this.order.unshift({ pattern: chosenMimetype, matches: parse$1(normalizeSlashes(chosenMimetype)) });\n            return;\n        }\n        const uniqueIndicies = ( new Set(( otherMimetypes.map(m => this.findIndex(m, chosenIndex)))));\n        uniqueIndicies.delete(-1);\n        const otherIndices = Array.from(uniqueIndicies).sort();\n        this.order.splice(chosenIndex + 1, 0, ...( otherIndices.map(i => this.order[i])));\n        for (let oi = otherIndices.length - 1; oi >= 0; oi--) {\n            this.order.splice(otherIndices[oi], 1);\n        }\n    }\n    toArray() {\n        return ( this.order.map(o => o.pattern));\n    }\n    findIndex(mimeType, maxIndex = this.order.length) {\n        const normalized = normalizeSlashes(mimeType);\n        for (let i = 0; i < maxIndex; i++) {\n            if (this.order[i].matches(normalized)) {\n                return i;\n            }\n        }\n        return -1;\n    }\n}\nfunction diff(before, after, contains, equal = (a, b) => a === b) {\n    const result = [];\n    function pushSplice(start, deleteCount, toInsert) {\n        if (deleteCount === 0 && toInsert.length === 0) {\n            return;\n        }\n        const latest = result[result.length - 1];\n        if (latest && latest.start + latest.deleteCount === start) {\n            latest.deleteCount += deleteCount;\n            latest.toInsert.push(...toInsert);\n        }\n        else {\n            result.push({ start, deleteCount, toInsert });\n        }\n    }\n    let beforeIdx = 0;\n    let afterIdx = 0;\n    while (true) {\n        if (beforeIdx === before.length) {\n            pushSplice(beforeIdx, 0, after.slice(afterIdx));\n            break;\n        }\n        if (afterIdx === after.length) {\n            pushSplice(beforeIdx, before.length - beforeIdx, []);\n            break;\n        }\n        const beforeElement = before[beforeIdx];\n        const afterElement = after[afterIdx];\n        if (equal(beforeElement, afterElement)) {\n            beforeIdx += 1;\n            afterIdx += 1;\n            continue;\n        }\n        if (contains(afterElement)) {\n            pushSplice(beforeIdx, 1, []);\n            beforeIdx += 1;\n        }\n        else {\n            pushSplice(beforeIdx, 0, [afterElement]);\n            afterIdx += 1;\n        }\n    }\n    return result;\n}\nconst NOTEBOOK_EDITOR_CURSOR_BOUNDARY = ( new RawContextKey('notebookEditorCursorAtBoundary', 'none'));\nconst NOTEBOOK_EDITOR_CURSOR_LINE_BOUNDARY = ( new RawContextKey('notebookEditorCursorAtLineBoundary', 'none'));\nvar NotebookEditorPriority;\n( (function(NotebookEditorPriority) {\n    NotebookEditorPriority[\"default\"] = \"default\";\n    NotebookEditorPriority[\"option\"] = \"option\";\n})(NotebookEditorPriority || (NotebookEditorPriority = {})));\nfunction isDocumentExcludePattern(filenamePattern) {\n    const arg = filenamePattern;\n    if ((typeof arg.include === 'string' || isRelativePattern(arg.include))\n        && (typeof arg.exclude === 'string' || isRelativePattern(arg.exclude))) {\n        return true;\n    }\n    return false;\n}\nconst NotebookSetting = {\n    displayOrder: 'notebook.displayOrder',\n    cellToolbarLocation: 'notebook.cellToolbarLocation',\n    cellToolbarVisibility: 'notebook.cellToolbarVisibility',\n    showCellStatusBar: 'notebook.showCellStatusBar',\n    textDiffEditorPreview: 'notebook.diff.enablePreview',\n    diffOverviewRuler: 'notebook.diff.overviewRuler',\n    experimentalInsertToolbarAlignment: 'notebook.experimental.insertToolbarAlignment',\n    compactView: 'notebook.compactView',\n    focusIndicator: 'notebook.cellFocusIndicator',\n    insertToolbarLocation: 'notebook.insertToolbarLocation',\n    globalToolbar: 'notebook.globalToolbar',\n    stickyScrollEnabled: 'notebook.stickyScroll.enabled',\n    stickyScrollMode: 'notebook.stickyScroll.mode',\n    undoRedoPerCell: 'notebook.undoRedoPerCell',\n    consolidatedOutputButton: 'notebook.consolidatedOutputButton',\n    showFoldingControls: 'notebook.showFoldingControls',\n    dragAndDropEnabled: 'notebook.dragAndDropEnabled',\n    cellEditorOptionsCustomizations: 'notebook.editorOptionsCustomizations',\n    consolidatedRunButton: 'notebook.consolidatedRunButton',\n    openGettingStarted: 'notebook.experimental.openGettingStarted',\n    globalToolbarShowLabel: 'notebook.globalToolbarShowLabel',\n    markupFontSize: 'notebook.markup.fontSize',\n    interactiveWindowCollapseCodeCells: 'interactiveWindow.collapseCellInputCode',\n    outputScrollingDeprecated: 'notebook.experimental.outputScrolling',\n    outputScrolling: 'notebook.output.scrolling',\n    textOutputLineLimit: 'notebook.output.textLineLimit',\n    LinkifyOutputFilePaths: 'notebook.output.linkifyFilePaths',\n    minimalErrorRendering: 'notebook.output.minimalErrorRendering',\n    formatOnSave: 'notebook.formatOnSave.enabled',\n    insertFinalNewline: 'notebook.insertFinalNewline',\n    formatOnCellExecution: 'notebook.formatOnCellExecution',\n    codeActionsOnSave: 'notebook.codeActionsOnSave',\n    outputWordWrap: 'notebook.output.wordWrap',\n    outputLineHeightDeprecated: 'notebook.outputLineHeight',\n    outputLineHeight: 'notebook.output.lineHeight',\n    outputFontSizeDeprecated: 'notebook.outputFontSize',\n    outputFontSize: 'notebook.output.fontSize',\n    outputFontFamilyDeprecated: 'notebook.outputFontFamily',\n    outputFontFamily: 'notebook.output.fontFamily',\n    findScope: 'notebook.find.scope',\n    logging: 'notebook.logging',\n    confirmDeleteRunningCell: 'notebook.confirmDeleteRunningCell',\n    remoteSaving: 'notebook.experimental.remoteSave',\n    gotoSymbolsAllSymbols: 'notebook.gotoSymbols.showAllSymbols',\n    outlineShowMarkdownHeadersOnly: 'notebook.outline.showMarkdownHeadersOnly',\n    outlineShowCodeCells: 'notebook.outline.showCodeCells',\n    outlineShowCodeCellSymbols: 'notebook.outline.showCodeCellSymbols',\n    breadcrumbsShowCodeCells: 'notebook.breadcrumbs.showCodeCells',\n    scrollToRevealCell: 'notebook.scrolling.revealNextCellOnExecute',\n    cellChat: 'notebook.experimental.cellChat',\n    cellGenerate: 'notebook.experimental.generate',\n    notebookVariablesView: 'notebook.experimental.variablesView',\n    InteractiveWindowPromptToSave: 'interactiveWindow.promptToSaveOnClose',\n    cellFailureDiagnostics: 'notebook.cellFailureDiagnostics',\n    outputBackupSizeLimit: 'notebook.backup.sizeLimit',\n};\nclass NotebookWorkingCopyTypeIdentifier {\n    static { this._prefix = 'notebook/'; }\n    static create(viewType) {\n        return `${NotebookWorkingCopyTypeIdentifier._prefix}${viewType}`;\n    }\n    static parse(candidate) {\n        if (candidate.startsWith(NotebookWorkingCopyTypeIdentifier._prefix)) {\n            return candidate.substring(NotebookWorkingCopyTypeIdentifier._prefix.length);\n        }\n        return undefined;\n    }\n}\nfunction isTextStreamMime(mimeType) {\n    return ['application/vnd.code.notebook.stdout', 'application/vnd.code.notebook.stderr'].includes(mimeType);\n}\nconst textDecoder = ( new TextDecoder());\nfunction compressOutputItemStreams(outputs) {\n    const buffers = [];\n    let startAppending = false;\n    for (const output of outputs) {\n        if ((buffers.length === 0 || startAppending)) {\n            buffers.push(output);\n            startAppending = true;\n        }\n    }\n    let didCompression = compressStreamBuffer(buffers);\n    const concatenated = VSBuffer.concat(( buffers.map(buffer => VSBuffer.wrap(buffer))));\n    const data = formatStreamText(concatenated);\n    didCompression = didCompression || data.byteLength !== concatenated.byteLength;\n    return { data, didCompression };\n}\nconst MOVE_CURSOR_1_LINE_COMMAND = `${String.fromCharCode(27)}[A`;\nconst MOVE_CURSOR_1_LINE_COMMAND_BYTES = ( MOVE_CURSOR_1_LINE_COMMAND.split('').map(c => c.charCodeAt(0)));\nconst LINE_FEED = 10;\nfunction compressStreamBuffer(streams) {\n    let didCompress = false;\n    streams.forEach((stream, index) => {\n        if (index === 0 || stream.length < MOVE_CURSOR_1_LINE_COMMAND.length) {\n            return;\n        }\n        const previousStream = streams[index - 1];\n        const command = stream.subarray(0, MOVE_CURSOR_1_LINE_COMMAND.length);\n        if (command[0] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[0] && command[1] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[1] && command[2] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[2]) {\n            const lastIndexOfLineFeed = previousStream.lastIndexOf(LINE_FEED);\n            if (lastIndexOfLineFeed === -1) {\n                return;\n            }\n            didCompress = true;\n            streams[index - 1] = previousStream.subarray(0, lastIndexOfLineFeed);\n            streams[index] = stream.subarray(MOVE_CURSOR_1_LINE_COMMAND.length);\n        }\n    });\n    return didCompress;\n}\nfunction fixBackspace(txt) {\n    let tmp = txt;\n    do {\n        txt = tmp;\n        tmp = txt.replace(/[^\\n]\\x08/gm, '');\n    } while (tmp.length < txt.length);\n    return txt;\n}\nfunction fixCarriageReturn(txt) {\n    txt = txt.replace(/\\r+\\n/gm, '\\n');\n    while (txt.search(/\\r[^$]/g) > -1) {\n        const base = txt.match(/^(.*)\\r+/m)[1];\n        let insert = txt.match(/\\r+(.*)$/m)[1];\n        insert = insert + base.slice(insert.length, base.length);\n        txt = txt.replace(/\\r+.*$/m, '\\r').replace(/^.*\\r/m, insert);\n    }\n    return txt;\n}\nconst BACKSPACE_CHARACTER = '\\b'.charCodeAt(0);\nconst CARRIAGE_RETURN_CHARACTER = '\\r'.charCodeAt(0);\nfunction formatStreamText(buffer) {\n    if (!buffer.buffer.includes(BACKSPACE_CHARACTER) && !buffer.buffer.includes(CARRIAGE_RETURN_CHARACTER)) {\n        return buffer;\n    }\n    return VSBuffer.fromString(fixCarriageReturn(fixBackspace(textDecoder.decode(buffer.buffer))));\n}\nexport { ACCESSIBLE_NOTEBOOK_DISPLAY_ORDER, CellKind, CellUri, INTERACTIVE_WINDOW_EDITOR_ID, MOVE_CURSOR_1_LINE_COMMAND, MimeTypeDisplayOrder, NOTEBOOK_DIFF_EDITOR_ID, NOTEBOOK_DISPLAY_ORDER, NOTEBOOK_EDITOR_CURSOR_BOUNDARY, NOTEBOOK_EDITOR_CURSOR_LINE_BOUNDARY, NOTEBOOK_EDITOR_ID, NotebookCellExecutionState, NotebookCellsChangeType, NotebookEditorPriority, NotebookExecutionState, NotebookSetting, NotebookWorkingCopyTypeIdentifier, RENDERER_EQUIVALENT_EXTENSIONS, RENDERER_NOT_AVAILABLE, SelectionStateType, compressOutputItemStreams, diff, isDocumentExcludePattern, isTextStreamMime };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}