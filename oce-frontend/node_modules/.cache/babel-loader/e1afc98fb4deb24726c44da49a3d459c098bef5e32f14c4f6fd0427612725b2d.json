{"ast":null,"code":"\"use strict\";\n\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createConverter = void 0;\nconst code = require(\"vscode\");\nconst ls = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nconst async = require(\"./utils/async\");\nconst protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\nconst protocolCodeLens_1 = require(\"./protocolCodeLens\");\nconst protocolDocumentLink_1 = require(\"./protocolDocumentLink\");\nconst protocolCodeAction_1 = require(\"./protocolCodeAction\");\nconst protocolDiagnostic_1 = require(\"./protocolDiagnostic\");\nconst protocolCallHierarchyItem_1 = require(\"./protocolCallHierarchyItem\");\nconst protocolTypeHierarchyItem_1 = require(\"./protocolTypeHierarchyItem\");\nconst protocolWorkspaceSymbol_1 = require(\"./protocolWorkspaceSymbol\");\nconst protocolInlayHint_1 = require(\"./protocolInlayHint\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nvar CodeBlock;\n(function (CodeBlock) {\n  function is(value) {\n    let candidate = value;\n    return candidate && Is.string(candidate.language) && Is.string(candidate.value);\n  }\n  CodeBlock.is = is;\n})(CodeBlock || (CodeBlock = {}));\nfunction createConverter(uriConverter, trustMarkdown, supportHtml) {\n  const nullConverter = value => code.Uri.parse(value);\n  const _uriConverter = uriConverter || nullConverter;\n  function asUri(value) {\n    return _uriConverter(value);\n  }\n  function asDocumentSelector(selector) {\n    const result = [];\n    for (const filter of selector) {\n      if (typeof filter === 'string') {\n        result.push(filter);\n      } else if (vscode_languageserver_protocol_1.NotebookCellTextDocumentFilter.is(filter)) {\n        // We first need to check for the notebook cell filter since a TextDocumentFilter would\n        // match both (e.g. the notebook is optional).\n        if (typeof filter.notebook === 'string') {\n          result.push({\n            notebookType: filter.notebook,\n            language: filter.language\n          });\n        } else {\n          const notebookType = filter.notebook.notebookType ?? '*';\n          result.push({\n            notebookType: notebookType,\n            scheme: filter.notebook.scheme,\n            pattern: filter.notebook.pattern,\n            language: filter.language\n          });\n        }\n      } else if (vscode_languageserver_protocol_1.TextDocumentFilter.is(filter)) {\n        result.push({\n          language: filter.language,\n          scheme: filter.scheme,\n          pattern: filter.pattern\n        });\n      }\n    }\n    return result;\n  }\n  async function asDiagnostics(diagnostics, token) {\n    return async.map(diagnostics, asDiagnostic, token);\n  }\n  function asDiagnosticsSync(diagnostics) {\n    const result = new Array(diagnostics.length);\n    for (let i = 0; i < diagnostics.length; i++) {\n      result[i] = asDiagnostic(diagnostics[i]);\n    }\n    return result;\n  }\n  function asDiagnostic(diagnostic) {\n    let result = new protocolDiagnostic_1.ProtocolDiagnostic(asRange(diagnostic.range), diagnostic.message, asDiagnosticSeverity(diagnostic.severity), diagnostic.data);\n    if (diagnostic.code !== undefined) {\n      if (typeof diagnostic.code === 'string' || typeof diagnostic.code === 'number') {\n        if (ls.CodeDescription.is(diagnostic.codeDescription)) {\n          result.code = {\n            value: diagnostic.code,\n            target: asUri(diagnostic.codeDescription.href)\n          };\n        } else {\n          result.code = diagnostic.code;\n        }\n      } else if (protocolDiagnostic_1.DiagnosticCode.is(diagnostic.code)) {\n        // This is for backwards compatibility of a proposed API.\n        // We should remove this at some point.\n        result.hasDiagnosticCode = true;\n        const diagnosticCode = diagnostic.code;\n        result.code = {\n          value: diagnosticCode.value,\n          target: asUri(diagnosticCode.target)\n        };\n      }\n    }\n    if (diagnostic.source) {\n      result.source = diagnostic.source;\n    }\n    if (diagnostic.relatedInformation) {\n      result.relatedInformation = asRelatedInformation(diagnostic.relatedInformation);\n    }\n    if (Array.isArray(diagnostic.tags)) {\n      result.tags = asDiagnosticTags(diagnostic.tags);\n    }\n    return result;\n  }\n  function asRelatedInformation(relatedInformation) {\n    const result = new Array(relatedInformation.length);\n    for (let i = 0; i < relatedInformation.length; i++) {\n      const info = relatedInformation[i];\n      result[i] = new code.DiagnosticRelatedInformation(asLocation(info.location), info.message);\n    }\n    return result;\n  }\n  function asDiagnosticTags(tags) {\n    if (!tags) {\n      return undefined;\n    }\n    let result = [];\n    for (let tag of tags) {\n      let converted = asDiagnosticTag(tag);\n      if (converted !== undefined) {\n        result.push(converted);\n      }\n    }\n    return result.length > 0 ? result : undefined;\n  }\n  function asDiagnosticTag(tag) {\n    switch (tag) {\n      case ls.DiagnosticTag.Unnecessary:\n        return code.DiagnosticTag.Unnecessary;\n      case ls.DiagnosticTag.Deprecated:\n        return code.DiagnosticTag.Deprecated;\n      default:\n        return undefined;\n    }\n  }\n  function asPosition(value) {\n    return value ? new code.Position(value.line, value.character) : undefined;\n  }\n  function asRange(value) {\n    return value ? new code.Range(value.start.line, value.start.character, value.end.line, value.end.character) : undefined;\n  }\n  async function asRanges(items, token) {\n    return async.map(items, range => {\n      return new code.Range(range.start.line, range.start.character, range.end.line, range.end.character);\n    }, token);\n  }\n  function asDiagnosticSeverity(value) {\n    if (value === undefined || value === null) {\n      return code.DiagnosticSeverity.Error;\n    }\n    switch (value) {\n      case ls.DiagnosticSeverity.Error:\n        return code.DiagnosticSeverity.Error;\n      case ls.DiagnosticSeverity.Warning:\n        return code.DiagnosticSeverity.Warning;\n      case ls.DiagnosticSeverity.Information:\n        return code.DiagnosticSeverity.Information;\n      case ls.DiagnosticSeverity.Hint:\n        return code.DiagnosticSeverity.Hint;\n    }\n    return code.DiagnosticSeverity.Error;\n  }\n  function asHoverContent(value) {\n    if (Is.string(value)) {\n      return asMarkdownString(value);\n    } else if (CodeBlock.is(value)) {\n      let result = asMarkdownString();\n      return result.appendCodeblock(value.value, value.language);\n    } else if (Array.isArray(value)) {\n      let result = [];\n      for (let element of value) {\n        let item = asMarkdownString();\n        if (CodeBlock.is(element)) {\n          item.appendCodeblock(element.value, element.language);\n        } else {\n          item.appendMarkdown(element);\n        }\n        result.push(item);\n      }\n      return result;\n    } else {\n      return asMarkdownString(value);\n    }\n  }\n  function asDocumentation(value) {\n    if (Is.string(value)) {\n      return value;\n    } else {\n      switch (value.kind) {\n        case ls.MarkupKind.Markdown:\n          return asMarkdownString(value.value);\n        case ls.MarkupKind.PlainText:\n          return value.value;\n        default:\n          return `Unsupported Markup content received. Kind is: ${value.kind}`;\n      }\n    }\n  }\n  function asMarkdownString(value) {\n    let result;\n    if (value === undefined || typeof value === 'string') {\n      result = new code.MarkdownString(value);\n    } else {\n      switch (value.kind) {\n        case ls.MarkupKind.Markdown:\n          result = new code.MarkdownString(value.value);\n          break;\n        case ls.MarkupKind.PlainText:\n          result = new code.MarkdownString();\n          result.appendText(value.value);\n          break;\n        default:\n          result = new code.MarkdownString();\n          result.appendText(`Unsupported Markup content received. Kind is: ${value.kind}`);\n          break;\n      }\n    }\n    result.isTrusted = trustMarkdown;\n    result.supportHtml = supportHtml;\n    return result;\n  }\n  function asHover(hover) {\n    if (!hover) {\n      return undefined;\n    }\n    return new code.Hover(asHoverContent(hover.contents), asRange(hover.range));\n  }\n  async function asCompletionResult(value, allCommitCharacters, token) {\n    if (!value) {\n      return undefined;\n    }\n    if (Array.isArray(value)) {\n      return async.map(value, item => asCompletionItem(item, allCommitCharacters), token);\n    }\n    const list = value;\n    const {\n      defaultRange,\n      commitCharacters\n    } = getCompletionItemDefaults(list, allCommitCharacters);\n    const converted = await async.map(list.items, item => {\n      return asCompletionItem(item, commitCharacters, defaultRange, list.itemDefaults?.insertTextMode, list.itemDefaults?.insertTextFormat, list.itemDefaults?.data);\n    }, token);\n    return new code.CompletionList(converted, list.isIncomplete);\n  }\n  function getCompletionItemDefaults(list, allCommitCharacters) {\n    const rangeDefaults = list.itemDefaults?.editRange;\n    const commitCharacters = list.itemDefaults?.commitCharacters ?? allCommitCharacters;\n    return ls.Range.is(rangeDefaults) ? {\n      defaultRange: asRange(rangeDefaults),\n      commitCharacters\n    } : rangeDefaults !== undefined ? {\n      defaultRange: {\n        inserting: asRange(rangeDefaults.insert),\n        replacing: asRange(rangeDefaults.replace)\n      },\n      commitCharacters\n    } : {\n      defaultRange: undefined,\n      commitCharacters\n    };\n  }\n  function asCompletionItemKind(value) {\n    // Protocol item kind is 1 based, codes item kind is zero based.\n    if (ls.CompletionItemKind.Text <= value && value <= ls.CompletionItemKind.TypeParameter) {\n      return [value - 1, undefined];\n    }\n    return [code.CompletionItemKind.Text, value];\n  }\n  function asCompletionItemTag(tag) {\n    switch (tag) {\n      case ls.CompletionItemTag.Deprecated:\n        return code.CompletionItemTag.Deprecated;\n    }\n    return undefined;\n  }\n  function asCompletionItemTags(tags) {\n    if (tags === undefined || tags === null) {\n      return [];\n    }\n    const result = [];\n    for (const tag of tags) {\n      const converted = asCompletionItemTag(tag);\n      if (converted !== undefined) {\n        result.push(converted);\n      }\n    }\n    return result;\n  }\n  function asCompletionItem(item, defaultCommitCharacters, defaultRange, defaultInsertTextMode, defaultInsertTextFormat, defaultData) {\n    const tags = asCompletionItemTags(item.tags);\n    const label = asCompletionItemLabel(item);\n    const result = new protocolCompletionItem_1.default(label);\n    if (item.detail) {\n      result.detail = item.detail;\n    }\n    if (item.documentation) {\n      result.documentation = asDocumentation(item.documentation);\n      result.documentationFormat = Is.string(item.documentation) ? '$string' : item.documentation.kind;\n    }\n    if (item.filterText) {\n      result.filterText = item.filterText;\n    }\n    const insertText = asCompletionInsertText(item, defaultRange, defaultInsertTextFormat);\n    if (insertText) {\n      result.insertText = insertText.text;\n      result.range = insertText.range;\n      result.fromEdit = insertText.fromEdit;\n    }\n    if (Is.number(item.kind)) {\n      let [itemKind, original] = asCompletionItemKind(item.kind);\n      result.kind = itemKind;\n      if (original) {\n        result.originalItemKind = original;\n      }\n    }\n    if (item.sortText) {\n      result.sortText = item.sortText;\n    }\n    if (item.additionalTextEdits) {\n      result.additionalTextEdits = asTextEditsSync(item.additionalTextEdits);\n    }\n    const commitCharacters = item.commitCharacters !== undefined ? Is.stringArray(item.commitCharacters) ? item.commitCharacters : undefined : defaultCommitCharacters;\n    if (commitCharacters) {\n      result.commitCharacters = commitCharacters.slice();\n    }\n    if (item.command) {\n      result.command = asCommand(item.command);\n    }\n    if (item.deprecated === true || item.deprecated === false) {\n      result.deprecated = item.deprecated;\n      if (item.deprecated === true) {\n        tags.push(code.CompletionItemTag.Deprecated);\n      }\n    }\n    if (item.preselect === true || item.preselect === false) {\n      result.preselect = item.preselect;\n    }\n    const data = item.data ?? defaultData;\n    if (data !== undefined) {\n      result.data = data;\n    }\n    if (tags.length > 0) {\n      result.tags = tags;\n    }\n    const insertTextMode = item.insertTextMode ?? defaultInsertTextMode;\n    if (insertTextMode !== undefined) {\n      result.insertTextMode = insertTextMode;\n      if (insertTextMode === ls.InsertTextMode.asIs) {\n        result.keepWhitespace = true;\n      }\n    }\n    return result;\n  }\n  function asCompletionItemLabel(item) {\n    if (ls.CompletionItemLabelDetails.is(item.labelDetails)) {\n      return {\n        label: item.label,\n        detail: item.labelDetails.detail,\n        description: item.labelDetails.description\n      };\n    } else {\n      return item.label;\n    }\n  }\n  function asCompletionInsertText(item, defaultRange, defaultInsertTextFormat) {\n    const insertTextFormat = item.insertTextFormat ?? defaultInsertTextFormat;\n    if (item.textEdit !== undefined || defaultRange !== undefined) {\n      const [range, newText] = item.textEdit !== undefined ? getCompletionRangeAndText(item.textEdit) : [defaultRange, item.textEditText ?? item.label];\n      if (insertTextFormat === ls.InsertTextFormat.Snippet) {\n        return {\n          text: new code.SnippetString(newText),\n          range: range,\n          fromEdit: true\n        };\n      } else {\n        return {\n          text: newText,\n          range: range,\n          fromEdit: true\n        };\n      }\n    } else if (item.insertText) {\n      if (insertTextFormat === ls.InsertTextFormat.Snippet) {\n        return {\n          text: new code.SnippetString(item.insertText),\n          fromEdit: false\n        };\n      } else {\n        return {\n          text: item.insertText,\n          fromEdit: false\n        };\n      }\n    } else {\n      return undefined;\n    }\n  }\n  function getCompletionRangeAndText(value) {\n    if (ls.InsertReplaceEdit.is(value)) {\n      return [{\n        inserting: asRange(value.insert),\n        replacing: asRange(value.replace)\n      }, value.newText];\n    } else {\n      return [asRange(value.range), value.newText];\n    }\n  }\n  function asTextEdit(edit) {\n    if (!edit) {\n      return undefined;\n    }\n    return new code.TextEdit(asRange(edit.range), edit.newText);\n  }\n  async function asTextEdits(items, token) {\n    if (!items) {\n      return undefined;\n    }\n    return async.map(items, asTextEdit, token);\n  }\n  function asTextEditsSync(items) {\n    if (!items) {\n      return undefined;\n    }\n    const result = new Array(items.length);\n    for (let i = 0; i < items.length; i++) {\n      result[i] = asTextEdit(items[i]);\n    }\n    return result;\n  }\n  async function asSignatureHelp(item, token) {\n    if (!item) {\n      return undefined;\n    }\n    let result = new code.SignatureHelp();\n    if (Is.number(item.activeSignature)) {\n      result.activeSignature = item.activeSignature;\n    } else {\n      // activeSignature was optional in the past\n      result.activeSignature = 0;\n    }\n    if (Is.number(item.activeParameter)) {\n      result.activeParameter = item.activeParameter;\n    } else {\n      // activeParameter was optional in the past\n      result.activeParameter = 0;\n    }\n    if (item.signatures) {\n      result.signatures = await asSignatureInformations(item.signatures, token);\n    }\n    return result;\n  }\n  async function asSignatureInformations(items, token) {\n    return async.mapAsync(items, asSignatureInformation, token);\n  }\n  async function asSignatureInformation(item, token) {\n    let result = new code.SignatureInformation(item.label);\n    if (item.documentation !== undefined) {\n      result.documentation = asDocumentation(item.documentation);\n    }\n    if (item.parameters !== undefined) {\n      result.parameters = await asParameterInformations(item.parameters, token);\n    }\n    if (item.activeParameter !== undefined) {\n      result.activeParameter = item.activeParameter;\n    }\n    {\n      return result;\n    }\n  }\n  function asParameterInformations(items, token) {\n    return async.map(items, asParameterInformation, token);\n  }\n  function asParameterInformation(item) {\n    let result = new code.ParameterInformation(item.label);\n    if (item.documentation) {\n      result.documentation = asDocumentation(item.documentation);\n    }\n    return result;\n  }\n  function asLocation(item) {\n    return item ? new code.Location(_uriConverter(item.uri), asRange(item.range)) : undefined;\n  }\n  async function asDeclarationResult(item, token) {\n    if (!item) {\n      return undefined;\n    }\n    return asLocationResult(item, token);\n  }\n  async function asDefinitionResult(item, token) {\n    if (!item) {\n      return undefined;\n    }\n    return asLocationResult(item, token);\n  }\n  function asLocationLink(item) {\n    if (!item) {\n      return undefined;\n    }\n    let result = {\n      targetUri: _uriConverter(item.targetUri),\n      targetRange: asRange(item.targetRange),\n      originSelectionRange: asRange(item.originSelectionRange),\n      targetSelectionRange: asRange(item.targetSelectionRange)\n    };\n    if (!result.targetSelectionRange) {\n      throw new Error(`targetSelectionRange must not be undefined or null`);\n    }\n    return result;\n  }\n  async function asLocationResult(item, token) {\n    if (!item) {\n      return undefined;\n    }\n    if (Is.array(item)) {\n      if (item.length === 0) {\n        return [];\n      } else if (ls.LocationLink.is(item[0])) {\n        const links = item;\n        return async.map(links, asLocationLink, token);\n      } else {\n        const locations = item;\n        return async.map(locations, asLocation, token);\n      }\n    } else if (ls.LocationLink.is(item)) {\n      return [asLocationLink(item)];\n    } else {\n      return asLocation(item);\n    }\n  }\n  async function asReferences(values, token) {\n    if (!values) {\n      return undefined;\n    }\n    return async.map(values, asLocation, token);\n  }\n  async function asDocumentHighlights(values, token) {\n    if (!values) {\n      return undefined;\n    }\n    return async.map(values, asDocumentHighlight, token);\n  }\n  function asDocumentHighlight(item) {\n    let result = new code.DocumentHighlight(asRange(item.range));\n    if (Is.number(item.kind)) {\n      result.kind = asDocumentHighlightKind(item.kind);\n    }\n    return result;\n  }\n  function asDocumentHighlightKind(item) {\n    switch (item) {\n      case ls.DocumentHighlightKind.Text:\n        return code.DocumentHighlightKind.Text;\n      case ls.DocumentHighlightKind.Read:\n        return code.DocumentHighlightKind.Read;\n      case ls.DocumentHighlightKind.Write:\n        return code.DocumentHighlightKind.Write;\n    }\n    return code.DocumentHighlightKind.Text;\n  }\n  async function asSymbolInformations(values, token) {\n    if (!values) {\n      return undefined;\n    }\n    return async.map(values, asSymbolInformation, token);\n  }\n  function asSymbolKind(item) {\n    if (item <= ls.SymbolKind.TypeParameter) {\n      // Symbol kind is one based in the protocol and zero based in code.\n      return item - 1;\n    }\n    return code.SymbolKind.Property;\n  }\n  function asSymbolTag(value) {\n    switch (value) {\n      case ls.SymbolTag.Deprecated:\n        return code.SymbolTag.Deprecated;\n      default:\n        return undefined;\n    }\n  }\n  function asSymbolTags(items) {\n    if (items === undefined || items === null) {\n      return undefined;\n    }\n    const result = [];\n    for (const item of items) {\n      const converted = asSymbolTag(item);\n      if (converted !== undefined) {\n        result.push(converted);\n      }\n    }\n    return result.length === 0 ? undefined : result;\n  }\n  function asSymbolInformation(item) {\n    const data = item.data;\n    const location = item.location;\n    const result = location.range === undefined || data !== undefined ? new protocolWorkspaceSymbol_1.default(item.name, asSymbolKind(item.kind), item.containerName ?? '', location.range === undefined ? _uriConverter(location.uri) : new code.Location(_uriConverter(item.location.uri), asRange(location.range)), data) : new code.SymbolInformation(item.name, asSymbolKind(item.kind), item.containerName ?? '', new code.Location(_uriConverter(item.location.uri), asRange(location.range)));\n    fillTags(result, item);\n    return result;\n  }\n  async function asDocumentSymbols(values, token) {\n    if (values === undefined || values === null) {\n      return undefined;\n    }\n    return async.map(values, asDocumentSymbol, token);\n  }\n  function asDocumentSymbol(value) {\n    let result = new code.DocumentSymbol(value.name, value.detail || '', asSymbolKind(value.kind), asRange(value.range), asRange(value.selectionRange));\n    fillTags(result, value);\n    if (value.children !== undefined && value.children.length > 0) {\n      let children = [];\n      for (let child of value.children) {\n        children.push(asDocumentSymbol(child));\n      }\n      result.children = children;\n    }\n    return result;\n  }\n  function fillTags(result, value) {\n    result.tags = asSymbolTags(value.tags);\n    if (value.deprecated) {\n      if (!result.tags) {\n        result.tags = [code.SymbolTag.Deprecated];\n      } else {\n        if (!result.tags.includes(code.SymbolTag.Deprecated)) {\n          result.tags = result.tags.concat(code.SymbolTag.Deprecated);\n        }\n      }\n    }\n  }\n  function asCommand(item) {\n    let result = {\n      title: item.title,\n      command: item.command\n    };\n    if (item.arguments) {\n      result.arguments = item.arguments;\n    }\n    return result;\n  }\n  async function asCommands(items, token) {\n    if (!items) {\n      return undefined;\n    }\n    return async.map(items, asCommand, token);\n  }\n  const kindMapping = new Map();\n  kindMapping.set(ls.CodeActionKind.Empty, code.CodeActionKind.Empty);\n  kindMapping.set(ls.CodeActionKind.QuickFix, code.CodeActionKind.QuickFix);\n  kindMapping.set(ls.CodeActionKind.Refactor, code.CodeActionKind.Refactor);\n  kindMapping.set(ls.CodeActionKind.RefactorExtract, code.CodeActionKind.RefactorExtract);\n  kindMapping.set(ls.CodeActionKind.RefactorInline, code.CodeActionKind.RefactorInline);\n  kindMapping.set(ls.CodeActionKind.RefactorRewrite, code.CodeActionKind.RefactorRewrite);\n  kindMapping.set(ls.CodeActionKind.Source, code.CodeActionKind.Source);\n  kindMapping.set(ls.CodeActionKind.SourceOrganizeImports, code.CodeActionKind.SourceOrganizeImports);\n  function asCodeActionKind(item) {\n    if (item === undefined || item === null) {\n      return undefined;\n    }\n    let result = kindMapping.get(item);\n    if (result) {\n      return result;\n    }\n    let parts = item.split('.');\n    result = code.CodeActionKind.Empty;\n    for (let part of parts) {\n      result = result.append(part);\n    }\n    return result;\n  }\n  function asCodeActionKinds(items) {\n    if (items === undefined || items === null) {\n      return undefined;\n    }\n    return items.map(kind => asCodeActionKind(kind));\n  }\n  async function asCodeAction(item, token) {\n    if (item === undefined || item === null) {\n      return undefined;\n    }\n    let result = new protocolCodeAction_1.default(item.title, item.data);\n    if (item.kind !== undefined) {\n      result.kind = asCodeActionKind(item.kind);\n    }\n    if (item.diagnostics !== undefined) {\n      result.diagnostics = asDiagnosticsSync(item.diagnostics);\n    }\n    if (item.edit !== undefined) {\n      result.edit = await asWorkspaceEdit(item.edit, token);\n    }\n    if (item.command !== undefined) {\n      result.command = asCommand(item.command);\n    }\n    if (item.isPreferred !== undefined) {\n      result.isPreferred = item.isPreferred;\n    }\n    if (item.disabled !== undefined) {\n      result.disabled = {\n        reason: item.disabled.reason\n      };\n    }\n    return result;\n  }\n  function asCodeActionResult(items, token) {\n    return async.mapAsync(items, async item => {\n      if (ls.Command.is(item)) {\n        return asCommand(item);\n      } else {\n        return asCodeAction(item, token);\n      }\n    }, token);\n  }\n  function asCodeLens(item) {\n    if (!item) {\n      return undefined;\n    }\n    let result = new protocolCodeLens_1.default(asRange(item.range));\n    if (item.command) {\n      result.command = asCommand(item.command);\n    }\n    if (item.data !== undefined && item.data !== null) {\n      result.data = item.data;\n    }\n    return result;\n  }\n  async function asCodeLenses(items, token) {\n    if (!items) {\n      return undefined;\n    }\n    return async.map(items, asCodeLens, token);\n  }\n  async function asWorkspaceEdit(item, token) {\n    if (!item) {\n      return undefined;\n    }\n    const sharedMetadata = new Map();\n    if (item.changeAnnotations !== undefined) {\n      const changeAnnotations = item.changeAnnotations;\n      await async.forEach(Object.keys(changeAnnotations), key => {\n        const metaData = asWorkspaceEditEntryMetadata(changeAnnotations[key]);\n        sharedMetadata.set(key, metaData);\n      }, token);\n    }\n    const asMetadata = annotation => {\n      if (annotation === undefined) {\n        return undefined;\n      } else {\n        return sharedMetadata.get(annotation);\n      }\n    };\n    const result = new code.WorkspaceEdit();\n    if (item.documentChanges) {\n      const documentChanges = item.documentChanges;\n      await async.forEach(documentChanges, change => {\n        if (ls.CreateFile.is(change)) {\n          result.createFile(_uriConverter(change.uri), change.options, asMetadata(change.annotationId));\n        } else if (ls.RenameFile.is(change)) {\n          result.renameFile(_uriConverter(change.oldUri), _uriConverter(change.newUri), change.options, asMetadata(change.annotationId));\n        } else if (ls.DeleteFile.is(change)) {\n          result.deleteFile(_uriConverter(change.uri), change.options, asMetadata(change.annotationId));\n        } else if (ls.TextDocumentEdit.is(change)) {\n          const uri = _uriConverter(change.textDocument.uri);\n          for (const edit of change.edits) {\n            if (ls.AnnotatedTextEdit.is(edit)) {\n              result.replace(uri, asRange(edit.range), edit.newText, asMetadata(edit.annotationId));\n            } else {\n              result.replace(uri, asRange(edit.range), edit.newText);\n            }\n          }\n        } else {\n          throw new Error(`Unknown workspace edit change received:\\n${JSON.stringify(change, undefined, 4)}`);\n        }\n      }, token);\n    } else if (item.changes) {\n      const changes = item.changes;\n      await async.forEach(Object.keys(changes), key => {\n        result.set(_uriConverter(key), asTextEditsSync(changes[key]));\n      }, token);\n    }\n    return result;\n  }\n  function asWorkspaceEditEntryMetadata(annotation) {\n    if (annotation === undefined) {\n      return undefined;\n    }\n    return {\n      label: annotation.label,\n      needsConfirmation: !!annotation.needsConfirmation,\n      description: annotation.description\n    };\n  }\n  function asDocumentLink(item) {\n    let range = asRange(item.range);\n    let target = item.target ? asUri(item.target) : undefined;\n    // target must be optional in DocumentLink\n    let link = new protocolDocumentLink_1.default(range, target);\n    if (item.tooltip !== undefined) {\n      link.tooltip = item.tooltip;\n    }\n    if (item.data !== undefined && item.data !== null) {\n      link.data = item.data;\n    }\n    return link;\n  }\n  async function asDocumentLinks(items, token) {\n    if (!items) {\n      return undefined;\n    }\n    return async.map(items, asDocumentLink, token);\n  }\n  function asColor(color) {\n    return new code.Color(color.red, color.green, color.blue, color.alpha);\n  }\n  function asColorInformation(ci) {\n    return new code.ColorInformation(asRange(ci.range), asColor(ci.color));\n  }\n  async function asColorInformations(colorInformation, token) {\n    if (!colorInformation) {\n      return undefined;\n    }\n    return async.map(colorInformation, asColorInformation, token);\n  }\n  function asColorPresentation(cp) {\n    let presentation = new code.ColorPresentation(cp.label);\n    presentation.additionalTextEdits = asTextEditsSync(cp.additionalTextEdits);\n    if (cp.textEdit) {\n      presentation.textEdit = asTextEdit(cp.textEdit);\n    }\n    return presentation;\n  }\n  async function asColorPresentations(colorPresentations, token) {\n    if (!colorPresentations) {\n      return undefined;\n    }\n    return async.map(colorPresentations, asColorPresentation, token);\n  }\n  function asFoldingRangeKind(kind) {\n    if (kind) {\n      switch (kind) {\n        case ls.FoldingRangeKind.Comment:\n          return code.FoldingRangeKind.Comment;\n        case ls.FoldingRangeKind.Imports:\n          return code.FoldingRangeKind.Imports;\n        case ls.FoldingRangeKind.Region:\n          return code.FoldingRangeKind.Region;\n      }\n    }\n    return undefined;\n  }\n  function asFoldingRange(r) {\n    return new code.FoldingRange(r.startLine, r.endLine, asFoldingRangeKind(r.kind));\n  }\n  async function asFoldingRanges(foldingRanges, token) {\n    if (!foldingRanges) {\n      return undefined;\n    }\n    return async.map(foldingRanges, asFoldingRange, token);\n  }\n  function asSelectionRange(selectionRange) {\n    return new code.SelectionRange(asRange(selectionRange.range), selectionRange.parent ? asSelectionRange(selectionRange.parent) : undefined);\n  }\n  async function asSelectionRanges(selectionRanges, token) {\n    if (!Array.isArray(selectionRanges)) {\n      return [];\n    }\n    return async.map(selectionRanges, asSelectionRange, token);\n  }\n  function asInlineValue(inlineValue) {\n    if (ls.InlineValueText.is(inlineValue)) {\n      return new code.InlineValueText(asRange(inlineValue.range), inlineValue.text);\n    } else if (ls.InlineValueVariableLookup.is(inlineValue)) {\n      return new code.InlineValueVariableLookup(asRange(inlineValue.range), inlineValue.variableName, inlineValue.caseSensitiveLookup);\n    } else {\n      return new code.InlineValueEvaluatableExpression(asRange(inlineValue.range), inlineValue.expression);\n    }\n  }\n  async function asInlineValues(inlineValues, token) {\n    if (!Array.isArray(inlineValues)) {\n      return [];\n    }\n    return async.map(inlineValues, asInlineValue, token);\n  }\n  async function asInlayHint(value, token) {\n    const label = typeof value.label === 'string' ? value.label : await async.map(value.label, asInlayHintLabelPart, token);\n    const result = new protocolInlayHint_1.default(asPosition(value.position), label);\n    if (value.kind !== undefined) {\n      result.kind = value.kind;\n    }\n    if (value.textEdits !== undefined) {\n      result.textEdits = await asTextEdits(value.textEdits, token);\n    }\n    if (value.tooltip !== undefined) {\n      result.tooltip = asTooltip(value.tooltip);\n    }\n    if (value.paddingLeft !== undefined) {\n      result.paddingLeft = value.paddingLeft;\n    }\n    if (value.paddingRight !== undefined) {\n      result.paddingRight = value.paddingRight;\n    }\n    if (value.data !== undefined) {\n      result.data = value.data;\n    }\n    return result;\n  }\n  function asInlayHintLabelPart(part) {\n    const result = new code.InlayHintLabelPart(part.value);\n    if (part.location !== undefined) {\n      result.location = asLocation(part.location);\n    }\n    if (part.tooltip !== undefined) {\n      result.tooltip = asTooltip(part.tooltip);\n    }\n    if (part.command !== undefined) {\n      result.command = asCommand(part.command);\n    }\n    return result;\n  }\n  function asTooltip(value) {\n    if (typeof value === 'string') {\n      return value;\n    }\n    return asMarkdownString(value);\n  }\n  async function asInlayHints(values, token) {\n    if (!Array.isArray(values)) {\n      return undefined;\n    }\n    return async.mapAsync(values, asInlayHint, token);\n  }\n  function asCallHierarchyItem(item) {\n    if (item === null) {\n      return undefined;\n    }\n    const result = new protocolCallHierarchyItem_1.default(asSymbolKind(item.kind), item.name, item.detail || '', asUri(item.uri), asRange(item.range), asRange(item.selectionRange), item.data);\n    if (item.tags !== undefined) {\n      result.tags = asSymbolTags(item.tags);\n    }\n    return result;\n  }\n  async function asCallHierarchyItems(items, token) {\n    if (items === null) {\n      return undefined;\n    }\n    return async.map(items, asCallHierarchyItem, token);\n  }\n  async function asCallHierarchyIncomingCall(item, token) {\n    return new code.CallHierarchyIncomingCall(asCallHierarchyItem(item.from), await asRanges(item.fromRanges, token));\n  }\n  async function asCallHierarchyIncomingCalls(items, token) {\n    if (items === null) {\n      return undefined;\n    }\n    return async.mapAsync(items, asCallHierarchyIncomingCall, token);\n  }\n  async function asCallHierarchyOutgoingCall(item, token) {\n    return new code.CallHierarchyOutgoingCall(asCallHierarchyItem(item.to), await asRanges(item.fromRanges, token));\n  }\n  async function asCallHierarchyOutgoingCalls(items, token) {\n    if (items === null) {\n      return undefined;\n    }\n    return async.mapAsync(items, asCallHierarchyOutgoingCall, token);\n  }\n  async function asSemanticTokens(value, _token) {\n    if (value === undefined || value === null) {\n      return undefined;\n    }\n    return new code.SemanticTokens(new Uint32Array(value.data), value.resultId);\n  }\n  function asSemanticTokensEdit(value) {\n    return new code.SemanticTokensEdit(value.start, value.deleteCount, value.data !== undefined ? new Uint32Array(value.data) : undefined);\n  }\n  async function asSemanticTokensEdits(value, _token) {\n    if (value === undefined || value === null) {\n      return undefined;\n    }\n    return new code.SemanticTokensEdits(value.edits.map(asSemanticTokensEdit), value.resultId);\n  }\n  function asSemanticTokensLegend(value) {\n    return value;\n  }\n  async function asLinkedEditingRanges(value, token) {\n    if (value === null || value === undefined) {\n      return undefined;\n    }\n    return new code.LinkedEditingRanges(await asRanges(value.ranges, token), asRegularExpression(value.wordPattern));\n  }\n  function asRegularExpression(value) {\n    if (value === null || value === undefined) {\n      return undefined;\n    }\n    return new RegExp(value);\n  }\n  function asTypeHierarchyItem(item) {\n    if (item === null) {\n      return undefined;\n    }\n    let result = new protocolTypeHierarchyItem_1.default(asSymbolKind(item.kind), item.name, item.detail || '', asUri(item.uri), asRange(item.range), asRange(item.selectionRange), item.data);\n    if (item.tags !== undefined) {\n      result.tags = asSymbolTags(item.tags);\n    }\n    return result;\n  }\n  async function asTypeHierarchyItems(items, token) {\n    if (items === null) {\n      return undefined;\n    }\n    return async.map(items, asTypeHierarchyItem, token);\n  }\n  function asGlobPattern(pattern) {\n    if (Is.string(pattern)) {\n      return pattern;\n    }\n    if (ls.RelativePattern.is(pattern)) {\n      if (ls.URI.is(pattern.baseUri)) {\n        return new code.RelativePattern(asUri(pattern.baseUri), pattern.pattern);\n      } else if (ls.WorkspaceFolder.is(pattern.baseUri)) {\n        const workspaceFolder = code.workspace.getWorkspaceFolder(asUri(pattern.baseUri.uri));\n        return workspaceFolder !== undefined ? new code.RelativePattern(workspaceFolder, pattern.pattern) : undefined;\n      }\n    }\n    return undefined;\n  }\n  async function asInlineCompletionResult(value, token) {\n    if (!value) {\n      return undefined;\n    }\n    if (Array.isArray(value)) {\n      return async.map(value, item => asInlineCompletionItem(item), token);\n    }\n    const list = value;\n    const converted = await async.map(list.items, item => {\n      return asInlineCompletionItem(item);\n    }, token);\n    return new code.InlineCompletionList(converted);\n  }\n  function asInlineCompletionItem(item) {\n    let insertText;\n    if (typeof item.insertText === 'string') {\n      insertText = item.insertText;\n    } else {\n      insertText = new code.SnippetString(item.insertText.value);\n    }\n    let command = undefined;\n    if (item.command) {\n      command = asCommand(item.command);\n    }\n    const inlineCompletionItem = new code.InlineCompletionItem(insertText, asRange(item.range), command);\n    if (item.filterText) {\n      inlineCompletionItem.filterText = item.filterText;\n    }\n    return inlineCompletionItem;\n  }\n  return {\n    asUri,\n    asDocumentSelector,\n    asDiagnostics,\n    asDiagnostic,\n    asRange,\n    asRanges,\n    asPosition,\n    asDiagnosticSeverity,\n    asDiagnosticTag,\n    asHover,\n    asCompletionResult,\n    asCompletionItem,\n    asTextEdit,\n    asTextEdits,\n    asSignatureHelp,\n    asSignatureInformations,\n    asSignatureInformation,\n    asParameterInformations,\n    asParameterInformation,\n    asDeclarationResult,\n    asDefinitionResult,\n    asLocation,\n    asReferences,\n    asDocumentHighlights,\n    asDocumentHighlight,\n    asDocumentHighlightKind,\n    asSymbolKind,\n    asSymbolTag,\n    asSymbolTags,\n    asSymbolInformations,\n    asSymbolInformation,\n    asDocumentSymbols,\n    asDocumentSymbol,\n    asCommand,\n    asCommands,\n    asCodeAction,\n    asCodeActionKind,\n    asCodeActionKinds,\n    asCodeActionResult,\n    asCodeLens,\n    asCodeLenses,\n    asWorkspaceEdit,\n    asDocumentLink,\n    asDocumentLinks,\n    asFoldingRangeKind,\n    asFoldingRange,\n    asFoldingRanges,\n    asColor,\n    asColorInformation,\n    asColorInformations,\n    asColorPresentation,\n    asColorPresentations,\n    asSelectionRange,\n    asSelectionRanges,\n    asInlineValue,\n    asInlineValues,\n    asInlayHint,\n    asInlayHints,\n    asSemanticTokensLegend,\n    asSemanticTokens,\n    asSemanticTokensEdit,\n    asSemanticTokensEdits,\n    asCallHierarchyItem,\n    asCallHierarchyItems,\n    asCallHierarchyIncomingCall,\n    asCallHierarchyIncomingCalls,\n    asCallHierarchyOutgoingCall,\n    asCallHierarchyOutgoingCalls,\n    asLinkedEditingRanges: asLinkedEditingRanges,\n    asTypeHierarchyItem,\n    asTypeHierarchyItems,\n    asGlobPattern,\n    asInlineCompletionResult,\n    asInlineCompletionItem\n  };\n}\nexports.createConverter = createConverter;","map":{"version":3,"names":["Object","defineProperty","exports","value","createConverter","code","require","ls","Is","async","protocolCompletionItem_1","protocolCodeLens_1","protocolDocumentLink_1","protocolCodeAction_1","protocolDiagnostic_1","protocolCallHierarchyItem_1","protocolTypeHierarchyItem_1","protocolWorkspaceSymbol_1","protocolInlayHint_1","vscode_languageserver_protocol_1","CodeBlock","is","candidate","string","language","uriConverter","trustMarkdown","supportHtml","nullConverter","Uri","parse","_uriConverter","asUri","asDocumentSelector","selector","result","filter","push","NotebookCellTextDocumentFilter","notebook","notebookType","scheme","pattern","TextDocumentFilter","asDiagnostics","diagnostics","token","map","asDiagnostic","asDiagnosticsSync","Array","length","i","diagnostic","ProtocolDiagnostic","asRange","range","message","asDiagnosticSeverity","severity","data","undefined","CodeDescription","codeDescription","target","href","DiagnosticCode","hasDiagnosticCode","diagnosticCode","source","relatedInformation","asRelatedInformation","isArray","tags","asDiagnosticTags","info","DiagnosticRelatedInformation","asLocation","location","tag","converted","asDiagnosticTag","DiagnosticTag","Unnecessary","Deprecated","asPosition","Position","line","character","Range","start","end","asRanges","items","DiagnosticSeverity","Error","Warning","Information","Hint","asHoverContent","asMarkdownString","appendCodeblock","element","item","appendMarkdown","asDocumentation","kind","MarkupKind","Markdown","PlainText","MarkdownString","appendText","isTrusted","asHover","hover","Hover","contents","asCompletionResult","allCommitCharacters","asCompletionItem","list","defaultRange","commitCharacters","getCompletionItemDefaults","itemDefaults","insertTextMode","insertTextFormat","CompletionList","isIncomplete","rangeDefaults","editRange","inserting","insert","replacing","replace","asCompletionItemKind","CompletionItemKind","Text","TypeParameter","asCompletionItemTag","CompletionItemTag","asCompletionItemTags","defaultCommitCharacters","defaultInsertTextMode","defaultInsertTextFormat","defaultData","label","asCompletionItemLabel","default","detail","documentation","documentationFormat","filterText","insertText","asCompletionInsertText","text","fromEdit","number","itemKind","original","originalItemKind","sortText","additionalTextEdits","asTextEditsSync","stringArray","slice","command","asCommand","deprecated","preselect","InsertTextMode","asIs","keepWhitespace","CompletionItemLabelDetails","labelDetails","description","textEdit","newText","getCompletionRangeAndText","textEditText","InsertTextFormat","Snippet","SnippetString","InsertReplaceEdit","asTextEdit","edit","TextEdit","asTextEdits","asSignatureHelp","SignatureHelp","activeSignature","activeParameter","signatures","asSignatureInformations","mapAsync","asSignatureInformation","SignatureInformation","parameters","asParameterInformations","asParameterInformation","ParameterInformation","Location","uri","asDeclarationResult","asLocationResult","asDefinitionResult","asLocationLink","targetUri","targetRange","originSelectionRange","targetSelectionRange","array","LocationLink","links","locations","asReferences","values","asDocumentHighlights","asDocumentHighlight","DocumentHighlight","asDocumentHighlightKind","DocumentHighlightKind","Read","Write","asSymbolInformations","asSymbolInformation","asSymbolKind","SymbolKind","Property","asSymbolTag","SymbolTag","asSymbolTags","name","containerName","SymbolInformation","fillTags","asDocumentSymbols","asDocumentSymbol","DocumentSymbol","selectionRange","children","child","includes","concat","title","arguments","asCommands","kindMapping","Map","set","CodeActionKind","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","asCodeActionKind","get","parts","split","part","append","asCodeActionKinds","asCodeAction","asWorkspaceEdit","isPreferred","disabled","reason","asCodeActionResult","Command","asCodeLens","asCodeLenses","sharedMetadata","changeAnnotations","forEach","keys","key","metaData","asWorkspaceEditEntryMetadata","asMetadata","annotation","WorkspaceEdit","documentChanges","change","CreateFile","createFile","options","annotationId","RenameFile","renameFile","oldUri","newUri","DeleteFile","deleteFile","TextDocumentEdit","textDocument","edits","AnnotatedTextEdit","JSON","stringify","changes","needsConfirmation","asDocumentLink","link","tooltip","asDocumentLinks","asColor","color","Color","red","green","blue","alpha","asColorInformation","ci","ColorInformation","asColorInformations","colorInformation","asColorPresentation","cp","presentation","ColorPresentation","asColorPresentations","colorPresentations","asFoldingRangeKind","FoldingRangeKind","Comment","Imports","Region","asFoldingRange","r","FoldingRange","startLine","endLine","asFoldingRanges","foldingRanges","asSelectionRange","SelectionRange","parent","asSelectionRanges","selectionRanges","asInlineValue","inlineValue","InlineValueText","InlineValueVariableLookup","variableName","caseSensitiveLookup","InlineValueEvaluatableExpression","expression","asInlineValues","inlineValues","asInlayHint","asInlayHintLabelPart","position","textEdits","asTooltip","paddingLeft","paddingRight","InlayHintLabelPart","asInlayHints","asCallHierarchyItem","asCallHierarchyItems","asCallHierarchyIncomingCall","CallHierarchyIncomingCall","from","fromRanges","asCallHierarchyIncomingCalls","asCallHierarchyOutgoingCall","CallHierarchyOutgoingCall","to","asCallHierarchyOutgoingCalls","asSemanticTokens","_token","SemanticTokens","Uint32Array","resultId","asSemanticTokensEdit","SemanticTokensEdit","deleteCount","asSemanticTokensEdits","SemanticTokensEdits","asSemanticTokensLegend","asLinkedEditingRanges","LinkedEditingRanges","ranges","asRegularExpression","wordPattern","RegExp","asTypeHierarchyItem","asTypeHierarchyItems","asGlobPattern","RelativePattern","URI","baseUri","WorkspaceFolder","workspaceFolder","workspace","getWorkspaceFolder","asInlineCompletionResult","asInlineCompletionItem","InlineCompletionList","inlineCompletionItem","InlineCompletionItem"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode-languageclient/lib/common/protocolConverter.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createConverter = void 0;\nconst code = require(\"vscode\");\nconst ls = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nconst async = require(\"./utils/async\");\nconst protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\nconst protocolCodeLens_1 = require(\"./protocolCodeLens\");\nconst protocolDocumentLink_1 = require(\"./protocolDocumentLink\");\nconst protocolCodeAction_1 = require(\"./protocolCodeAction\");\nconst protocolDiagnostic_1 = require(\"./protocolDiagnostic\");\nconst protocolCallHierarchyItem_1 = require(\"./protocolCallHierarchyItem\");\nconst protocolTypeHierarchyItem_1 = require(\"./protocolTypeHierarchyItem\");\nconst protocolWorkspaceSymbol_1 = require(\"./protocolWorkspaceSymbol\");\nconst protocolInlayHint_1 = require(\"./protocolInlayHint\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nvar CodeBlock;\n(function (CodeBlock) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.string(candidate.language) && Is.string(candidate.value);\n    }\n    CodeBlock.is = is;\n})(CodeBlock || (CodeBlock = {}));\nfunction createConverter(uriConverter, trustMarkdown, supportHtml) {\n    const nullConverter = (value) => code.Uri.parse(value);\n    const _uriConverter = uriConverter || nullConverter;\n    function asUri(value) {\n        return _uriConverter(value);\n    }\n    function asDocumentSelector(selector) {\n        const result = [];\n        for (const filter of selector) {\n            if (typeof filter === 'string') {\n                result.push(filter);\n            }\n            else if (vscode_languageserver_protocol_1.NotebookCellTextDocumentFilter.is(filter)) {\n                // We first need to check for the notebook cell filter since a TextDocumentFilter would\n                // match both (e.g. the notebook is optional).\n                if (typeof filter.notebook === 'string') {\n                    result.push({ notebookType: filter.notebook, language: filter.language });\n                }\n                else {\n                    const notebookType = filter.notebook.notebookType ?? '*';\n                    result.push({ notebookType: notebookType, scheme: filter.notebook.scheme, pattern: filter.notebook.pattern, language: filter.language });\n                }\n            }\n            else if (vscode_languageserver_protocol_1.TextDocumentFilter.is(filter)) {\n                result.push({ language: filter.language, scheme: filter.scheme, pattern: filter.pattern });\n            }\n        }\n        return result;\n    }\n    async function asDiagnostics(diagnostics, token) {\n        return async.map(diagnostics, asDiagnostic, token);\n    }\n    function asDiagnosticsSync(diagnostics) {\n        const result = new Array(diagnostics.length);\n        for (let i = 0; i < diagnostics.length; i++) {\n            result[i] = asDiagnostic(diagnostics[i]);\n        }\n        return result;\n    }\n    function asDiagnostic(diagnostic) {\n        let result = new protocolDiagnostic_1.ProtocolDiagnostic(asRange(diagnostic.range), diagnostic.message, asDiagnosticSeverity(diagnostic.severity), diagnostic.data);\n        if (diagnostic.code !== undefined) {\n            if (typeof diagnostic.code === 'string' || typeof diagnostic.code === 'number') {\n                if (ls.CodeDescription.is(diagnostic.codeDescription)) {\n                    result.code = {\n                        value: diagnostic.code,\n                        target: asUri(diagnostic.codeDescription.href)\n                    };\n                }\n                else {\n                    result.code = diagnostic.code;\n                }\n            }\n            else if (protocolDiagnostic_1.DiagnosticCode.is(diagnostic.code)) {\n                // This is for backwards compatibility of a proposed API.\n                // We should remove this at some point.\n                result.hasDiagnosticCode = true;\n                const diagnosticCode = diagnostic.code;\n                result.code = {\n                    value: diagnosticCode.value,\n                    target: asUri(diagnosticCode.target)\n                };\n            }\n        }\n        if (diagnostic.source) {\n            result.source = diagnostic.source;\n        }\n        if (diagnostic.relatedInformation) {\n            result.relatedInformation = asRelatedInformation(diagnostic.relatedInformation);\n        }\n        if (Array.isArray(diagnostic.tags)) {\n            result.tags = asDiagnosticTags(diagnostic.tags);\n        }\n        return result;\n    }\n    function asRelatedInformation(relatedInformation) {\n        const result = new Array(relatedInformation.length);\n        for (let i = 0; i < relatedInformation.length; i++) {\n            const info = relatedInformation[i];\n            result[i] = new code.DiagnosticRelatedInformation(asLocation(info.location), info.message);\n        }\n        return result;\n    }\n    function asDiagnosticTags(tags) {\n        if (!tags) {\n            return undefined;\n        }\n        let result = [];\n        for (let tag of tags) {\n            let converted = asDiagnosticTag(tag);\n            if (converted !== undefined) {\n                result.push(converted);\n            }\n        }\n        return result.length > 0 ? result : undefined;\n    }\n    function asDiagnosticTag(tag) {\n        switch (tag) {\n            case ls.DiagnosticTag.Unnecessary:\n                return code.DiagnosticTag.Unnecessary;\n            case ls.DiagnosticTag.Deprecated:\n                return code.DiagnosticTag.Deprecated;\n            default:\n                return undefined;\n        }\n    }\n    function asPosition(value) {\n        return value ? new code.Position(value.line, value.character) : undefined;\n    }\n    function asRange(value) {\n        return value ? new code.Range(value.start.line, value.start.character, value.end.line, value.end.character) : undefined;\n    }\n    async function asRanges(items, token) {\n        return async.map(items, (range) => {\n            return new code.Range(range.start.line, range.start.character, range.end.line, range.end.character);\n        }, token);\n    }\n    function asDiagnosticSeverity(value) {\n        if (value === undefined || value === null) {\n            return code.DiagnosticSeverity.Error;\n        }\n        switch (value) {\n            case ls.DiagnosticSeverity.Error:\n                return code.DiagnosticSeverity.Error;\n            case ls.DiagnosticSeverity.Warning:\n                return code.DiagnosticSeverity.Warning;\n            case ls.DiagnosticSeverity.Information:\n                return code.DiagnosticSeverity.Information;\n            case ls.DiagnosticSeverity.Hint:\n                return code.DiagnosticSeverity.Hint;\n        }\n        return code.DiagnosticSeverity.Error;\n    }\n    function asHoverContent(value) {\n        if (Is.string(value)) {\n            return asMarkdownString(value);\n        }\n        else if (CodeBlock.is(value)) {\n            let result = asMarkdownString();\n            return result.appendCodeblock(value.value, value.language);\n        }\n        else if (Array.isArray(value)) {\n            let result = [];\n            for (let element of value) {\n                let item = asMarkdownString();\n                if (CodeBlock.is(element)) {\n                    item.appendCodeblock(element.value, element.language);\n                }\n                else {\n                    item.appendMarkdown(element);\n                }\n                result.push(item);\n            }\n            return result;\n        }\n        else {\n            return asMarkdownString(value);\n        }\n    }\n    function asDocumentation(value) {\n        if (Is.string(value)) {\n            return value;\n        }\n        else {\n            switch (value.kind) {\n                case ls.MarkupKind.Markdown:\n                    return asMarkdownString(value.value);\n                case ls.MarkupKind.PlainText:\n                    return value.value;\n                default:\n                    return `Unsupported Markup content received. Kind is: ${value.kind}`;\n            }\n        }\n    }\n    function asMarkdownString(value) {\n        let result;\n        if (value === undefined || typeof value === 'string') {\n            result = new code.MarkdownString(value);\n        }\n        else {\n            switch (value.kind) {\n                case ls.MarkupKind.Markdown:\n                    result = new code.MarkdownString(value.value);\n                    break;\n                case ls.MarkupKind.PlainText:\n                    result = new code.MarkdownString();\n                    result.appendText(value.value);\n                    break;\n                default:\n                    result = new code.MarkdownString();\n                    result.appendText(`Unsupported Markup content received. Kind is: ${value.kind}`);\n                    break;\n            }\n        }\n        result.isTrusted = trustMarkdown;\n        result.supportHtml = supportHtml;\n        return result;\n    }\n    function asHover(hover) {\n        if (!hover) {\n            return undefined;\n        }\n        return new code.Hover(asHoverContent(hover.contents), asRange(hover.range));\n    }\n    async function asCompletionResult(value, allCommitCharacters, token) {\n        if (!value) {\n            return undefined;\n        }\n        if (Array.isArray(value)) {\n            return async.map(value, (item) => asCompletionItem(item, allCommitCharacters), token);\n        }\n        const list = value;\n        const { defaultRange, commitCharacters } = getCompletionItemDefaults(list, allCommitCharacters);\n        const converted = await async.map(list.items, (item) => {\n            return asCompletionItem(item, commitCharacters, defaultRange, list.itemDefaults?.insertTextMode, list.itemDefaults?.insertTextFormat, list.itemDefaults?.data);\n        }, token);\n        return new code.CompletionList(converted, list.isIncomplete);\n    }\n    function getCompletionItemDefaults(list, allCommitCharacters) {\n        const rangeDefaults = list.itemDefaults?.editRange;\n        const commitCharacters = list.itemDefaults?.commitCharacters ?? allCommitCharacters;\n        return ls.Range.is(rangeDefaults)\n            ? { defaultRange: asRange(rangeDefaults), commitCharacters }\n            : rangeDefaults !== undefined\n                ? { defaultRange: { inserting: asRange(rangeDefaults.insert), replacing: asRange(rangeDefaults.replace) }, commitCharacters }\n                : { defaultRange: undefined, commitCharacters };\n    }\n    function asCompletionItemKind(value) {\n        // Protocol item kind is 1 based, codes item kind is zero based.\n        if (ls.CompletionItemKind.Text <= value && value <= ls.CompletionItemKind.TypeParameter) {\n            return [value - 1, undefined];\n        }\n        return [code.CompletionItemKind.Text, value];\n    }\n    function asCompletionItemTag(tag) {\n        switch (tag) {\n            case ls.CompletionItemTag.Deprecated:\n                return code.CompletionItemTag.Deprecated;\n        }\n        return undefined;\n    }\n    function asCompletionItemTags(tags) {\n        if (tags === undefined || tags === null) {\n            return [];\n        }\n        const result = [];\n        for (const tag of tags) {\n            const converted = asCompletionItemTag(tag);\n            if (converted !== undefined) {\n                result.push(converted);\n            }\n        }\n        return result;\n    }\n    function asCompletionItem(item, defaultCommitCharacters, defaultRange, defaultInsertTextMode, defaultInsertTextFormat, defaultData) {\n        const tags = asCompletionItemTags(item.tags);\n        const label = asCompletionItemLabel(item);\n        const result = new protocolCompletionItem_1.default(label);\n        if (item.detail) {\n            result.detail = item.detail;\n        }\n        if (item.documentation) {\n            result.documentation = asDocumentation(item.documentation);\n            result.documentationFormat = Is.string(item.documentation) ? '$string' : item.documentation.kind;\n        }\n        if (item.filterText) {\n            result.filterText = item.filterText;\n        }\n        const insertText = asCompletionInsertText(item, defaultRange, defaultInsertTextFormat);\n        if (insertText) {\n            result.insertText = insertText.text;\n            result.range = insertText.range;\n            result.fromEdit = insertText.fromEdit;\n        }\n        if (Is.number(item.kind)) {\n            let [itemKind, original] = asCompletionItemKind(item.kind);\n            result.kind = itemKind;\n            if (original) {\n                result.originalItemKind = original;\n            }\n        }\n        if (item.sortText) {\n            result.sortText = item.sortText;\n        }\n        if (item.additionalTextEdits) {\n            result.additionalTextEdits = asTextEditsSync(item.additionalTextEdits);\n        }\n        const commitCharacters = item.commitCharacters !== undefined\n            ? Is.stringArray(item.commitCharacters) ? item.commitCharacters : undefined\n            : defaultCommitCharacters;\n        if (commitCharacters) {\n            result.commitCharacters = commitCharacters.slice();\n        }\n        if (item.command) {\n            result.command = asCommand(item.command);\n        }\n        if (item.deprecated === true || item.deprecated === false) {\n            result.deprecated = item.deprecated;\n            if (item.deprecated === true) {\n                tags.push(code.CompletionItemTag.Deprecated);\n            }\n        }\n        if (item.preselect === true || item.preselect === false) {\n            result.preselect = item.preselect;\n        }\n        const data = item.data ?? defaultData;\n        if (data !== undefined) {\n            result.data = data;\n        }\n        if (tags.length > 0) {\n            result.tags = tags;\n        }\n        const insertTextMode = item.insertTextMode ?? defaultInsertTextMode;\n        if (insertTextMode !== undefined) {\n            result.insertTextMode = insertTextMode;\n            if (insertTextMode === ls.InsertTextMode.asIs) {\n                result.keepWhitespace = true;\n            }\n        }\n        return result;\n    }\n    function asCompletionItemLabel(item) {\n        if (ls.CompletionItemLabelDetails.is(item.labelDetails)) {\n            return {\n                label: item.label,\n                detail: item.labelDetails.detail,\n                description: item.labelDetails.description\n            };\n        }\n        else {\n            return item.label;\n        }\n    }\n    function asCompletionInsertText(item, defaultRange, defaultInsertTextFormat) {\n        const insertTextFormat = item.insertTextFormat ?? defaultInsertTextFormat;\n        if (item.textEdit !== undefined || defaultRange !== undefined) {\n            const [range, newText] = item.textEdit !== undefined\n                ? getCompletionRangeAndText(item.textEdit)\n                : [defaultRange, item.textEditText ?? item.label];\n            if (insertTextFormat === ls.InsertTextFormat.Snippet) {\n                return { text: new code.SnippetString(newText), range: range, fromEdit: true };\n            }\n            else {\n                return { text: newText, range: range, fromEdit: true };\n            }\n        }\n        else if (item.insertText) {\n            if (insertTextFormat === ls.InsertTextFormat.Snippet) {\n                return { text: new code.SnippetString(item.insertText), fromEdit: false };\n            }\n            else {\n                return { text: item.insertText, fromEdit: false };\n            }\n        }\n        else {\n            return undefined;\n        }\n    }\n    function getCompletionRangeAndText(value) {\n        if (ls.InsertReplaceEdit.is(value)) {\n            return [{ inserting: asRange(value.insert), replacing: asRange(value.replace) }, value.newText];\n        }\n        else {\n            return [asRange(value.range), value.newText];\n        }\n    }\n    function asTextEdit(edit) {\n        if (!edit) {\n            return undefined;\n        }\n        return new code.TextEdit(asRange(edit.range), edit.newText);\n    }\n    async function asTextEdits(items, token) {\n        if (!items) {\n            return undefined;\n        }\n        return async.map(items, asTextEdit, token);\n    }\n    function asTextEditsSync(items) {\n        if (!items) {\n            return undefined;\n        }\n        const result = new Array(items.length);\n        for (let i = 0; i < items.length; i++) {\n            result[i] = asTextEdit(items[i]);\n        }\n        return result;\n    }\n    async function asSignatureHelp(item, token) {\n        if (!item) {\n            return undefined;\n        }\n        let result = new code.SignatureHelp();\n        if (Is.number(item.activeSignature)) {\n            result.activeSignature = item.activeSignature;\n        }\n        else {\n            // activeSignature was optional in the past\n            result.activeSignature = 0;\n        }\n        if (Is.number(item.activeParameter)) {\n            result.activeParameter = item.activeParameter;\n        }\n        else {\n            // activeParameter was optional in the past\n            result.activeParameter = 0;\n        }\n        if (item.signatures) {\n            result.signatures = await asSignatureInformations(item.signatures, token);\n        }\n        return result;\n    }\n    async function asSignatureInformations(items, token) {\n        return async.mapAsync(items, asSignatureInformation, token);\n    }\n    async function asSignatureInformation(item, token) {\n        let result = new code.SignatureInformation(item.label);\n        if (item.documentation !== undefined) {\n            result.documentation = asDocumentation(item.documentation);\n        }\n        if (item.parameters !== undefined) {\n            result.parameters = await asParameterInformations(item.parameters, token);\n        }\n        if (item.activeParameter !== undefined) {\n            result.activeParameter = item.activeParameter;\n        }\n        {\n            return result;\n        }\n    }\n    function asParameterInformations(items, token) {\n        return async.map(items, asParameterInformation, token);\n    }\n    function asParameterInformation(item) {\n        let result = new code.ParameterInformation(item.label);\n        if (item.documentation) {\n            result.documentation = asDocumentation(item.documentation);\n        }\n        return result;\n    }\n    function asLocation(item) {\n        return item ? new code.Location(_uriConverter(item.uri), asRange(item.range)) : undefined;\n    }\n    async function asDeclarationResult(item, token) {\n        if (!item) {\n            return undefined;\n        }\n        return asLocationResult(item, token);\n    }\n    async function asDefinitionResult(item, token) {\n        if (!item) {\n            return undefined;\n        }\n        return asLocationResult(item, token);\n    }\n    function asLocationLink(item) {\n        if (!item) {\n            return undefined;\n        }\n        let result = {\n            targetUri: _uriConverter(item.targetUri),\n            targetRange: asRange(item.targetRange),\n            originSelectionRange: asRange(item.originSelectionRange),\n            targetSelectionRange: asRange(item.targetSelectionRange)\n        };\n        if (!result.targetSelectionRange) {\n            throw new Error(`targetSelectionRange must not be undefined or null`);\n        }\n        return result;\n    }\n    async function asLocationResult(item, token) {\n        if (!item) {\n            return undefined;\n        }\n        if (Is.array(item)) {\n            if (item.length === 0) {\n                return [];\n            }\n            else if (ls.LocationLink.is(item[0])) {\n                const links = item;\n                return async.map(links, asLocationLink, token);\n            }\n            else {\n                const locations = item;\n                return async.map(locations, asLocation, token);\n            }\n        }\n        else if (ls.LocationLink.is(item)) {\n            return [asLocationLink(item)];\n        }\n        else {\n            return asLocation(item);\n        }\n    }\n    async function asReferences(values, token) {\n        if (!values) {\n            return undefined;\n        }\n        return async.map(values, asLocation, token);\n    }\n    async function asDocumentHighlights(values, token) {\n        if (!values) {\n            return undefined;\n        }\n        return async.map(values, asDocumentHighlight, token);\n    }\n    function asDocumentHighlight(item) {\n        let result = new code.DocumentHighlight(asRange(item.range));\n        if (Is.number(item.kind)) {\n            result.kind = asDocumentHighlightKind(item.kind);\n        }\n        return result;\n    }\n    function asDocumentHighlightKind(item) {\n        switch (item) {\n            case ls.DocumentHighlightKind.Text:\n                return code.DocumentHighlightKind.Text;\n            case ls.DocumentHighlightKind.Read:\n                return code.DocumentHighlightKind.Read;\n            case ls.DocumentHighlightKind.Write:\n                return code.DocumentHighlightKind.Write;\n        }\n        return code.DocumentHighlightKind.Text;\n    }\n    async function asSymbolInformations(values, token) {\n        if (!values) {\n            return undefined;\n        }\n        return async.map(values, asSymbolInformation, token);\n    }\n    function asSymbolKind(item) {\n        if (item <= ls.SymbolKind.TypeParameter) {\n            // Symbol kind is one based in the protocol and zero based in code.\n            return item - 1;\n        }\n        return code.SymbolKind.Property;\n    }\n    function asSymbolTag(value) {\n        switch (value) {\n            case ls.SymbolTag.Deprecated:\n                return code.SymbolTag.Deprecated;\n            default:\n                return undefined;\n        }\n    }\n    function asSymbolTags(items) {\n        if (items === undefined || items === null) {\n            return undefined;\n        }\n        const result = [];\n        for (const item of items) {\n            const converted = asSymbolTag(item);\n            if (converted !== undefined) {\n                result.push(converted);\n            }\n        }\n        return result.length === 0 ? undefined : result;\n    }\n    function asSymbolInformation(item) {\n        const data = item.data;\n        const location = item.location;\n        const result = location.range === undefined || data !== undefined\n            ? new protocolWorkspaceSymbol_1.default(item.name, asSymbolKind(item.kind), item.containerName ?? '', location.range === undefined ? _uriConverter(location.uri) : new code.Location(_uriConverter(item.location.uri), asRange(location.range)), data)\n            : new code.SymbolInformation(item.name, asSymbolKind(item.kind), item.containerName ?? '', new code.Location(_uriConverter(item.location.uri), asRange(location.range)));\n        fillTags(result, item);\n        return result;\n    }\n    async function asDocumentSymbols(values, token) {\n        if (values === undefined || values === null) {\n            return undefined;\n        }\n        return async.map(values, asDocumentSymbol, token);\n    }\n    function asDocumentSymbol(value) {\n        let result = new code.DocumentSymbol(value.name, value.detail || '', asSymbolKind(value.kind), asRange(value.range), asRange(value.selectionRange));\n        fillTags(result, value);\n        if (value.children !== undefined && value.children.length > 0) {\n            let children = [];\n            for (let child of value.children) {\n                children.push(asDocumentSymbol(child));\n            }\n            result.children = children;\n        }\n        return result;\n    }\n    function fillTags(result, value) {\n        result.tags = asSymbolTags(value.tags);\n        if (value.deprecated) {\n            if (!result.tags) {\n                result.tags = [code.SymbolTag.Deprecated];\n            }\n            else {\n                if (!result.tags.includes(code.SymbolTag.Deprecated)) {\n                    result.tags = result.tags.concat(code.SymbolTag.Deprecated);\n                }\n            }\n        }\n    }\n    function asCommand(item) {\n        let result = { title: item.title, command: item.command };\n        if (item.arguments) {\n            result.arguments = item.arguments;\n        }\n        return result;\n    }\n    async function asCommands(items, token) {\n        if (!items) {\n            return undefined;\n        }\n        return async.map(items, asCommand, token);\n    }\n    const kindMapping = new Map();\n    kindMapping.set(ls.CodeActionKind.Empty, code.CodeActionKind.Empty);\n    kindMapping.set(ls.CodeActionKind.QuickFix, code.CodeActionKind.QuickFix);\n    kindMapping.set(ls.CodeActionKind.Refactor, code.CodeActionKind.Refactor);\n    kindMapping.set(ls.CodeActionKind.RefactorExtract, code.CodeActionKind.RefactorExtract);\n    kindMapping.set(ls.CodeActionKind.RefactorInline, code.CodeActionKind.RefactorInline);\n    kindMapping.set(ls.CodeActionKind.RefactorRewrite, code.CodeActionKind.RefactorRewrite);\n    kindMapping.set(ls.CodeActionKind.Source, code.CodeActionKind.Source);\n    kindMapping.set(ls.CodeActionKind.SourceOrganizeImports, code.CodeActionKind.SourceOrganizeImports);\n    function asCodeActionKind(item) {\n        if (item === undefined || item === null) {\n            return undefined;\n        }\n        let result = kindMapping.get(item);\n        if (result) {\n            return result;\n        }\n        let parts = item.split('.');\n        result = code.CodeActionKind.Empty;\n        for (let part of parts) {\n            result = result.append(part);\n        }\n        return result;\n    }\n    function asCodeActionKinds(items) {\n        if (items === undefined || items === null) {\n            return undefined;\n        }\n        return items.map(kind => asCodeActionKind(kind));\n    }\n    async function asCodeAction(item, token) {\n        if (item === undefined || item === null) {\n            return undefined;\n        }\n        let result = new protocolCodeAction_1.default(item.title, item.data);\n        if (item.kind !== undefined) {\n            result.kind = asCodeActionKind(item.kind);\n        }\n        if (item.diagnostics !== undefined) {\n            result.diagnostics = asDiagnosticsSync(item.diagnostics);\n        }\n        if (item.edit !== undefined) {\n            result.edit = await asWorkspaceEdit(item.edit, token);\n        }\n        if (item.command !== undefined) {\n            result.command = asCommand(item.command);\n        }\n        if (item.isPreferred !== undefined) {\n            result.isPreferred = item.isPreferred;\n        }\n        if (item.disabled !== undefined) {\n            result.disabled = { reason: item.disabled.reason };\n        }\n        return result;\n    }\n    function asCodeActionResult(items, token) {\n        return async.mapAsync(items, async (item) => {\n            if (ls.Command.is(item)) {\n                return asCommand(item);\n            }\n            else {\n                return asCodeAction(item, token);\n            }\n        }, token);\n    }\n    function asCodeLens(item) {\n        if (!item) {\n            return undefined;\n        }\n        let result = new protocolCodeLens_1.default(asRange(item.range));\n        if (item.command) {\n            result.command = asCommand(item.command);\n        }\n        if (item.data !== undefined && item.data !== null) {\n            result.data = item.data;\n        }\n        return result;\n    }\n    async function asCodeLenses(items, token) {\n        if (!items) {\n            return undefined;\n        }\n        return async.map(items, asCodeLens, token);\n    }\n    async function asWorkspaceEdit(item, token) {\n        if (!item) {\n            return undefined;\n        }\n        const sharedMetadata = new Map();\n        if (item.changeAnnotations !== undefined) {\n            const changeAnnotations = item.changeAnnotations;\n            await async.forEach(Object.keys(changeAnnotations), (key) => {\n                const metaData = asWorkspaceEditEntryMetadata(changeAnnotations[key]);\n                sharedMetadata.set(key, metaData);\n            }, token);\n        }\n        const asMetadata = (annotation) => {\n            if (annotation === undefined) {\n                return undefined;\n            }\n            else {\n                return sharedMetadata.get(annotation);\n            }\n        };\n        const result = new code.WorkspaceEdit();\n        if (item.documentChanges) {\n            const documentChanges = item.documentChanges;\n            await async.forEach(documentChanges, (change) => {\n                if (ls.CreateFile.is(change)) {\n                    result.createFile(_uriConverter(change.uri), change.options, asMetadata(change.annotationId));\n                }\n                else if (ls.RenameFile.is(change)) {\n                    result.renameFile(_uriConverter(change.oldUri), _uriConverter(change.newUri), change.options, asMetadata(change.annotationId));\n                }\n                else if (ls.DeleteFile.is(change)) {\n                    result.deleteFile(_uriConverter(change.uri), change.options, asMetadata(change.annotationId));\n                }\n                else if (ls.TextDocumentEdit.is(change)) {\n                    const uri = _uriConverter(change.textDocument.uri);\n                    for (const edit of change.edits) {\n                        if (ls.AnnotatedTextEdit.is(edit)) {\n                            result.replace(uri, asRange(edit.range), edit.newText, asMetadata(edit.annotationId));\n                        }\n                        else {\n                            result.replace(uri, asRange(edit.range), edit.newText);\n                        }\n                    }\n                }\n                else {\n                    throw new Error(`Unknown workspace edit change received:\\n${JSON.stringify(change, undefined, 4)}`);\n                }\n            }, token);\n        }\n        else if (item.changes) {\n            const changes = item.changes;\n            await async.forEach(Object.keys(changes), (key) => {\n                result.set(_uriConverter(key), asTextEditsSync(changes[key]));\n            }, token);\n        }\n        return result;\n    }\n    function asWorkspaceEditEntryMetadata(annotation) {\n        if (annotation === undefined) {\n            return undefined;\n        }\n        return { label: annotation.label, needsConfirmation: !!annotation.needsConfirmation, description: annotation.description };\n    }\n    function asDocumentLink(item) {\n        let range = asRange(item.range);\n        let target = item.target ? asUri(item.target) : undefined;\n        // target must be optional in DocumentLink\n        let link = new protocolDocumentLink_1.default(range, target);\n        if (item.tooltip !== undefined) {\n            link.tooltip = item.tooltip;\n        }\n        if (item.data !== undefined && item.data !== null) {\n            link.data = item.data;\n        }\n        return link;\n    }\n    async function asDocumentLinks(items, token) {\n        if (!items) {\n            return undefined;\n        }\n        return async.map(items, asDocumentLink, token);\n    }\n    function asColor(color) {\n        return new code.Color(color.red, color.green, color.blue, color.alpha);\n    }\n    function asColorInformation(ci) {\n        return new code.ColorInformation(asRange(ci.range), asColor(ci.color));\n    }\n    async function asColorInformations(colorInformation, token) {\n        if (!colorInformation) {\n            return undefined;\n        }\n        return async.map(colorInformation, asColorInformation, token);\n    }\n    function asColorPresentation(cp) {\n        let presentation = new code.ColorPresentation(cp.label);\n        presentation.additionalTextEdits = asTextEditsSync(cp.additionalTextEdits);\n        if (cp.textEdit) {\n            presentation.textEdit = asTextEdit(cp.textEdit);\n        }\n        return presentation;\n    }\n    async function asColorPresentations(colorPresentations, token) {\n        if (!colorPresentations) {\n            return undefined;\n        }\n        return async.map(colorPresentations, asColorPresentation, token);\n    }\n    function asFoldingRangeKind(kind) {\n        if (kind) {\n            switch (kind) {\n                case ls.FoldingRangeKind.Comment:\n                    return code.FoldingRangeKind.Comment;\n                case ls.FoldingRangeKind.Imports:\n                    return code.FoldingRangeKind.Imports;\n                case ls.FoldingRangeKind.Region:\n                    return code.FoldingRangeKind.Region;\n            }\n        }\n        return undefined;\n    }\n    function asFoldingRange(r) {\n        return new code.FoldingRange(r.startLine, r.endLine, asFoldingRangeKind(r.kind));\n    }\n    async function asFoldingRanges(foldingRanges, token) {\n        if (!foldingRanges) {\n            return undefined;\n        }\n        return async.map(foldingRanges, asFoldingRange, token);\n    }\n    function asSelectionRange(selectionRange) {\n        return new code.SelectionRange(asRange(selectionRange.range), selectionRange.parent ? asSelectionRange(selectionRange.parent) : undefined);\n    }\n    async function asSelectionRanges(selectionRanges, token) {\n        if (!Array.isArray(selectionRanges)) {\n            return [];\n        }\n        return async.map(selectionRanges, asSelectionRange, token);\n    }\n    function asInlineValue(inlineValue) {\n        if (ls.InlineValueText.is(inlineValue)) {\n            return new code.InlineValueText(asRange(inlineValue.range), inlineValue.text);\n        }\n        else if (ls.InlineValueVariableLookup.is(inlineValue)) {\n            return new code.InlineValueVariableLookup(asRange(inlineValue.range), inlineValue.variableName, inlineValue.caseSensitiveLookup);\n        }\n        else {\n            return new code.InlineValueEvaluatableExpression(asRange(inlineValue.range), inlineValue.expression);\n        }\n    }\n    async function asInlineValues(inlineValues, token) {\n        if (!Array.isArray(inlineValues)) {\n            return [];\n        }\n        return async.map(inlineValues, asInlineValue, token);\n    }\n    async function asInlayHint(value, token) {\n        const label = typeof value.label === 'string'\n            ? value.label\n            : await async.map(value.label, asInlayHintLabelPart, token);\n        const result = new protocolInlayHint_1.default(asPosition(value.position), label);\n        if (value.kind !== undefined) {\n            result.kind = value.kind;\n        }\n        if (value.textEdits !== undefined) {\n            result.textEdits = await asTextEdits(value.textEdits, token);\n        }\n        if (value.tooltip !== undefined) {\n            result.tooltip = asTooltip(value.tooltip);\n        }\n        if (value.paddingLeft !== undefined) {\n            result.paddingLeft = value.paddingLeft;\n        }\n        if (value.paddingRight !== undefined) {\n            result.paddingRight = value.paddingRight;\n        }\n        if (value.data !== undefined) {\n            result.data = value.data;\n        }\n        return result;\n    }\n    function asInlayHintLabelPart(part) {\n        const result = new code.InlayHintLabelPart(part.value);\n        if (part.location !== undefined) {\n            result.location = asLocation(part.location);\n        }\n        if (part.tooltip !== undefined) {\n            result.tooltip = asTooltip(part.tooltip);\n        }\n        if (part.command !== undefined) {\n            result.command = asCommand(part.command);\n        }\n        return result;\n    }\n    function asTooltip(value) {\n        if (typeof value === 'string') {\n            return value;\n        }\n        return asMarkdownString(value);\n    }\n    async function asInlayHints(values, token) {\n        if (!Array.isArray(values)) {\n            return undefined;\n        }\n        return async.mapAsync(values, asInlayHint, token);\n    }\n    function asCallHierarchyItem(item) {\n        if (item === null) {\n            return undefined;\n        }\n        const result = new protocolCallHierarchyItem_1.default(asSymbolKind(item.kind), item.name, item.detail || '', asUri(item.uri), asRange(item.range), asRange(item.selectionRange), item.data);\n        if (item.tags !== undefined) {\n            result.tags = asSymbolTags(item.tags);\n        }\n        return result;\n    }\n    async function asCallHierarchyItems(items, token) {\n        if (items === null) {\n            return undefined;\n        }\n        return async.map(items, asCallHierarchyItem, token);\n    }\n    async function asCallHierarchyIncomingCall(item, token) {\n        return new code.CallHierarchyIncomingCall(asCallHierarchyItem(item.from), await asRanges(item.fromRanges, token));\n    }\n    async function asCallHierarchyIncomingCalls(items, token) {\n        if (items === null) {\n            return undefined;\n        }\n        return async.mapAsync(items, asCallHierarchyIncomingCall, token);\n    }\n    async function asCallHierarchyOutgoingCall(item, token) {\n        return new code.CallHierarchyOutgoingCall(asCallHierarchyItem(item.to), await asRanges(item.fromRanges, token));\n    }\n    async function asCallHierarchyOutgoingCalls(items, token) {\n        if (items === null) {\n            return undefined;\n        }\n        return async.mapAsync(items, asCallHierarchyOutgoingCall, token);\n    }\n    async function asSemanticTokens(value, _token) {\n        if (value === undefined || value === null) {\n            return undefined;\n        }\n        return new code.SemanticTokens(new Uint32Array(value.data), value.resultId);\n    }\n    function asSemanticTokensEdit(value) {\n        return new code.SemanticTokensEdit(value.start, value.deleteCount, value.data !== undefined ? new Uint32Array(value.data) : undefined);\n    }\n    async function asSemanticTokensEdits(value, _token) {\n        if (value === undefined || value === null) {\n            return undefined;\n        }\n        return new code.SemanticTokensEdits(value.edits.map(asSemanticTokensEdit), value.resultId);\n    }\n    function asSemanticTokensLegend(value) {\n        return value;\n    }\n    async function asLinkedEditingRanges(value, token) {\n        if (value === null || value === undefined) {\n            return undefined;\n        }\n        return new code.LinkedEditingRanges(await asRanges(value.ranges, token), asRegularExpression(value.wordPattern));\n    }\n    function asRegularExpression(value) {\n        if (value === null || value === undefined) {\n            return undefined;\n        }\n        return new RegExp(value);\n    }\n    function asTypeHierarchyItem(item) {\n        if (item === null) {\n            return undefined;\n        }\n        let result = new protocolTypeHierarchyItem_1.default(asSymbolKind(item.kind), item.name, item.detail || '', asUri(item.uri), asRange(item.range), asRange(item.selectionRange), item.data);\n        if (item.tags !== undefined) {\n            result.tags = asSymbolTags(item.tags);\n        }\n        return result;\n    }\n    async function asTypeHierarchyItems(items, token) {\n        if (items === null) {\n            return undefined;\n        }\n        return async.map(items, asTypeHierarchyItem, token);\n    }\n    function asGlobPattern(pattern) {\n        if (Is.string(pattern)) {\n            return pattern;\n        }\n        if (ls.RelativePattern.is(pattern)) {\n            if (ls.URI.is(pattern.baseUri)) {\n                return new code.RelativePattern(asUri(pattern.baseUri), pattern.pattern);\n            }\n            else if (ls.WorkspaceFolder.is(pattern.baseUri)) {\n                const workspaceFolder = code.workspace.getWorkspaceFolder(asUri(pattern.baseUri.uri));\n                return workspaceFolder !== undefined ? new code.RelativePattern(workspaceFolder, pattern.pattern) : undefined;\n            }\n        }\n        return undefined;\n    }\n    async function asInlineCompletionResult(value, token) {\n        if (!value) {\n            return undefined;\n        }\n        if (Array.isArray(value)) {\n            return async.map(value, (item) => asInlineCompletionItem(item), token);\n        }\n        const list = value;\n        const converted = await async.map(list.items, (item) => {\n            return asInlineCompletionItem(item);\n        }, token);\n        return new code.InlineCompletionList(converted);\n    }\n    function asInlineCompletionItem(item) {\n        let insertText;\n        if (typeof item.insertText === 'string') {\n            insertText = item.insertText;\n        }\n        else {\n            insertText = new code.SnippetString(item.insertText.value);\n        }\n        let command = undefined;\n        if (item.command) {\n            command = asCommand(item.command);\n        }\n        const inlineCompletionItem = new code.InlineCompletionItem(insertText, asRange(item.range), command);\n        if (item.filterText) {\n            inlineCompletionItem.filterText = item.filterText;\n        }\n        return inlineCompletionItem;\n    }\n    return {\n        asUri,\n        asDocumentSelector,\n        asDiagnostics,\n        asDiagnostic,\n        asRange,\n        asRanges,\n        asPosition,\n        asDiagnosticSeverity,\n        asDiagnosticTag,\n        asHover,\n        asCompletionResult,\n        asCompletionItem,\n        asTextEdit,\n        asTextEdits,\n        asSignatureHelp,\n        asSignatureInformations,\n        asSignatureInformation,\n        asParameterInformations,\n        asParameterInformation,\n        asDeclarationResult,\n        asDefinitionResult,\n        asLocation,\n        asReferences,\n        asDocumentHighlights,\n        asDocumentHighlight,\n        asDocumentHighlightKind,\n        asSymbolKind,\n        asSymbolTag,\n        asSymbolTags,\n        asSymbolInformations,\n        asSymbolInformation,\n        asDocumentSymbols,\n        asDocumentSymbol,\n        asCommand,\n        asCommands,\n        asCodeAction,\n        asCodeActionKind,\n        asCodeActionKinds,\n        asCodeActionResult,\n        asCodeLens,\n        asCodeLenses,\n        asWorkspaceEdit,\n        asDocumentLink,\n        asDocumentLinks,\n        asFoldingRangeKind,\n        asFoldingRange,\n        asFoldingRanges,\n        asColor,\n        asColorInformation,\n        asColorInformations,\n        asColorPresentation,\n        asColorPresentations,\n        asSelectionRange,\n        asSelectionRanges,\n        asInlineValue,\n        asInlineValues,\n        asInlayHint,\n        asInlayHints,\n        asSemanticTokensLegend,\n        asSemanticTokens,\n        asSemanticTokensEdit,\n        asSemanticTokensEdits,\n        asCallHierarchyItem,\n        asCallHierarchyItems,\n        asCallHierarchyIncomingCall,\n        asCallHierarchyIncomingCalls,\n        asCallHierarchyOutgoingCall,\n        asCallHierarchyOutgoingCalls,\n        asLinkedEditingRanges: asLinkedEditingRanges,\n        asTypeHierarchyItem,\n        asTypeHierarchyItems,\n        asGlobPattern,\n        asInlineCompletionResult,\n        asInlineCompletionItem\n    };\n}\nexports.createConverter = createConverter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}