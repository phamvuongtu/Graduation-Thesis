{"ast":null,"code":"\"use strict\";\n\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SelectionRangeFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nclass SelectionRangeFeature extends features_1.TextDocumentLanguageFeature {\n  constructor(client) {\n    super(client, vscode_languageserver_protocol_1.SelectionRangeRequest.type);\n  }\n  fillClientCapabilities(capabilities) {\n    const capability = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'selectionRange');\n    capability.dynamicRegistration = true;\n  }\n  initialize(capabilities, documentSelector) {\n    const [id, options] = this.getRegistration(documentSelector, capabilities.selectionRangeProvider);\n    if (!id || !options) {\n      return;\n    }\n    this.register({\n      id: id,\n      registerOptions: options\n    });\n  }\n  registerLanguageProvider(options) {\n    const selector = options.documentSelector;\n    const provider = {\n      provideSelectionRanges: (document, positions, token) => {\n        const client = this._client;\n        const provideSelectionRanges = async (document, positions, token) => {\n          const requestParams = {\n            textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n            positions: client.code2ProtocolConverter.asPositionsSync(positions, token)\n          };\n          return client.sendRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, requestParams, token).then(ranges => {\n            if (token.isCancellationRequested) {\n              return null;\n            }\n            return client.protocol2CodeConverter.asSelectionRanges(ranges, token);\n          }, error => {\n            return client.handleFailedRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, token, error, null);\n          });\n        };\n        const middleware = client.middleware;\n        return middleware.provideSelectionRanges ? middleware.provideSelectionRanges(document, positions, token, provideSelectionRanges) : provideSelectionRanges(document, positions, token);\n      }\n    };\n    return [this.registerProvider(selector, provider), provider];\n  }\n  registerProvider(selector, provider) {\n    return vscode_1.languages.registerSelectionRangeProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider);\n  }\n}\nexports.SelectionRangeFeature = SelectionRangeFeature;","map":{"version":3,"names":["Object","defineProperty","exports","value","SelectionRangeFeature","vscode_1","require","vscode_languageserver_protocol_1","features_1","TextDocumentLanguageFeature","constructor","client","SelectionRangeRequest","type","fillClientCapabilities","capabilities","capability","ensure","dynamicRegistration","initialize","documentSelector","id","options","getRegistration","selectionRangeProvider","register","registerOptions","registerLanguageProvider","selector","provider","provideSelectionRanges","document","positions","token","_client","requestParams","textDocument","code2ProtocolConverter","asTextDocumentIdentifier","asPositionsSync","sendRequest","then","ranges","isCancellationRequested","protocol2CodeConverter","asSelectionRanges","error","handleFailedRequest","middleware","registerProvider","languages","registerSelectionRangeProvider","asDocumentSelector"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode-languageclient/lib/common/selectionRange.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SelectionRangeFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nclass SelectionRangeFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.SelectionRangeRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        const capability = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'selectionRange');\n        capability.dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const [id, options] = this.getRegistration(documentSelector, capabilities.selectionRangeProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideSelectionRanges: (document, positions, token) => {\n                const client = this._client;\n                const provideSelectionRanges = async (document, positions, token) => {\n                    const requestParams = {\n                        textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                        positions: client.code2ProtocolConverter.asPositionsSync(positions, token)\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, requestParams, token).then((ranges) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asSelectionRanges(ranges, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideSelectionRanges\n                    ? middleware.provideSelectionRanges(document, positions, token, provideSelectionRanges)\n                    : provideSelectionRanges(document, positions, token);\n            }\n        };\n        return [this.registerProvider(selector, provider), provider];\n    }\n    registerProvider(selector, provider) {\n        return vscode_1.languages.registerSelectionRangeProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider);\n    }\n}\nexports.SelectionRangeFeature = SelectionRangeFeature;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}