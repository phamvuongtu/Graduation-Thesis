{"ast":null,"code":"var _jsxFileName = \"/Users/phamtu/Downloads/Code/OCE/oce-frontend/src/components/CodeEditorSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Editor from \"@monaco-editor/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditorSection = ({\n  onChange,\n  language,\n  code,\n  theme\n}) => {\n  _s();\n  const pythonDefault = `# Write your Python code here\\nprint(\"Hello, Python!\")`;\n  const javaDefault = `// Write your Java code here\\npublic class Main {\\n  public static void main(String[] args) {\\n    System.out.println(\"Hello, Java!\");\\n  }\\n}`;\n  const cDefault = `#include <stdio.h>\\n\\nint main() {\\n  printf(\"Hello, C!\");\\n  return 0;\\n}`;\n  const cppDefault = `#include <iostream>\\n\\nint main() {\\n  std::cout << \"Hello, C++!\" << std::endl;\\n  return 0;\\n}`;\n  const [value, setValue] = useState(code || \"\");\n  const [editorTheme, setEditorTheme] = useState(theme ? theme.value : \"vs-dark\");\n  const handleEditorChange = value => {\n    setValue(value);\n    onChange(\"code\", value);\n  };\n  useEffect(() => {\n    setValue(code); // Update the value when code prop changes\n  }, [code]);\n  useEffect(() => {\n    setEditorTheme(theme ? theme.value : \"vs-dark\");\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay rounded-md overflow-hidden w-full h-full shadow-4xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleLanguageChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"javascript\",\n        children: \"JavaScript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"python\",\n        children: \"Python\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"java\",\n        children: \"Java\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"cpp\",\n        children: \"C++\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"c\",\n        children: \"C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      height: \"85vh\",\n      width: `100%`,\n      language: language || \"java\",\n      value: value,\n      theme: editorTheme,\n      defaultValue: code,\n      onChange: handleEditorChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditorSection, \"z+vYKiWRUf3xijpmMQGMNI+NcOQ=\");\n_c = CodeEditorSection;\nexport default CodeEditorSection;\nvar _c;\n$RefreshReg$(_c, \"CodeEditorSection\");","map":{"version":3,"names":["React","useState","useEffect","Editor","jsxDEV","_jsxDEV","CodeEditorSection","onChange","language","code","theme","_s","pythonDefault","javaDefault","cDefault","cppDefault","value","setValue","editorTheme","setEditorTheme","handleEditorChange","className","children","handleLanguageChange","fileName","_jsxFileName","lineNumber","columnNumber","height","width","defaultValue","_c","$RefreshReg$"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/src/components/CodeEditorSection.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Editor from \"@monaco-editor/react\";\n\nconst CodeEditorSection = ({ onChange, language, code, theme }) => {\n  const pythonDefault = `# Write your Python code here\\nprint(\"Hello, Python!\")`;\n  const javaDefault = `// Write your Java code here\\npublic class Main {\\n  public static void main(String[] args) {\\n    System.out.println(\"Hello, Java!\");\\n  }\\n}`;\n  const cDefault = `#include <stdio.h>\\n\\nint main() {\\n  printf(\"Hello, C!\");\\n  return 0;\\n}`;\n  const cppDefault = `#include <iostream>\\n\\nint main() {\\n  std::cout << \"Hello, C++!\" << std::endl;\\n  return 0;\\n}`;\n  const [value, setValue] = useState(code || \"\");\n  const [editorTheme, setEditorTheme] = useState(theme ? theme.value : \"vs-dark\");\n  \n  const handleEditorChange = (value) => {\n    setValue(value);\n    onChange(\"code\", value);\n  };\n\n  useEffect(() => {\n    setValue(code); // Update the value when code prop changes\n  }, [code]);\n\n  useEffect(() => {\n    setEditorTheme(theme ? theme.value : \"vs-dark\");\n  }, [theme]);\n\n  return (\n    <div className=\"overlay rounded-md overflow-hidden w-full h-full shadow-4xl\">\n      <select onChange={handleLanguageChange}>\n        <option value=\"javascript\">JavaScript</option>\n        <option value=\"python\">Python</option>\n        <option value=\"java\">Java</option>\n        <option value=\"cpp\">C++</option>\n        <option value=\"c\">C</option>\n      </select>\n      <Editor\n        height=\"85vh\"\n        width={`100%`}\n        language={language || \"java\"}\n        value={value}\n        theme={editorTheme}\n        defaultValue={code}\n        onChange={handleEditorChange}\n      />\n    </div>\n  );\n};\n\nexport default CodeEditorSection;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAMC,aAAa,GAAI,wDAAuD;EAC9E,MAAMC,WAAW,GAAI,gJAA+I;EACpK,MAAMC,QAAQ,GAAI,4EAA2E;EAC7F,MAAMC,UAAU,GAAI,iGAAgG;EACpH,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAACQ,IAAI,IAAI,EAAE,CAAC;EAC9C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAACS,KAAK,GAAGA,KAAK,CAACM,KAAK,GAAG,SAAS,CAAC;EAE/E,MAAMI,kBAAkB,GAAIJ,KAAK,IAAK;IACpCC,QAAQ,CAACD,KAAK,CAAC;IACfT,QAAQ,CAAC,MAAM,EAAES,KAAK,CAAC;EACzB,CAAC;EAEDd,SAAS,CAAC,MAAM;IACde,QAAQ,CAACR,IAAI,CAAC,CAAC,CAAC;EAClB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEVP,SAAS,CAAC,MAAM;IACdiB,cAAc,CAACT,KAAK,GAAGA,KAAK,CAACM,KAAK,GAAG,SAAS,CAAC;EACjD,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EAEX,oBACEL,OAAA;IAAKgB,SAAS,EAAC,6DAA6D;IAAAC,QAAA,gBAC1EjB,OAAA;MAAQE,QAAQ,EAAEgB,oBAAqB;MAAAD,QAAA,gBACrCjB,OAAA;QAAQW,KAAK,EAAC,YAAY;QAAAM,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9CtB,OAAA;QAAQW,KAAK,EAAC,QAAQ;QAAAM,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtCtB,OAAA;QAAQW,KAAK,EAAC,MAAM;QAAAM,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClCtB,OAAA;QAAQW,KAAK,EAAC,KAAK;QAAAM,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChCtB,OAAA;QAAQW,KAAK,EAAC,GAAG;QAAAM,QAAA,EAAC;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACTtB,OAAA,CAACF,MAAM;MACLyB,MAAM,EAAC,MAAM;MACbC,KAAK,EAAG,MAAM;MACdrB,QAAQ,EAAEA,QAAQ,IAAI,MAAO;MAC7BQ,KAAK,EAAEA,KAAM;MACbN,KAAK,EAAEQ,WAAY;MACnBY,YAAY,EAAErB,IAAK;MACnBF,QAAQ,EAAEa;IAAmB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CAzCIL,iBAAiB;AAAAyB,EAAA,GAAjBzB,iBAAiB;AA2CvB,eAAeA,iBAAiB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}