{"ast":null,"code":"\"use strict\";\n\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.SemanticTokensRegistrationType = exports.TokenFormat = void 0;\nconst messages_1 = require(\"./messages\");\n//------- 'textDocument/semanticTokens' -----\nvar TokenFormat;\n(function (TokenFormat) {\n  TokenFormat.Relative = 'relative';\n})(TokenFormat || (exports.TokenFormat = TokenFormat = {}));\nvar SemanticTokensRegistrationType;\n(function (SemanticTokensRegistrationType) {\n  SemanticTokensRegistrationType.method = 'textDocument/semanticTokens';\n  SemanticTokensRegistrationType.type = new messages_1.RegistrationType(SemanticTokensRegistrationType.method);\n})(SemanticTokensRegistrationType || (exports.SemanticTokensRegistrationType = SemanticTokensRegistrationType = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRequest;\n(function (SemanticTokensRequest) {\n  SemanticTokensRequest.method = 'textDocument/semanticTokens/full';\n  SemanticTokensRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n  SemanticTokensRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRequest.method);\n  SemanticTokensRequest.registrationMethod = SemanticTokensRegistrationType.method;\n})(SemanticTokensRequest || (exports.SemanticTokensRequest = SemanticTokensRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensDeltaRequest;\n(function (SemanticTokensDeltaRequest) {\n  SemanticTokensDeltaRequest.method = 'textDocument/semanticTokens/full/delta';\n  SemanticTokensDeltaRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n  SemanticTokensDeltaRequest.type = new messages_1.ProtocolRequestType(SemanticTokensDeltaRequest.method);\n  SemanticTokensDeltaRequest.registrationMethod = SemanticTokensRegistrationType.method;\n})(SemanticTokensDeltaRequest || (exports.SemanticTokensDeltaRequest = SemanticTokensDeltaRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRangeRequest;\n(function (SemanticTokensRangeRequest) {\n  SemanticTokensRangeRequest.method = 'textDocument/semanticTokens/range';\n  SemanticTokensRangeRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n  SemanticTokensRangeRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRangeRequest.method);\n  SemanticTokensRangeRequest.registrationMethod = SemanticTokensRegistrationType.method;\n})(SemanticTokensRangeRequest || (exports.SemanticTokensRangeRequest = SemanticTokensRangeRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRefreshRequest;\n(function (SemanticTokensRefreshRequest) {\n  SemanticTokensRefreshRequest.method = `workspace/semanticTokens/refresh`;\n  SemanticTokensRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n  SemanticTokensRefreshRequest.type = new messages_1.ProtocolRequestType0(SemanticTokensRefreshRequest.method);\n})(SemanticTokensRefreshRequest || (exports.SemanticTokensRefreshRequest = SemanticTokensRefreshRequest = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","SemanticTokensRefreshRequest","SemanticTokensRangeRequest","SemanticTokensDeltaRequest","SemanticTokensRequest","SemanticTokensRegistrationType","TokenFormat","messages_1","require","Relative","method","type","RegistrationType","messageDirection","MessageDirection","clientToServer","ProtocolRequestType","registrationMethod","serverToClient","ProtocolRequestType0"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode-languageserver-protocol/lib/common/protocol.semanticTokens.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SemanticTokensRefreshRequest = exports.SemanticTokensRangeRequest = exports.SemanticTokensDeltaRequest = exports.SemanticTokensRequest = exports.SemanticTokensRegistrationType = exports.TokenFormat = void 0;\nconst messages_1 = require(\"./messages\");\n//------- 'textDocument/semanticTokens' -----\nvar TokenFormat;\n(function (TokenFormat) {\n    TokenFormat.Relative = 'relative';\n})(TokenFormat || (exports.TokenFormat = TokenFormat = {}));\nvar SemanticTokensRegistrationType;\n(function (SemanticTokensRegistrationType) {\n    SemanticTokensRegistrationType.method = 'textDocument/semanticTokens';\n    SemanticTokensRegistrationType.type = new messages_1.RegistrationType(SemanticTokensRegistrationType.method);\n})(SemanticTokensRegistrationType || (exports.SemanticTokensRegistrationType = SemanticTokensRegistrationType = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRequest;\n(function (SemanticTokensRequest) {\n    SemanticTokensRequest.method = 'textDocument/semanticTokens/full';\n    SemanticTokensRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    SemanticTokensRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRequest.method);\n    SemanticTokensRequest.registrationMethod = SemanticTokensRegistrationType.method;\n})(SemanticTokensRequest || (exports.SemanticTokensRequest = SemanticTokensRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensDeltaRequest;\n(function (SemanticTokensDeltaRequest) {\n    SemanticTokensDeltaRequest.method = 'textDocument/semanticTokens/full/delta';\n    SemanticTokensDeltaRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    SemanticTokensDeltaRequest.type = new messages_1.ProtocolRequestType(SemanticTokensDeltaRequest.method);\n    SemanticTokensDeltaRequest.registrationMethod = SemanticTokensRegistrationType.method;\n})(SemanticTokensDeltaRequest || (exports.SemanticTokensDeltaRequest = SemanticTokensDeltaRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRangeRequest;\n(function (SemanticTokensRangeRequest) {\n    SemanticTokensRangeRequest.method = 'textDocument/semanticTokens/range';\n    SemanticTokensRangeRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    SemanticTokensRangeRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRangeRequest.method);\n    SemanticTokensRangeRequest.registrationMethod = SemanticTokensRegistrationType.method;\n})(SemanticTokensRangeRequest || (exports.SemanticTokensRangeRequest = SemanticTokensRangeRequest = {}));\n/**\n * @since 3.16.0\n */\nvar SemanticTokensRefreshRequest;\n(function (SemanticTokensRefreshRequest) {\n    SemanticTokensRefreshRequest.method = `workspace/semanticTokens/refresh`;\n    SemanticTokensRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    SemanticTokensRefreshRequest.type = new messages_1.ProtocolRequestType0(SemanticTokensRefreshRequest.method);\n})(SemanticTokensRefreshRequest || (exports.SemanticTokensRefreshRequest = SemanticTokensRefreshRequest = {}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}