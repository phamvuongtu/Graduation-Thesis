{"ast":null,"code":"var _jsxFileName = \"/Users/phamtu/Downloads/Code/OCE/oce-frontend/src/components/LanguagesDropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { languageOptions } from \"../constants/languageOptions\";\nimport Dropdown from './Dropdown';\nimport { CaretDown } from './Icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguagesDropdown = ({\n  handleLanguageChange,\n  language,\n  className\n}) => {\n  _s();\n  const [currentLanguage, setCurrentLanguage] = useState(language);\n  useEffect(() => {\n    if (!currentLanguage && languageOptions.length > 0) {\n      setCurrentLanguage(languageOptions[0].value);\n    }\n  }, [currentLanguage]);\n  const handleChange = newLanguage => {\n    const selectedLanguage = languageOptions.find(lang => lang.value === newLanguage);\n    setCurrentLanguage(selectedLanguage);\n    handleLanguageChange(selectedLanguage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex items-center ${className}`,\n    children: /*#__PURE__*/_jsxDEV(Dropdown, {\n      icon: /*#__PURE__*/_jsxDEV(CaretDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this),\n      altText: \"Language Actions\",\n      textColor: \"text-primary-primary500\",\n      placeholder: `Select Language`,\n      options: languageOptions.map(lang => ({\n        label: lang.label,\n        value: lang.value,\n        key: lang.id\n      })),\n      onChange: handleChange,\n      value: currentLanguage === null || currentLanguage === void 0 ? void 0 : currentLanguage.value,\n      className: \"w-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguagesDropdown, \"WM+r9qe89CVtvMd9rMS8kZUjLKY=\");\n_c = LanguagesDropdown;\nexport default LanguagesDropdown;\nvar _c;\n$RefreshReg$(_c, \"LanguagesDropdown\");","map":{"version":3,"names":["React","useState","useEffect","languageOptions","Dropdown","CaretDown","jsxDEV","_jsxDEV","LanguagesDropdown","handleLanguageChange","language","className","_s","currentLanguage","setCurrentLanguage","length","value","handleChange","newLanguage","selectedLanguage","find","lang","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","altText","textColor","placeholder","options","map","label","key","id","onChange","_c","$RefreshReg$"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/src/components/LanguagesDropdown.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { languageOptions } from \"../constants/languageOptions\";\nimport Dropdown from './Dropdown';\nimport { CaretDown } from './Icon';\n\nconst LanguagesDropdown = ({ handleLanguageChange, language, className }) => {\n  const [currentLanguage, setCurrentLanguage] = useState(language);\n\n  useEffect(() => {\n    if (!currentLanguage && languageOptions.length > 0) {\n      setCurrentLanguage(languageOptions[0].value);\n    }\n  }, [currentLanguage]);\n\n  const handleChange = (newLanguage) => {\n    const selectedLanguage = languageOptions.find(\n      (lang) => lang.value === newLanguage\n    );\n    setCurrentLanguage(selectedLanguage);\n    handleLanguageChange(selectedLanguage);\n  };\n\n  return (\n    <div className={`flex items-center ${className}`}>\n      <Dropdown\n        icon={<CaretDown />}\n        altText=\"Language Actions\"\n        textColor=\"text-primary-primary500\"\n        placeholder={`Select Language`}\n        options={languageOptions.map((lang) => ({\n          label: lang.label,\n          value: lang.value,\n          key: lang.id,\n        }))}\n        onChange={handleChange}\n        value={currentLanguage?.value}\n        className=\"w-full\"\n      />\n    </div>\n  );\n};\n\nexport default LanguagesDropdown;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,8BAA8B;AAC9D,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,SAAS,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,oBAAoB;EAAEC,QAAQ;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAACS,QAAQ,CAAC;EAEhER,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,eAAe,IAAIV,eAAe,CAACY,MAAM,GAAG,CAAC,EAAE;MAClDD,kBAAkB,CAACX,eAAe,CAAC,CAAC,CAAC,CAACa,KAAK,CAAC;IAC9C;EACF,CAAC,EAAE,CAACH,eAAe,CAAC,CAAC;EAErB,MAAMI,YAAY,GAAIC,WAAW,IAAK;IACpC,MAAMC,gBAAgB,GAAGhB,eAAe,CAACiB,IAAI,CAC1CC,IAAI,IAAKA,IAAI,CAACL,KAAK,KAAKE,WAC3B,CAAC;IACDJ,kBAAkB,CAACK,gBAAgB,CAAC;IACpCV,oBAAoB,CAACU,gBAAgB,CAAC;EACxC,CAAC;EAED,oBACEZ,OAAA;IAAKI,SAAS,EAAG,qBAAoBA,SAAU,EAAE;IAAAW,QAAA,eAC/Cf,OAAA,CAACH,QAAQ;MACPmB,IAAI,eAAEhB,OAAA,CAACF,SAAS;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;MACpBC,OAAO,EAAC,kBAAkB;MAC1BC,SAAS,EAAC,yBAAyB;MACnCC,WAAW,EAAG,iBAAiB;MAC/BC,OAAO,EAAE5B,eAAe,CAAC6B,GAAG,CAAEX,IAAI,KAAM;QACtCY,KAAK,EAAEZ,IAAI,CAACY,KAAK;QACjBjB,KAAK,EAAEK,IAAI,CAACL,KAAK;QACjBkB,GAAG,EAAEb,IAAI,CAACc;MACZ,CAAC,CAAC,CAAE;MACJC,QAAQ,EAAEnB,YAAa;MACvBD,KAAK,EAAEH,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEG,KAAM;MAC9BL,SAAS,EAAC;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CAnCIJ,iBAAiB;AAAA6B,EAAA,GAAjB7B,iBAAiB;AAqCvB,eAAeA,iBAAiB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}