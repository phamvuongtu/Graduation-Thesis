{"ast":null,"code":"\"use strict\";\n\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProtocolNotificationType = exports.ProtocolNotificationType0 = exports.ProtocolRequestType = exports.ProtocolRequestType0 = exports.RegistrationType = exports.MessageDirection = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nvar MessageDirection;\n(function (MessageDirection) {\n  MessageDirection[\"clientToServer\"] = \"clientToServer\";\n  MessageDirection[\"serverToClient\"] = \"serverToClient\";\n  MessageDirection[\"both\"] = \"both\";\n})(MessageDirection || (exports.MessageDirection = MessageDirection = {}));\nclass RegistrationType {\n  constructor(method) {\n    this.method = method;\n  }\n}\nexports.RegistrationType = RegistrationType;\nclass ProtocolRequestType0 extends vscode_jsonrpc_1.RequestType0 {\n  constructor(method) {\n    super(method);\n  }\n}\nexports.ProtocolRequestType0 = ProtocolRequestType0;\nclass ProtocolRequestType extends vscode_jsonrpc_1.RequestType {\n  constructor(method) {\n    super(method, vscode_jsonrpc_1.ParameterStructures.byName);\n  }\n}\nexports.ProtocolRequestType = ProtocolRequestType;\nclass ProtocolNotificationType0 extends vscode_jsonrpc_1.NotificationType0 {\n  constructor(method) {\n    super(method);\n  }\n}\nexports.ProtocolNotificationType0 = ProtocolNotificationType0;\nclass ProtocolNotificationType extends vscode_jsonrpc_1.NotificationType {\n  constructor(method) {\n    super(method, vscode_jsonrpc_1.ParameterStructures.byName);\n  }\n}\nexports.ProtocolNotificationType = ProtocolNotificationType;","map":{"version":3,"names":["Object","defineProperty","exports","value","ProtocolNotificationType","ProtocolNotificationType0","ProtocolRequestType","ProtocolRequestType0","RegistrationType","MessageDirection","vscode_jsonrpc_1","require","constructor","method","RequestType0","RequestType","ParameterStructures","byName","NotificationType0","NotificationType"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode-languageserver-protocol/lib/common/messages.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProtocolNotificationType = exports.ProtocolNotificationType0 = exports.ProtocolRequestType = exports.ProtocolRequestType0 = exports.RegistrationType = exports.MessageDirection = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nvar MessageDirection;\n(function (MessageDirection) {\n    MessageDirection[\"clientToServer\"] = \"clientToServer\";\n    MessageDirection[\"serverToClient\"] = \"serverToClient\";\n    MessageDirection[\"both\"] = \"both\";\n})(MessageDirection || (exports.MessageDirection = MessageDirection = {}));\nclass RegistrationType {\n    constructor(method) {\n        this.method = method;\n    }\n}\nexports.RegistrationType = RegistrationType;\nclass ProtocolRequestType0 extends vscode_jsonrpc_1.RequestType0 {\n    constructor(method) {\n        super(method);\n    }\n}\nexports.ProtocolRequestType0 = ProtocolRequestType0;\nclass ProtocolRequestType extends vscode_jsonrpc_1.RequestType {\n    constructor(method) {\n        super(method, vscode_jsonrpc_1.ParameterStructures.byName);\n    }\n}\nexports.ProtocolRequestType = ProtocolRequestType;\nclass ProtocolNotificationType0 extends vscode_jsonrpc_1.NotificationType0 {\n    constructor(method) {\n        super(method);\n    }\n}\nexports.ProtocolNotificationType0 = ProtocolNotificationType0;\nclass ProtocolNotificationType extends vscode_jsonrpc_1.NotificationType {\n    constructor(method) {\n        super(method, vscode_jsonrpc_1.ParameterStructures.byName);\n    }\n}\nexports.ProtocolNotificationType = ProtocolNotificationType;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,wBAAwB,GAAGF,OAAO,CAACG,yBAAyB,GAAGH,OAAO,CAACI,mBAAmB,GAAGJ,OAAO,CAACK,oBAAoB,GAAGL,OAAO,CAACM,gBAAgB,GAAGN,OAAO,CAACO,gBAAgB,GAAG,KAAK,CAAC;AAChM,MAAMC,gBAAgB,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAClD,IAAIF,gBAAgB;AACpB,CAAC,UAAUA,gBAAgB,EAAE;EACzBA,gBAAgB,CAAC,gBAAgB,CAAC,GAAG,gBAAgB;EACrDA,gBAAgB,CAAC,gBAAgB,CAAC,GAAG,gBAAgB;EACrDA,gBAAgB,CAAC,MAAM,CAAC,GAAG,MAAM;AACrC,CAAC,EAAEA,gBAAgB,KAAKP,OAAO,CAACO,gBAAgB,GAAGA,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC;AAC1E,MAAMD,gBAAgB,CAAC;EACnBI,WAAWA,CAACC,MAAM,EAAE;IAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;AACJ;AACAX,OAAO,CAACM,gBAAgB,GAAGA,gBAAgB;AAC3C,MAAMD,oBAAoB,SAASG,gBAAgB,CAACI,YAAY,CAAC;EAC7DF,WAAWA,CAACC,MAAM,EAAE;IAChB,KAAK,CAACA,MAAM,CAAC;EACjB;AACJ;AACAX,OAAO,CAACK,oBAAoB,GAAGA,oBAAoB;AACnD,MAAMD,mBAAmB,SAASI,gBAAgB,CAACK,WAAW,CAAC;EAC3DH,WAAWA,CAACC,MAAM,EAAE;IAChB,KAAK,CAACA,MAAM,EAAEH,gBAAgB,CAACM,mBAAmB,CAACC,MAAM,CAAC;EAC9D;AACJ;AACAf,OAAO,CAACI,mBAAmB,GAAGA,mBAAmB;AACjD,MAAMD,yBAAyB,SAASK,gBAAgB,CAACQ,iBAAiB,CAAC;EACvEN,WAAWA,CAACC,MAAM,EAAE;IAChB,KAAK,CAACA,MAAM,CAAC;EACjB;AACJ;AACAX,OAAO,CAACG,yBAAyB,GAAGA,yBAAyB;AAC7D,MAAMD,wBAAwB,SAASM,gBAAgB,CAACS,gBAAgB,CAAC;EACrEP,WAAWA,CAACC,MAAM,EAAE;IAChB,KAAK,CAACA,MAAM,EAAEH,gBAAgB,CAACM,mBAAmB,CAACC,MAAM,CAAC;EAC9D;AACJ;AACAf,OAAO,CAACE,wBAAwB,GAAGA,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}