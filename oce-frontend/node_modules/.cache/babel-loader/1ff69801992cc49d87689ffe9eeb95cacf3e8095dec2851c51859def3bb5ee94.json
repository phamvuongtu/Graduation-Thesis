{"ast":null,"code":"\"use strict\";\n\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nconst messages_1 = require(\"./messages\");\nvar WorkDoneProgress;\n(function (WorkDoneProgress) {\n  WorkDoneProgress.type = new vscode_jsonrpc_1.ProgressType();\n  function is(value) {\n    return value === WorkDoneProgress.type;\n  }\n  WorkDoneProgress.is = is;\n})(WorkDoneProgress || (exports.WorkDoneProgress = WorkDoneProgress = {}));\n/**\n * The `window/workDoneProgress/create` request is sent from the server to the client to initiate progress\n * reporting from the server.\n */\nvar WorkDoneProgressCreateRequest;\n(function (WorkDoneProgressCreateRequest) {\n  WorkDoneProgressCreateRequest.method = 'window/workDoneProgress/create';\n  WorkDoneProgressCreateRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n  WorkDoneProgressCreateRequest.type = new messages_1.ProtocolRequestType(WorkDoneProgressCreateRequest.method);\n})(WorkDoneProgressCreateRequest || (exports.WorkDoneProgressCreateRequest = WorkDoneProgressCreateRequest = {}));\n/**\n * The `window/workDoneProgress/cancel` notification is sent from  the client to the server to cancel a progress\n * initiated on the server side.\n */\nvar WorkDoneProgressCancelNotification;\n(function (WorkDoneProgressCancelNotification) {\n  WorkDoneProgressCancelNotification.method = 'window/workDoneProgress/cancel';\n  WorkDoneProgressCancelNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n  WorkDoneProgressCancelNotification.type = new messages_1.ProtocolNotificationType(WorkDoneProgressCancelNotification.method);\n})(WorkDoneProgressCancelNotification || (exports.WorkDoneProgressCancelNotification = WorkDoneProgressCancelNotification = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","WorkDoneProgressCancelNotification","WorkDoneProgressCreateRequest","WorkDoneProgress","vscode_jsonrpc_1","require","messages_1","type","ProgressType","is","method","messageDirection","MessageDirection","serverToClient","ProtocolRequestType","clientToServer","ProtocolNotificationType"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode-languageserver-protocol/lib/common/protocol.progress.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkDoneProgressCancelNotification = exports.WorkDoneProgressCreateRequest = exports.WorkDoneProgress = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nconst messages_1 = require(\"./messages\");\nvar WorkDoneProgress;\n(function (WorkDoneProgress) {\n    WorkDoneProgress.type = new vscode_jsonrpc_1.ProgressType();\n    function is(value) {\n        return value === WorkDoneProgress.type;\n    }\n    WorkDoneProgress.is = is;\n})(WorkDoneProgress || (exports.WorkDoneProgress = WorkDoneProgress = {}));\n/**\n * The `window/workDoneProgress/create` request is sent from the server to the client to initiate progress\n * reporting from the server.\n */\nvar WorkDoneProgressCreateRequest;\n(function (WorkDoneProgressCreateRequest) {\n    WorkDoneProgressCreateRequest.method = 'window/workDoneProgress/create';\n    WorkDoneProgressCreateRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    WorkDoneProgressCreateRequest.type = new messages_1.ProtocolRequestType(WorkDoneProgressCreateRequest.method);\n})(WorkDoneProgressCreateRequest || (exports.WorkDoneProgressCreateRequest = WorkDoneProgressCreateRequest = {}));\n/**\n * The `window/workDoneProgress/cancel` notification is sent from  the client to the server to cancel a progress\n * initiated on the server side.\n */\nvar WorkDoneProgressCancelNotification;\n(function (WorkDoneProgressCancelNotification) {\n    WorkDoneProgressCancelNotification.method = 'window/workDoneProgress/cancel';\n    WorkDoneProgressCancelNotification.messageDirection = messages_1.MessageDirection.clientToServer;\n    WorkDoneProgressCancelNotification.type = new messages_1.ProtocolNotificationType(WorkDoneProgressCancelNotification.method);\n})(WorkDoneProgressCancelNotification || (exports.WorkDoneProgressCancelNotification = WorkDoneProgressCancelNotification = {}));\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,kCAAkC,GAAGF,OAAO,CAACG,6BAA6B,GAAGH,OAAO,CAACI,gBAAgB,GAAG,KAAK,CAAC;AACtH,MAAMC,gBAAgB,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAClD,MAAMC,UAAU,GAAGD,OAAO,CAAC,YAAY,CAAC;AACxC,IAAIF,gBAAgB;AACpB,CAAC,UAAUA,gBAAgB,EAAE;EACzBA,gBAAgB,CAACI,IAAI,GAAG,IAAIH,gBAAgB,CAACI,YAAY,CAAC,CAAC;EAC3D,SAASC,EAAEA,CAACT,KAAK,EAAE;IACf,OAAOA,KAAK,KAAKG,gBAAgB,CAACI,IAAI;EAC1C;EACAJ,gBAAgB,CAACM,EAAE,GAAGA,EAAE;AAC5B,CAAC,EAAEN,gBAAgB,KAAKJ,OAAO,CAACI,gBAAgB,GAAGA,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC;AAC1E;AACA;AACA;AACA;AACA,IAAID,6BAA6B;AACjC,CAAC,UAAUA,6BAA6B,EAAE;EACtCA,6BAA6B,CAACQ,MAAM,GAAG,gCAAgC;EACvER,6BAA6B,CAACS,gBAAgB,GAAGL,UAAU,CAACM,gBAAgB,CAACC,cAAc;EAC3FX,6BAA6B,CAACK,IAAI,GAAG,IAAID,UAAU,CAACQ,mBAAmB,CAACZ,6BAA6B,CAACQ,MAAM,CAAC;AACjH,CAAC,EAAER,6BAA6B,KAAKH,OAAO,CAACG,6BAA6B,GAAGA,6BAA6B,GAAG,CAAC,CAAC,CAAC,CAAC;AACjH;AACA;AACA;AACA;AACA,IAAID,kCAAkC;AACtC,CAAC,UAAUA,kCAAkC,EAAE;EAC3CA,kCAAkC,CAACS,MAAM,GAAG,gCAAgC;EAC5ET,kCAAkC,CAACU,gBAAgB,GAAGL,UAAU,CAACM,gBAAgB,CAACG,cAAc;EAChGd,kCAAkC,CAACM,IAAI,GAAG,IAAID,UAAU,CAACU,wBAAwB,CAACf,kCAAkC,CAACS,MAAM,CAAC;AAChI,CAAC,EAAET,kCAAkC,KAAKF,OAAO,CAACE,kCAAkC,GAAGA,kCAAkC,GAAG,CAAC,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}