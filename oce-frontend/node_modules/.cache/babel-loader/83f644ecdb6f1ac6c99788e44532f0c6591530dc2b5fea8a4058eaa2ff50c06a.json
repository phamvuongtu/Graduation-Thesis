{"ast":null,"code":"function findLast(array, predicate) {\n  const idx = findLastIdx(array, predicate);\n  if (idx === -1) {\n    return undefined;\n  }\n  return array[idx];\n}\nfunction findLastIdx(array, predicate, fromIndex = array.length - 1) {\n  for (let i = fromIndex; i >= 0; i--) {\n    const element = array[i];\n    if (predicate(element)) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction findLastMonotonous(array, predicate) {\n  const idx = findLastIdxMonotonous(array, predicate);\n  return idx === -1 ? undefined : array[idx];\n}\nfunction findLastIdxMonotonous(array, predicate, startIdx = 0, endIdxEx = array.length) {\n  let i = startIdx;\n  let j = endIdxEx;\n  while (i < j) {\n    const k = Math.floor((i + j) / 2);\n    if (predicate(array[k])) {\n      i = k + 1;\n    } else {\n      j = k;\n    }\n  }\n  return i - 1;\n}\nfunction findFirstMonotonous(array, predicate) {\n  const idx = findFirstIdxMonotonousOrArrLen(array, predicate);\n  return idx === array.length ? undefined : array[idx];\n}\nfunction findFirstIdxMonotonousOrArrLen(array, predicate, startIdx = 0, endIdxEx = array.length) {\n  let i = startIdx;\n  let j = endIdxEx;\n  while (i < j) {\n    const k = Math.floor((i + j) / 2);\n    if (predicate(array[k])) {\n      j = k;\n    } else {\n      i = k + 1;\n    }\n  }\n  return i;\n}\nclass MonotonousArray {\n  static {\n    this.assertInvariants = false;\n  }\n  constructor(_array) {\n    this._array = _array;\n    this._findLastMonotonousLastIdx = 0;\n  }\n  findLastMonotonous(predicate) {\n    if (MonotonousArray.assertInvariants) {\n      if (this._prevFindLastPredicate) {\n        for (const item of this._array) {\n          if (this._prevFindLastPredicate(item) && !predicate(item)) {\n            throw new Error('MonotonousArray: current predicate must be weaker than (or equal to) the previous predicate.');\n          }\n        }\n      }\n      this._prevFindLastPredicate = predicate;\n    }\n    const idx = findLastIdxMonotonous(this._array, predicate, this._findLastMonotonousLastIdx);\n    this._findLastMonotonousLastIdx = idx + 1;\n    return idx === -1 ? undefined : this._array[idx];\n  }\n}\nfunction findFirstMax(array, comparator) {\n  if (array.length === 0) {\n    return undefined;\n  }\n  let max = array[0];\n  for (let i = 1; i < array.length; i++) {\n    const item = array[i];\n    if (comparator(item, max) > 0) {\n      max = item;\n    }\n  }\n  return max;\n}\nfunction findLastMax(array, comparator) {\n  if (array.length === 0) {\n    return undefined;\n  }\n  let max = array[0];\n  for (let i = 1; i < array.length; i++) {\n    const item = array[i];\n    if (comparator(item, max) >= 0) {\n      max = item;\n    }\n  }\n  return max;\n}\nfunction findFirstMin(array, comparator) {\n  return findFirstMax(array, (a, b) => -comparator(a, b));\n}\nfunction findMaxIdx(array, comparator) {\n  if (array.length === 0) {\n    return -1;\n  }\n  let maxIdx = 0;\n  for (let i = 1; i < array.length; i++) {\n    const item = array[i];\n    if (comparator(item, array[maxIdx]) > 0) {\n      maxIdx = i;\n    }\n  }\n  return maxIdx;\n}\nfunction mapFindFirst(items, mapFn) {\n  for (const value of items) {\n    const mapped = mapFn(value);\n    if (mapped !== undefined) {\n      return mapped;\n    }\n  }\n  return undefined;\n}\nexport { MonotonousArray, findFirstIdxMonotonousOrArrLen, findFirstMax, findFirstMin, findFirstMonotonous, findLast, findLastIdx, findLastIdxMonotonous, findLastMax, findLastMonotonous, findMaxIdx, mapFindFirst };","map":{"version":3,"names":["findLast","array","predicate","idx","findLastIdx","undefined","fromIndex","length","i","element","findLastMonotonous","findLastIdxMonotonous","startIdx","endIdxEx","j","k","Math","floor","findFirstMonotonous","findFirstIdxMonotonousOrArrLen","MonotonousArray","assertInvariants","constructor","_array","_findLastMonotonousLastIdx","_prevFindLastPredicate","item","Error","findFirstMax","comparator","max","findLastMax","findFirstMin","a","b","findMaxIdx","maxIdx","mapFindFirst","items","mapFn","value","mapped"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode/vscode/src/vs/base/common/arraysFind.js"],"sourcesContent":["function findLast(array, predicate) {\n    const idx = findLastIdx(array, predicate);\n    if (idx === -1) {\n        return undefined;\n    }\n    return array[idx];\n}\nfunction findLastIdx(array, predicate, fromIndex = array.length - 1) {\n    for (let i = fromIndex; i >= 0; i--) {\n        const element = array[i];\n        if (predicate(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction findLastMonotonous(array, predicate) {\n    const idx = findLastIdxMonotonous(array, predicate);\n    return idx === -1 ? undefined : array[idx];\n}\nfunction findLastIdxMonotonous(array, predicate, startIdx = 0, endIdxEx = array.length) {\n    let i = startIdx;\n    let j = endIdxEx;\n    while (i < j) {\n        const k = Math.floor((i + j) / 2);\n        if (predicate(array[k])) {\n            i = k + 1;\n        }\n        else {\n            j = k;\n        }\n    }\n    return i - 1;\n}\nfunction findFirstMonotonous(array, predicate) {\n    const idx = findFirstIdxMonotonousOrArrLen(array, predicate);\n    return idx === array.length ? undefined : array[idx];\n}\nfunction findFirstIdxMonotonousOrArrLen(array, predicate, startIdx = 0, endIdxEx = array.length) {\n    let i = startIdx;\n    let j = endIdxEx;\n    while (i < j) {\n        const k = Math.floor((i + j) / 2);\n        if (predicate(array[k])) {\n            j = k;\n        }\n        else {\n            i = k + 1;\n        }\n    }\n    return i;\n}\nclass MonotonousArray {\n    static { this.assertInvariants = false; }\n    constructor(_array) {\n        this._array = _array;\n        this._findLastMonotonousLastIdx = 0;\n    }\n    findLastMonotonous(predicate) {\n        if (MonotonousArray.assertInvariants) {\n            if (this._prevFindLastPredicate) {\n                for (const item of this._array) {\n                    if (this._prevFindLastPredicate(item) && !predicate(item)) {\n                        throw ( new Error(\n                            'MonotonousArray: current predicate must be weaker than (or equal to) the previous predicate.'\n                        ));\n                    }\n                }\n            }\n            this._prevFindLastPredicate = predicate;\n        }\n        const idx = findLastIdxMonotonous(this._array, predicate, this._findLastMonotonousLastIdx);\n        this._findLastMonotonousLastIdx = idx + 1;\n        return idx === -1 ? undefined : this._array[idx];\n    }\n}\nfunction findFirstMax(array, comparator) {\n    if (array.length === 0) {\n        return undefined;\n    }\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, max) > 0) {\n            max = item;\n        }\n    }\n    return max;\n}\nfunction findLastMax(array, comparator) {\n    if (array.length === 0) {\n        return undefined;\n    }\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, max) >= 0) {\n            max = item;\n        }\n    }\n    return max;\n}\nfunction findFirstMin(array, comparator) {\n    return findFirstMax(array, (a, b) => -comparator(a, b));\n}\nfunction findMaxIdx(array, comparator) {\n    if (array.length === 0) {\n        return -1;\n    }\n    let maxIdx = 0;\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, array[maxIdx]) > 0) {\n            maxIdx = i;\n        }\n    }\n    return maxIdx;\n}\nfunction mapFindFirst(items, mapFn) {\n    for (const value of items) {\n        const mapped = mapFn(value);\n        if (mapped !== undefined) {\n            return mapped;\n        }\n    }\n    return undefined;\n}\nexport { MonotonousArray, findFirstIdxMonotonousOrArrLen, findFirstMax, findFirstMin, findFirstMonotonous, findLast, findLastIdx, findLastIdxMonotonous, findLastMax, findLastMonotonous, findMaxIdx, mapFindFirst };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}