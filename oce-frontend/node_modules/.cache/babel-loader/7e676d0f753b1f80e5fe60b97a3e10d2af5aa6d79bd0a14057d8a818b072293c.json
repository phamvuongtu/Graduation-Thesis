{"ast":null,"code":"function groupBy(data, groupFn) {\n  const result = Object.create(null);\n  for (const element of data) {\n    const key = groupFn(element);\n    let target = result[key];\n    if (!target) {\n      target = result[key] = [];\n    }\n    target.push(element);\n  }\n  return result;\n}\nfunction diffSets(before, after) {\n  const removed = [];\n  const added = [];\n  for (const element of before) {\n    if (!after.has(element)) {\n      removed.push(element);\n    }\n  }\n  for (const element of after) {\n    if (!before.has(element)) {\n      added.push(element);\n    }\n  }\n  return {\n    removed,\n    added\n  };\n}\nfunction diffMaps(before, after) {\n  const removed = [];\n  const added = [];\n  for (const [index, value] of before) {\n    if (!after.has(index)) {\n      removed.push(value);\n    }\n  }\n  for (const [index, value] of after) {\n    if (!before.has(index)) {\n      added.push(value);\n    }\n  }\n  return {\n    removed,\n    added\n  };\n}\nfunction intersection(setA, setB) {\n  const result = new Set();\n  for (const elem of setB) {\n    if (setA.has(elem)) {\n      result.add(elem);\n    }\n  }\n  return result;\n}\nexport { diffMaps, diffSets, groupBy, intersection };","map":{"version":3,"names":["groupBy","data","groupFn","result","Object","create","element","key","target","push","diffSets","before","after","removed","added","has","diffMaps","index","value","intersection","setA","setB","Set","elem","add"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode/vscode/src/vs/base/common/collections.js"],"sourcesContent":["function groupBy(data, groupFn) {\n    const result = Object.create(null);\n    for (const element of data) {\n        const key = groupFn(element);\n        let target = result[key];\n        if (!target) {\n            target = result[key] = [];\n        }\n        target.push(element);\n    }\n    return result;\n}\nfunction diffSets(before, after) {\n    const removed = [];\n    const added = [];\n    for (const element of before) {\n        if (!( after.has(element))) {\n            removed.push(element);\n        }\n    }\n    for (const element of after) {\n        if (!( before.has(element))) {\n            added.push(element);\n        }\n    }\n    return { removed, added };\n}\nfunction diffMaps(before, after) {\n    const removed = [];\n    const added = [];\n    for (const [index, value] of before) {\n        if (!( after.has(index))) {\n            removed.push(value);\n        }\n    }\n    for (const [index, value] of after) {\n        if (!( before.has(index))) {\n            added.push(value);\n        }\n    }\n    return { removed, added };\n}\nfunction intersection(setA, setB) {\n    const result = ( new Set());\n    for (const elem of setB) {\n        if (( setA.has(elem))) {\n            result.add(elem);\n        }\n    }\n    return result;\n}\nexport { diffMaps, diffSets, groupBy, intersection };\n"],"mappings":"AAAA,SAASA,OAAOA,CAACC,IAAI,EAAEC,OAAO,EAAE;EAC5B,MAAMC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EAClC,KAAK,MAAMC,OAAO,IAAIL,IAAI,EAAE;IACxB,MAAMM,GAAG,GAAGL,OAAO,CAACI,OAAO,CAAC;IAC5B,IAAIE,MAAM,GAAGL,MAAM,CAACI,GAAG,CAAC;IACxB,IAAI,CAACC,MAAM,EAAE;MACTA,MAAM,GAAGL,MAAM,CAACI,GAAG,CAAC,GAAG,EAAE;IAC7B;IACAC,MAAM,CAACC,IAAI,CAACH,OAAO,CAAC;EACxB;EACA,OAAOH,MAAM;AACjB;AACA,SAASO,QAAQA,CAACC,MAAM,EAAEC,KAAK,EAAE;EAC7B,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,KAAK,GAAG,EAAE;EAChB,KAAK,MAAMR,OAAO,IAAIK,MAAM,EAAE;IAC1B,IAAI,CAAGC,KAAK,CAACG,GAAG,CAACT,OAAO,CAAE,EAAE;MACxBO,OAAO,CAACJ,IAAI,CAACH,OAAO,CAAC;IACzB;EACJ;EACA,KAAK,MAAMA,OAAO,IAAIM,KAAK,EAAE;IACzB,IAAI,CAAGD,MAAM,CAACI,GAAG,CAACT,OAAO,CAAE,EAAE;MACzBQ,KAAK,CAACL,IAAI,CAACH,OAAO,CAAC;IACvB;EACJ;EACA,OAAO;IAAEO,OAAO;IAAEC;EAAM,CAAC;AAC7B;AACA,SAASE,QAAQA,CAACL,MAAM,EAAEC,KAAK,EAAE;EAC7B,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,KAAK,GAAG,EAAE;EAChB,KAAK,MAAM,CAACG,KAAK,EAAEC,KAAK,CAAC,IAAIP,MAAM,EAAE;IACjC,IAAI,CAAGC,KAAK,CAACG,GAAG,CAACE,KAAK,CAAE,EAAE;MACtBJ,OAAO,CAACJ,IAAI,CAACS,KAAK,CAAC;IACvB;EACJ;EACA,KAAK,MAAM,CAACD,KAAK,EAAEC,KAAK,CAAC,IAAIN,KAAK,EAAE;IAChC,IAAI,CAAGD,MAAM,CAACI,GAAG,CAACE,KAAK,CAAE,EAAE;MACvBH,KAAK,CAACL,IAAI,CAACS,KAAK,CAAC;IACrB;EACJ;EACA,OAAO;IAAEL,OAAO;IAAEC;EAAM,CAAC;AAC7B;AACA,SAASK,YAAYA,CAACC,IAAI,EAAEC,IAAI,EAAE;EAC9B,MAAMlB,MAAM,GAAK,IAAImB,GAAG,CAAC,CAAE;EAC3B,KAAK,MAAMC,IAAI,IAAIF,IAAI,EAAE;IACrB,IAAMD,IAAI,CAACL,GAAG,CAACQ,IAAI,CAAC,EAAG;MACnBpB,MAAM,CAACqB,GAAG,CAACD,IAAI,CAAC;IACpB;EACJ;EACA,OAAOpB,MAAM;AACjB;AACA,SAASa,QAAQ,EAAEN,QAAQ,EAAEV,OAAO,EAAEmB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}