{"ast":null,"code":"\"use strict\";\n\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExecuteCommandFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst UUID = require(\"./utils/uuid\");\nconst features_1 = require(\"./features\");\nclass ExecuteCommandFeature {\n  constructor(client) {\n    this._client = client;\n    this._commands = new Map();\n  }\n  getState() {\n    return {\n      kind: 'workspace',\n      id: this.registrationType.method,\n      registrations: this._commands.size > 0\n    };\n  }\n  get registrationType() {\n    return vscode_languageserver_protocol_1.ExecuteCommandRequest.type;\n  }\n  fillClientCapabilities(capabilities) {\n    (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'workspace'), 'executeCommand').dynamicRegistration = true;\n  }\n  initialize(capabilities) {\n    if (!capabilities.executeCommandProvider) {\n      return;\n    }\n    this.register({\n      id: UUID.generateUuid(),\n      registerOptions: Object.assign({}, capabilities.executeCommandProvider)\n    });\n  }\n  register(data) {\n    const client = this._client;\n    const middleware = client.middleware;\n    const executeCommand = (command, args) => {\n      let params = {\n        command,\n        arguments: args\n      };\n      return client.sendRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, params).then(undefined, error => {\n        return client.handleFailedRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, undefined, error, undefined);\n      });\n    };\n    if (data.registerOptions.commands) {\n      const disposables = [];\n      for (const command of data.registerOptions.commands) {\n        disposables.push(vscode_1.commands.registerCommand(command, (...args) => {\n          return middleware.executeCommand ? middleware.executeCommand(command, args, executeCommand) : executeCommand(command, args);\n        }));\n      }\n      this._commands.set(data.id, disposables);\n    }\n  }\n  unregister(id) {\n    let disposables = this._commands.get(id);\n    if (disposables) {\n      disposables.forEach(disposable => disposable.dispose());\n    }\n  }\n  clear() {\n    this._commands.forEach(value => {\n      value.forEach(disposable => disposable.dispose());\n    });\n    this._commands.clear();\n  }\n}\nexports.ExecuteCommandFeature = ExecuteCommandFeature;","map":{"version":3,"names":["Object","defineProperty","exports","value","ExecuteCommandFeature","vscode_1","require","vscode_languageserver_protocol_1","UUID","features_1","constructor","client","_client","_commands","Map","getState","kind","id","registrationType","method","registrations","size","ExecuteCommandRequest","type","fillClientCapabilities","capabilities","ensure","dynamicRegistration","initialize","executeCommandProvider","register","generateUuid","registerOptions","assign","data","middleware","executeCommand","command","args","params","arguments","sendRequest","then","undefined","error","handleFailedRequest","commands","disposables","push","registerCommand","set","unregister","get","forEach","disposable","dispose","clear"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode-languageclient/lib/common/executeCommand.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExecuteCommandFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst UUID = require(\"./utils/uuid\");\nconst features_1 = require(\"./features\");\nclass ExecuteCommandFeature {\n    constructor(client) {\n        this._client = client;\n        this._commands = new Map();\n    }\n    getState() {\n        return { kind: 'workspace', id: this.registrationType.method, registrations: this._commands.size > 0 };\n    }\n    get registrationType() {\n        return vscode_languageserver_protocol_1.ExecuteCommandRequest.type;\n    }\n    fillClientCapabilities(capabilities) {\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'workspace'), 'executeCommand').dynamicRegistration = true;\n    }\n    initialize(capabilities) {\n        if (!capabilities.executeCommandProvider) {\n            return;\n        }\n        this.register({\n            id: UUID.generateUuid(),\n            registerOptions: Object.assign({}, capabilities.executeCommandProvider)\n        });\n    }\n    register(data) {\n        const client = this._client;\n        const middleware = client.middleware;\n        const executeCommand = (command, args) => {\n            let params = {\n                command,\n                arguments: args\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, params).then(undefined, (error) => {\n                return client.handleFailedRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, undefined, error, undefined);\n            });\n        };\n        if (data.registerOptions.commands) {\n            const disposables = [];\n            for (const command of data.registerOptions.commands) {\n                disposables.push(vscode_1.commands.registerCommand(command, (...args) => {\n                    return middleware.executeCommand\n                        ? middleware.executeCommand(command, args, executeCommand)\n                        : executeCommand(command, args);\n                }));\n            }\n            this._commands.set(data.id, disposables);\n        }\n    }\n    unregister(id) {\n        let disposables = this._commands.get(id);\n        if (disposables) {\n            disposables.forEach(disposable => disposable.dispose());\n        }\n    }\n    clear() {\n        this._commands.forEach((value) => {\n            value.forEach(disposable => disposable.dispose());\n        });\n        this._commands.clear();\n    }\n}\nexports.ExecuteCommandFeature = ExecuteCommandFeature;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}