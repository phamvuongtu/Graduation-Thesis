{"ast":null,"code":"\"use strict\";\n\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProtocolDiagnostic = exports.DiagnosticCode = void 0;\nconst vscode = require(\"vscode\");\nconst Is = require(\"./utils/is\");\nvar DiagnosticCode;\n(function (DiagnosticCode) {\n  function is(value) {\n    const candidate = value;\n    return candidate !== undefined && candidate !== null && (Is.number(candidate.value) || Is.string(candidate.value)) && Is.string(candidate.target);\n  }\n  DiagnosticCode.is = is;\n})(DiagnosticCode || (exports.DiagnosticCode = DiagnosticCode = {}));\nclass ProtocolDiagnostic extends vscode.Diagnostic {\n  constructor(range, message, severity, data) {\n    super(range, message, severity);\n    this.data = data;\n    this.hasDiagnosticCode = false;\n  }\n}\nexports.ProtocolDiagnostic = ProtocolDiagnostic;","map":{"version":3,"names":["Object","defineProperty","exports","value","ProtocolDiagnostic","DiagnosticCode","vscode","require","Is","is","candidate","undefined","number","string","target","Diagnostic","constructor","range","message","severity","data","hasDiagnosticCode"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode-languageclient/lib/common/protocolDiagnostic.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProtocolDiagnostic = exports.DiagnosticCode = void 0;\nconst vscode = require(\"vscode\");\nconst Is = require(\"./utils/is\");\nvar DiagnosticCode;\n(function (DiagnosticCode) {\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && (Is.number(candidate.value) || Is.string(candidate.value)) && Is.string(candidate.target);\n    }\n    DiagnosticCode.is = is;\n})(DiagnosticCode || (exports.DiagnosticCode = DiagnosticCode = {}));\nclass ProtocolDiagnostic extends vscode.Diagnostic {\n    constructor(range, message, severity, data) {\n        super(range, message, severity);\n        this.data = data;\n        this.hasDiagnosticCode = false;\n    }\n}\nexports.ProtocolDiagnostic = ProtocolDiagnostic;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,kBAAkB,GAAGF,OAAO,CAACG,cAAc,GAAG,KAAK,CAAC;AAC5D,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMC,EAAE,GAAGD,OAAO,CAAC,YAAY,CAAC;AAChC,IAAIF,cAAc;AAClB,CAAC,UAAUA,cAAc,EAAE;EACvB,SAASI,EAAEA,CAACN,KAAK,EAAE;IACf,MAAMO,SAAS,GAAGP,KAAK;IACvB,OAAOO,SAAS,KAAKC,SAAS,IAAID,SAAS,KAAK,IAAI,KAAKF,EAAE,CAACI,MAAM,CAACF,SAAS,CAACP,KAAK,CAAC,IAAIK,EAAE,CAACK,MAAM,CAACH,SAAS,CAACP,KAAK,CAAC,CAAC,IAAIK,EAAE,CAACK,MAAM,CAACH,SAAS,CAACI,MAAM,CAAC;EACrJ;EACAT,cAAc,CAACI,EAAE,GAAGA,EAAE;AAC1B,CAAC,EAAEJ,cAAc,KAAKH,OAAO,CAACG,cAAc,GAAGA,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;AACpE,MAAMD,kBAAkB,SAASE,MAAM,CAACS,UAAU,CAAC;EAC/CC,WAAWA,CAACC,KAAK,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,IAAI,EAAE;IACxC,KAAK,CAACH,KAAK,EAAEC,OAAO,EAAEC,QAAQ,CAAC;IAC/B,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,iBAAiB,GAAG,KAAK;EAClC;AACJ;AACAnB,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}