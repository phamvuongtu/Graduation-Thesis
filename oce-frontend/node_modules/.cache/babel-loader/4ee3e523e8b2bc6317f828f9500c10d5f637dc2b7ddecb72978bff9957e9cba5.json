{"ast":null,"code":"var _jsxFileName = \"/Users/phamtu/Downloads/Code/OCE/oce-frontend/src/components/CodeEditorSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Editor, { useMonaco } from \"@monaco-editor/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditorSection = ({\n  onChange,\n  language,\n  code,\n  theme\n}) => {\n  _s();\n  const [value, setValue] = useState(code || \"\");\n  const [editorTheme, setEditorTheme] = useState(theme ? theme.value : \"vs-dark\");\n  const editorRef = useRef(null);\n  const socket = useRef(null);\n  const monaco = useMonaco();\n  const handleEditorChange = value => {\n    setValue(value);\n    onChange(\"code\", value);\n    sendCodeToLsp(value);\n  };\n  useEffect(() => {\n    setValue(code); // Update the value when code prop changes\n  }, [code]);\n  useEffect(() => {\n    setEditorTheme(theme ? theme.value : \"vs-dark\");\n  }, [theme]);\n  useEffect(() => {\n    // Only connect if there is no active WebSocket connection\n    if (!socket.current || socket.current.readyState !== WebSocket.OPEN) {\n      console.log('Connecting to WebSocket...');\n      socket.current = new WebSocket('ws://localhost:8080/lsp');\n      socket.current.onopen = () => {\n        console.log('WebSocket connection opened');\n      };\n      socket.current.onmessage = message => {\n        const data = JSON.parse(message.data);\n        if (data.method === 'textDocument/completion') {\n          const suggestions = data.result.items.map(item => ({\n            label: item.label,\n            kind: monaco.languages.CompletionItemKind.Function,\n            documentation: item.documentation,\n            insertText: item.insertText\n          }));\n          monaco.languages.registerCompletionItemProvider(language, {\n            provideCompletionItems: () => ({\n              suggestions: suggestions\n            })\n          });\n        } else if (data.method === 'textDocument/hover') {\n          const hoverData = data.result.contents.value;\n          monaco.languages.registerHoverProvider(language, {\n            provideHover: () => ({\n              contents: [{\n                value: hoverData\n              }]\n            })\n          });\n        }\n      };\n      socket.current.onclose = () => {\n        console.log('WebSocket connection closed');\n      };\n      socket.current.onerror = error => {\n        console.error('WebSocket error:', error);\n      };\n    }\n    return () => {\n      if (socket.current && socket.current.readyState === WebSocket.OPEN) {\n        socket.current.close();\n      }\n    };\n  }, [language, monaco]);\n  useEffect(() => {\n    if (monaco && editorRef.current) {\n      monaco.editor.setModelLanguage(editorRef.current.getModel(), language);\n    }\n  }, [language, monaco]);\n  const sendCodeToLsp = code => {\n    if (editorRef.current && socket.current && socket.current.readyState === WebSocket.OPEN) {\n      socket.current.send(JSON.stringify({\n        jsonrpc: '2.0',\n        id: 1,\n        method: 'textDocument/didChange',\n        params: {\n          textDocument: {\n            uri: 'file:///' + editorRef.current.getModel().uri.path\n          },\n          contentChanges: [{\n            text: code\n          }]\n        }\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay rounded-md overflow-hidden w-full h-full shadow-4xl\",\n    children: /*#__PURE__*/_jsxDEV(Editor, {\n      height: \"85vh\",\n      width: `100%`,\n      language: language || \"c\",\n      value: value,\n      theme: editorTheme,\n      defaultValue: code,\n      onChange: handleEditorChange,\n      editorDidMount: editor => {\n        editorRef.current = editor;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditorSection, \"+zKoiowGLwbzjmlBoTHFQoTxOLk=\", false, function () {\n  return [useMonaco];\n});\n_c = CodeEditorSection;\nexport default CodeEditorSection;\nvar _c;\n$RefreshReg$(_c, \"CodeEditorSection\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Editor","useMonaco","jsxDEV","_jsxDEV","CodeEditorSection","onChange","language","code","theme","_s","value","setValue","editorTheme","setEditorTheme","editorRef","socket","monaco","handleEditorChange","sendCodeToLsp","current","readyState","WebSocket","OPEN","console","log","onopen","onmessage","message","data","JSON","parse","method","suggestions","result","items","map","item","label","kind","languages","CompletionItemKind","Function","documentation","insertText","registerCompletionItemProvider","provideCompletionItems","hoverData","contents","registerHoverProvider","provideHover","onclose","onerror","error","close","editor","setModelLanguage","getModel","send","stringify","jsonrpc","id","params","textDocument","uri","path","contentChanges","text","className","children","height","width","defaultValue","editorDidMount","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/src/components/CodeEditorSection.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Editor, { useMonaco } from \"@monaco-editor/react\"; \n\nconst CodeEditorSection = ({ onChange, language, code, theme }) => {\n  const [value, setValue] = useState(code || \"\");\n  const [editorTheme, setEditorTheme] = useState(theme ? theme.value : \"vs-dark\");\n  const editorRef = useRef(null);\n  const socket = useRef(null);\n  const monaco = useMonaco();\n\n  const handleEditorChange = (value) => {\n    setValue(value);\n    onChange(\"code\", value);\n    sendCodeToLsp(value);\n  };\n\n  useEffect(() => {\n    setValue(code); // Update the value when code prop changes\n  }, [code]);\n\n  useEffect(() => {\n    setEditorTheme(theme ? theme.value : \"vs-dark\");\n  }, [theme]);\n\n  useEffect(() => {\n    // Only connect if there is no active WebSocket connection\n    if (!socket.current || socket.current.readyState !== WebSocket.OPEN) {\n        console.log('Connecting to WebSocket...');\n        socket.current = new WebSocket('ws://localhost:8080/lsp');\n\n        socket.current.onopen = () => {\n            console.log('WebSocket connection opened');\n        };\n\n        socket.current.onmessage = (message) => {\n            const data = JSON.parse(message.data);\n            if (data.method === 'textDocument/completion') {\n                const suggestions = data.result.items.map(item => ({\n                    label: item.label,\n                    kind: monaco.languages.CompletionItemKind.Function,\n                    documentation: item.documentation,\n                    insertText: item.insertText\n                }));\n                monaco.languages.registerCompletionItemProvider(language, {\n                    provideCompletionItems: () => ({\n                        suggestions: suggestions\n                    })\n                });\n            } else if (data.method === 'textDocument/hover') {\n                const hoverData = data.result.contents.value;\n                monaco.languages.registerHoverProvider(language, {\n                    provideHover: () => ({\n                        contents: [{ value: hoverData }]\n                    })\n                });\n            }\n        };\n\n        socket.current.onclose = () => {\n            console.log('WebSocket connection closed');\n        };\n\n        socket.current.onerror = (error) => {\n            console.error('WebSocket error:', error);\n        };\n    }\n\n    return () => {\n        if (socket.current && socket.current.readyState === WebSocket.OPEN) {\n            socket.current.close();\n        }\n    };\n}, [language, monaco]);\n\n  useEffect(() => {\n    if (monaco && editorRef.current) {\n      monaco.editor.setModelLanguage(editorRef.current.getModel(), language);\n    }\n  }, [language, monaco]);\n\n  const sendCodeToLsp = (code) => {\n    if (editorRef.current && socket.current && socket.current.readyState === WebSocket.OPEN) {\n      socket.current.send(JSON.stringify({\n        jsonrpc: '2.0',\n        id: 1,\n        method: 'textDocument/didChange',\n        params: {\n          textDocument: { uri: 'file:///' + editorRef.current.getModel().uri.path },\n          contentChanges: [{ text: code }]\n        }\n      }));\n    }\n  };  \n\n  return (\n    <div className=\"overlay rounded-md overflow-hidden w-full h-full shadow-4xl\">\n      <Editor\n        height=\"85vh\"\n        width={`100%`}\n        language={language || \"c\"}\n        value={value}\n        theme={editorTheme}\n        defaultValue={code}\n        onChange={handleEditorChange}\n        editorDidMount={(editor) => {\n          editorRef.current = editor;\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CodeEditorSection;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,MAAM,IAAIC,SAAS,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACU,IAAI,IAAI,EAAE,CAAC;EAC9C,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAACW,KAAK,GAAGA,KAAK,CAACE,KAAK,GAAG,SAAS,CAAC;EAC/E,MAAMI,SAAS,GAAGf,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMgB,MAAM,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMiB,MAAM,GAAGf,SAAS,CAAC,CAAC;EAE1B,MAAMgB,kBAAkB,GAAIP,KAAK,IAAK;IACpCC,QAAQ,CAACD,KAAK,CAAC;IACfL,QAAQ,CAAC,MAAM,EAAEK,KAAK,CAAC;IACvBQ,aAAa,CAACR,KAAK,CAAC;EACtB,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACda,QAAQ,CAACJ,IAAI,CAAC,CAAC,CAAC;EAClB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEVT,SAAS,CAAC,MAAM;IACde,cAAc,CAACL,KAAK,GAAGA,KAAK,CAACE,KAAK,GAAG,SAAS,CAAC;EACjD,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;EAEXV,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACiB,MAAM,CAACI,OAAO,IAAIJ,MAAM,CAACI,OAAO,CAACC,UAAU,KAAKC,SAAS,CAACC,IAAI,EAAE;MACjEC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzCT,MAAM,CAACI,OAAO,GAAG,IAAIE,SAAS,CAAC,yBAAyB,CAAC;MAEzDN,MAAM,CAACI,OAAO,CAACM,MAAM,GAAG,MAAM;QAC1BF,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC9C,CAAC;MAEDT,MAAM,CAACI,OAAO,CAACO,SAAS,GAAIC,OAAO,IAAK;QACpC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACC,IAAI,CAAC;QACrC,IAAIA,IAAI,CAACG,MAAM,KAAK,yBAAyB,EAAE;UAC3C,MAAMC,WAAW,GAAGJ,IAAI,CAACK,MAAM,CAACC,KAAK,CAACC,GAAG,CAACC,IAAI,KAAK;YAC/CC,KAAK,EAAED,IAAI,CAACC,KAAK;YACjBC,IAAI,EAAEtB,MAAM,CAACuB,SAAS,CAACC,kBAAkB,CAACC,QAAQ;YAClDC,aAAa,EAAEN,IAAI,CAACM,aAAa;YACjCC,UAAU,EAAEP,IAAI,CAACO;UACrB,CAAC,CAAC,CAAC;UACH3B,MAAM,CAACuB,SAAS,CAACK,8BAA8B,CAACtC,QAAQ,EAAE;YACtDuC,sBAAsB,EAAEA,CAAA,MAAO;cAC3Bb,WAAW,EAAEA;YACjB,CAAC;UACL,CAAC,CAAC;QACN,CAAC,MAAM,IAAIJ,IAAI,CAACG,MAAM,KAAK,oBAAoB,EAAE;UAC7C,MAAMe,SAAS,GAAGlB,IAAI,CAACK,MAAM,CAACc,QAAQ,CAACrC,KAAK;UAC5CM,MAAM,CAACuB,SAAS,CAACS,qBAAqB,CAAC1C,QAAQ,EAAE;YAC7C2C,YAAY,EAAEA,CAAA,MAAO;cACjBF,QAAQ,EAAE,CAAC;gBAAErC,KAAK,EAAEoC;cAAU,CAAC;YACnC,CAAC;UACL,CAAC,CAAC;QACN;MACJ,CAAC;MAED/B,MAAM,CAACI,OAAO,CAAC+B,OAAO,GAAG,MAAM;QAC3B3B,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC9C,CAAC;MAEDT,MAAM,CAACI,OAAO,CAACgC,OAAO,GAAIC,KAAK,IAAK;QAChC7B,OAAO,CAAC6B,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC5C,CAAC;IACL;IAEA,OAAO,MAAM;MACT,IAAIrC,MAAM,CAACI,OAAO,IAAIJ,MAAM,CAACI,OAAO,CAACC,UAAU,KAAKC,SAAS,CAACC,IAAI,EAAE;QAChEP,MAAM,CAACI,OAAO,CAACkC,KAAK,CAAC,CAAC;MAC1B;IACJ,CAAC;EACL,CAAC,EAAE,CAAC/C,QAAQ,EAAEU,MAAM,CAAC,CAAC;EAEpBlB,SAAS,CAAC,MAAM;IACd,IAAIkB,MAAM,IAAIF,SAAS,CAACK,OAAO,EAAE;MAC/BH,MAAM,CAACsC,MAAM,CAACC,gBAAgB,CAACzC,SAAS,CAACK,OAAO,CAACqC,QAAQ,CAAC,CAAC,EAAElD,QAAQ,CAAC;IACxE;EACF,CAAC,EAAE,CAACA,QAAQ,EAAEU,MAAM,CAAC,CAAC;EAEtB,MAAME,aAAa,GAAIX,IAAI,IAAK;IAC9B,IAAIO,SAAS,CAACK,OAAO,IAAIJ,MAAM,CAACI,OAAO,IAAIJ,MAAM,CAACI,OAAO,CAACC,UAAU,KAAKC,SAAS,CAACC,IAAI,EAAE;MACvFP,MAAM,CAACI,OAAO,CAACsC,IAAI,CAAC5B,IAAI,CAAC6B,SAAS,CAAC;QACjCC,OAAO,EAAE,KAAK;QACdC,EAAE,EAAE,CAAC;QACL7B,MAAM,EAAE,wBAAwB;QAChC8B,MAAM,EAAE;UACNC,YAAY,EAAE;YAAEC,GAAG,EAAE,UAAU,GAAGjD,SAAS,CAACK,OAAO,CAACqC,QAAQ,CAAC,CAAC,CAACO,GAAG,CAACC;UAAK,CAAC;UACzEC,cAAc,EAAE,CAAC;YAAEC,IAAI,EAAE3D;UAAK,CAAC;QACjC;MACF,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKgE,SAAS,EAAC,6DAA6D;IAAAC,QAAA,eAC1EjE,OAAA,CAACH,MAAM;MACLqE,MAAM,EAAC,MAAM;MACbC,KAAK,EAAG,MAAM;MACdhE,QAAQ,EAAEA,QAAQ,IAAI,GAAI;MAC1BI,KAAK,EAAEA,KAAM;MACbF,KAAK,EAAEI,WAAY;MACnB2D,YAAY,EAAEhE,IAAK;MACnBF,QAAQ,EAAEY,kBAAmB;MAC7BuD,cAAc,EAAGlB,MAAM,IAAK;QAC1BxC,SAAS,CAACK,OAAO,GAAGmC,MAAM;MAC5B;IAAE;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnE,EAAA,CA3GIL,iBAAiB;EAAA,QAKNH,SAAS;AAAA;AAAA4E,EAAA,GALpBzE,iBAAiB;AA6GvB,eAAeA,iBAAiB;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}