{"ast":null,"code":"\"use strict\";\n\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst semaphore_1 = require(\"./semaphore\");\nconst events_1 = require(\"./events\");\nconst ContentLength = 'Content-Length: ';\nconst CRLF = '\\r\\n';\nvar MessageWriter;\n(function (MessageWriter) {\n  function is(value) {\n    let candidate = value;\n    return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) && Is.func(candidate.onError) && Is.func(candidate.write);\n  }\n  MessageWriter.is = is;\n})(MessageWriter || (exports.MessageWriter = MessageWriter = {}));\nclass AbstractMessageWriter {\n  constructor() {\n    this.errorEmitter = new events_1.Emitter();\n    this.closeEmitter = new events_1.Emitter();\n  }\n  dispose() {\n    this.errorEmitter.dispose();\n    this.closeEmitter.dispose();\n  }\n  get onError() {\n    return this.errorEmitter.event;\n  }\n  fireError(error, message, count) {\n    this.errorEmitter.fire([this.asError(error), message, count]);\n  }\n  get onClose() {\n    return this.closeEmitter.event;\n  }\n  fireClose() {\n    this.closeEmitter.fire(undefined);\n  }\n  asError(error) {\n    if (error instanceof Error) {\n      return error;\n    } else {\n      return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\n    }\n  }\n}\nexports.AbstractMessageWriter = AbstractMessageWriter;\nvar ResolvedMessageWriterOptions;\n(function (ResolvedMessageWriterOptions) {\n  function fromOptions(options) {\n    if (options === undefined || typeof options === 'string') {\n      return {\n        charset: options ?? 'utf-8',\n        contentTypeEncoder: (0, ral_1.default)().applicationJson.encoder\n      };\n    } else {\n      return {\n        charset: options.charset ?? 'utf-8',\n        contentEncoder: options.contentEncoder,\n        contentTypeEncoder: options.contentTypeEncoder ?? (0, ral_1.default)().applicationJson.encoder\n      };\n    }\n  }\n  ResolvedMessageWriterOptions.fromOptions = fromOptions;\n})(ResolvedMessageWriterOptions || (ResolvedMessageWriterOptions = {}));\nclass WriteableStreamMessageWriter extends AbstractMessageWriter {\n  constructor(writable, options) {\n    super();\n    this.writable = writable;\n    this.options = ResolvedMessageWriterOptions.fromOptions(options);\n    this.errorCount = 0;\n    this.writeSemaphore = new semaphore_1.Semaphore(1);\n    this.writable.onError(error => this.fireError(error));\n    this.writable.onClose(() => this.fireClose());\n  }\n  async write(msg) {\n    return this.writeSemaphore.lock(async () => {\n      const payload = this.options.contentTypeEncoder.encode(msg, this.options).then(buffer => {\n        if (this.options.contentEncoder !== undefined) {\n          return this.options.contentEncoder.encode(buffer);\n        } else {\n          return buffer;\n        }\n      });\n      return payload.then(buffer => {\n        const headers = [];\n        headers.push(ContentLength, buffer.byteLength.toString(), CRLF);\n        headers.push(CRLF);\n        return this.doWrite(msg, headers, buffer);\n      }, error => {\n        this.fireError(error);\n        throw error;\n      });\n    });\n  }\n  async doWrite(msg, headers, data) {\n    try {\n      await this.writable.write(headers.join(''), 'ascii');\n      return this.writable.write(data);\n    } catch (error) {\n      this.handleError(error, msg);\n      return Promise.reject(error);\n    }\n  }\n  handleError(error, msg) {\n    this.errorCount++;\n    this.fireError(error, msg, this.errorCount);\n  }\n  end() {\n    this.writable.end();\n  }\n}\nexports.WriteableStreamMessageWriter = WriteableStreamMessageWriter;","map":{"version":3,"names":["Object","defineProperty","exports","value","WriteableStreamMessageWriter","AbstractMessageWriter","MessageWriter","ral_1","require","Is","semaphore_1","events_1","ContentLength","CRLF","is","candidate","func","dispose","onClose","onError","write","constructor","errorEmitter","Emitter","closeEmitter","event","fireError","error","message","count","fire","asError","fireClose","undefined","Error","string","ResolvedMessageWriterOptions","fromOptions","options","charset","contentTypeEncoder","default","applicationJson","encoder","contentEncoder","writable","errorCount","writeSemaphore","Semaphore","msg","lock","payload","encode","then","buffer","headers","push","byteLength","toString","doWrite","data","join","handleError","Promise","reject","end"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode-jsonrpc/lib/common/messageWriter.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst semaphore_1 = require(\"./semaphore\");\nconst events_1 = require(\"./events\");\nconst ContentLength = 'Content-Length: ';\nconst CRLF = '\\r\\n';\nvar MessageWriter;\n(function (MessageWriter) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\n            Is.func(candidate.onError) && Is.func(candidate.write);\n    }\n    MessageWriter.is = is;\n})(MessageWriter || (exports.MessageWriter = MessageWriter = {}));\nclass AbstractMessageWriter {\n    constructor() {\n        this.errorEmitter = new events_1.Emitter();\n        this.closeEmitter = new events_1.Emitter();\n    }\n    dispose() {\n        this.errorEmitter.dispose();\n        this.closeEmitter.dispose();\n    }\n    get onError() {\n        return this.errorEmitter.event;\n    }\n    fireError(error, message, count) {\n        this.errorEmitter.fire([this.asError(error), message, count]);\n    }\n    get onClose() {\n        return this.closeEmitter.event;\n    }\n    fireClose() {\n        this.closeEmitter.fire(undefined);\n    }\n    asError(error) {\n        if (error instanceof Error) {\n            return error;\n        }\n        else {\n            return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\n        }\n    }\n}\nexports.AbstractMessageWriter = AbstractMessageWriter;\nvar ResolvedMessageWriterOptions;\n(function (ResolvedMessageWriterOptions) {\n    function fromOptions(options) {\n        if (options === undefined || typeof options === 'string') {\n            return { charset: options ?? 'utf-8', contentTypeEncoder: (0, ral_1.default)().applicationJson.encoder };\n        }\n        else {\n            return { charset: options.charset ?? 'utf-8', contentEncoder: options.contentEncoder, contentTypeEncoder: options.contentTypeEncoder ?? (0, ral_1.default)().applicationJson.encoder };\n        }\n    }\n    ResolvedMessageWriterOptions.fromOptions = fromOptions;\n})(ResolvedMessageWriterOptions || (ResolvedMessageWriterOptions = {}));\nclass WriteableStreamMessageWriter extends AbstractMessageWriter {\n    constructor(writable, options) {\n        super();\n        this.writable = writable;\n        this.options = ResolvedMessageWriterOptions.fromOptions(options);\n        this.errorCount = 0;\n        this.writeSemaphore = new semaphore_1.Semaphore(1);\n        this.writable.onError((error) => this.fireError(error));\n        this.writable.onClose(() => this.fireClose());\n    }\n    async write(msg) {\n        return this.writeSemaphore.lock(async () => {\n            const payload = this.options.contentTypeEncoder.encode(msg, this.options).then((buffer) => {\n                if (this.options.contentEncoder !== undefined) {\n                    return this.options.contentEncoder.encode(buffer);\n                }\n                else {\n                    return buffer;\n                }\n            });\n            return payload.then((buffer) => {\n                const headers = [];\n                headers.push(ContentLength, buffer.byteLength.toString(), CRLF);\n                headers.push(CRLF);\n                return this.doWrite(msg, headers, buffer);\n            }, (error) => {\n                this.fireError(error);\n                throw error;\n            });\n        });\n    }\n    async doWrite(msg, headers, data) {\n        try {\n            await this.writable.write(headers.join(''), 'ascii');\n            return this.writable.write(data);\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n        this.writable.end();\n    }\n}\nexports.WriteableStreamMessageWriter = WriteableStreamMessageWriter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}