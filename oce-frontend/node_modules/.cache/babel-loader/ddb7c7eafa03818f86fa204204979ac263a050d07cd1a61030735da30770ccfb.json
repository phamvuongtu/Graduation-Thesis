{"ast":null,"code":"\"use strict\";\n\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InlineCompletionItemFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst UUID = require(\"./utils/uuid\");\nclass InlineCompletionItemFeature extends features_1.TextDocumentLanguageFeature {\n  constructor(client) {\n    super(client, vscode_languageserver_protocol_1.InlineCompletionRequest.type);\n  }\n  fillClientCapabilities(capabilities) {\n    let inlineCompletion = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'inlineCompletion');\n    inlineCompletion.dynamicRegistration = true;\n  }\n  initialize(capabilities, documentSelector) {\n    const options = this.getRegistrationOptions(documentSelector, capabilities.inlineCompletionProvider);\n    if (!options) {\n      return;\n    }\n    this.register({\n      id: UUID.generateUuid(),\n      registerOptions: options\n    });\n  }\n  registerLanguageProvider(options) {\n    const selector = options.documentSelector;\n    const provider = {\n      provideInlineCompletionItems: (document, position, context, token) => {\n        const client = this._client;\n        const middleware = this._client.middleware;\n        const provideInlineCompletionItems = (document, position, context, token) => {\n          return client.sendRequest(vscode_languageserver_protocol_1.InlineCompletionRequest.type, client.code2ProtocolConverter.asInlineCompletionParams(document, position, context), token).then(result => {\n            if (token.isCancellationRequested) {\n              return null;\n            }\n            return client.protocol2CodeConverter.asInlineCompletionResult(result, token);\n          }, error => {\n            return client.handleFailedRequest(vscode_languageserver_protocol_1.InlineCompletionRequest.type, token, error, null);\n          });\n        };\n        return middleware.provideInlineCompletionItems ? middleware.provideInlineCompletionItems(document, position, context, token, provideInlineCompletionItems) : provideInlineCompletionItems(document, position, context, token);\n      }\n    };\n    return [vscode_1.languages.registerInlineCompletionItemProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider), provider];\n  }\n}\nexports.InlineCompletionItemFeature = InlineCompletionItemFeature;","map":{"version":3,"names":["Object","defineProperty","exports","value","InlineCompletionItemFeature","vscode_1","require","vscode_languageserver_protocol_1","features_1","UUID","TextDocumentLanguageFeature","constructor","client","InlineCompletionRequest","type","fillClientCapabilities","capabilities","inlineCompletion","ensure","dynamicRegistration","initialize","documentSelector","options","getRegistrationOptions","inlineCompletionProvider","register","id","generateUuid","registerOptions","registerLanguageProvider","selector","provider","provideInlineCompletionItems","document","position","context","token","_client","middleware","sendRequest","code2ProtocolConverter","asInlineCompletionParams","then","result","isCancellationRequested","protocol2CodeConverter","asInlineCompletionResult","error","handleFailedRequest","languages","registerInlineCompletionItemProvider","asDocumentSelector"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode-languageclient/lib/common/inlineCompletion.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InlineCompletionItemFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst UUID = require(\"./utils/uuid\");\nclass InlineCompletionItemFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.InlineCompletionRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let inlineCompletion = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'inlineCompletion');\n        inlineCompletion.dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.inlineCompletionProvider);\n        if (!options) {\n            return;\n        }\n        this.register({\n            id: UUID.generateUuid(),\n            registerOptions: options\n        });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideInlineCompletionItems: (document, position, context, token) => {\n                const client = this._client;\n                const middleware = this._client.middleware;\n                const provideInlineCompletionItems = (document, position, context, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.InlineCompletionRequest.type, client.code2ProtocolConverter.asInlineCompletionParams(document, position, context), token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asInlineCompletionResult(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.InlineCompletionRequest.type, token, error, null);\n                    });\n                };\n                return middleware.provideInlineCompletionItems\n                    ? middleware.provideInlineCompletionItems(document, position, context, token, provideInlineCompletionItems)\n                    : provideInlineCompletionItems(document, position, context, token);\n            }\n        };\n        return [vscode_1.languages.registerInlineCompletionItemProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider), provider];\n    }\n}\nexports.InlineCompletionItemFeature = InlineCompletionItemFeature;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}