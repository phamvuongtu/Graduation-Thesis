{"ast":null,"code":"\"use strict\";\n\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CodeLensFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst UUID = require(\"./utils/uuid\");\nconst features_1 = require(\"./features\");\nclass CodeLensFeature extends features_1.TextDocumentLanguageFeature {\n  constructor(client) {\n    super(client, vscode_languageserver_protocol_1.CodeLensRequest.type);\n  }\n  fillClientCapabilities(capabilities) {\n    (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'codeLens').dynamicRegistration = true;\n    (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'workspace'), 'codeLens').refreshSupport = true;\n  }\n  initialize(capabilities, documentSelector) {\n    const client = this._client;\n    client.onRequest(vscode_languageserver_protocol_1.CodeLensRefreshRequest.type, async () => {\n      for (const provider of this.getAllProviders()) {\n        provider.onDidChangeCodeLensEmitter.fire();\n      }\n    });\n    const options = this.getRegistrationOptions(documentSelector, capabilities.codeLensProvider);\n    if (!options) {\n      return;\n    }\n    this.register({\n      id: UUID.generateUuid(),\n      registerOptions: options\n    });\n  }\n  registerLanguageProvider(options) {\n    const selector = options.documentSelector;\n    const eventEmitter = new vscode_1.EventEmitter();\n    const provider = {\n      onDidChangeCodeLenses: eventEmitter.event,\n      provideCodeLenses: (document, token) => {\n        const client = this._client;\n        const provideCodeLenses = (document, token) => {\n          return client.sendRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, client.code2ProtocolConverter.asCodeLensParams(document), token).then(result => {\n            if (token.isCancellationRequested) {\n              return null;\n            }\n            return client.protocol2CodeConverter.asCodeLenses(result, token);\n          }, error => {\n            return client.handleFailedRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, token, error, null);\n          });\n        };\n        const middleware = client.middleware;\n        return middleware.provideCodeLenses ? middleware.provideCodeLenses(document, token, provideCodeLenses) : provideCodeLenses(document, token);\n      },\n      resolveCodeLens: options.resolveProvider ? (codeLens, token) => {\n        const client = this._client;\n        const resolveCodeLens = (codeLens, token) => {\n          return client.sendRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, client.code2ProtocolConverter.asCodeLens(codeLens), token).then(result => {\n            if (token.isCancellationRequested) {\n              return codeLens;\n            }\n            return client.protocol2CodeConverter.asCodeLens(result);\n          }, error => {\n            return client.handleFailedRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, token, error, codeLens);\n          });\n        };\n        const middleware = client.middleware;\n        return middleware.resolveCodeLens ? middleware.resolveCodeLens(codeLens, token, resolveCodeLens) : resolveCodeLens(codeLens, token);\n      } : undefined\n    };\n    return [vscode_1.languages.registerCodeLensProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider), {\n      provider,\n      onDidChangeCodeLensEmitter: eventEmitter\n    }];\n  }\n}\nexports.CodeLensFeature = CodeLensFeature;","map":{"version":3,"names":["Object","defineProperty","exports","value","CodeLensFeature","vscode_1","require","vscode_languageserver_protocol_1","UUID","features_1","TextDocumentLanguageFeature","constructor","client","CodeLensRequest","type","fillClientCapabilities","capabilities","ensure","dynamicRegistration","refreshSupport","initialize","documentSelector","_client","onRequest","CodeLensRefreshRequest","provider","getAllProviders","onDidChangeCodeLensEmitter","fire","options","getRegistrationOptions","codeLensProvider","register","id","generateUuid","registerOptions","registerLanguageProvider","selector","eventEmitter","EventEmitter","onDidChangeCodeLenses","event","provideCodeLenses","document","token","sendRequest","code2ProtocolConverter","asCodeLensParams","then","result","isCancellationRequested","protocol2CodeConverter","asCodeLenses","error","handleFailedRequest","middleware","resolveCodeLens","resolveProvider","codeLens","CodeLensResolveRequest","asCodeLens","undefined","languages","registerCodeLensProvider","asDocumentSelector"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode-languageclient/lib/common/codeLens.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodeLensFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst UUID = require(\"./utils/uuid\");\nconst features_1 = require(\"./features\");\nclass CodeLensFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.CodeLensRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'codeLens').dynamicRegistration = true;\n        (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'workspace'), 'codeLens').refreshSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const client = this._client;\n        client.onRequest(vscode_languageserver_protocol_1.CodeLensRefreshRequest.type, async () => {\n            for (const provider of this.getAllProviders()) {\n                provider.onDidChangeCodeLensEmitter.fire();\n            }\n        });\n        const options = this.getRegistrationOptions(documentSelector, capabilities.codeLensProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const eventEmitter = new vscode_1.EventEmitter();\n        const provider = {\n            onDidChangeCodeLenses: eventEmitter.event,\n            provideCodeLenses: (document, token) => {\n                const client = this._client;\n                const provideCodeLenses = (document, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, client.code2ProtocolConverter.asCodeLensParams(document), token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asCodeLenses(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideCodeLenses\n                    ? middleware.provideCodeLenses(document, token, provideCodeLenses)\n                    : provideCodeLenses(document, token);\n            },\n            resolveCodeLens: (options.resolveProvider)\n                ? (codeLens, token) => {\n                    const client = this._client;\n                    const resolveCodeLens = (codeLens, token) => {\n                        return client.sendRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, client.code2ProtocolConverter.asCodeLens(codeLens), token).then((result) => {\n                            if (token.isCancellationRequested) {\n                                return codeLens;\n                            }\n                            return client.protocol2CodeConverter.asCodeLens(result);\n                        }, (error) => {\n                            return client.handleFailedRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, token, error, codeLens);\n                        });\n                    };\n                    const middleware = client.middleware;\n                    return middleware.resolveCodeLens\n                        ? middleware.resolveCodeLens(codeLens, token, resolveCodeLens)\n                        : resolveCodeLens(codeLens, token);\n                }\n                : undefined\n        };\n        return [vscode_1.languages.registerCodeLensProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider), { provider, onDidChangeCodeLensEmitter: eventEmitter }];\n    }\n}\nexports.CodeLensFeature = CodeLensFeature;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}