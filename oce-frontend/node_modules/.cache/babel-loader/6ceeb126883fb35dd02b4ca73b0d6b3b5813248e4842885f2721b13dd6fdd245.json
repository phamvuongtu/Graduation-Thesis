{"ast":null,"code":"\"use strict\";\n\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TypeHierarchyFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nclass TypeHierarchyProvider {\n  constructor(client) {\n    this.client = client;\n    this.middleware = client.middleware;\n  }\n  prepareTypeHierarchy(document, position, token) {\n    const client = this.client;\n    const middleware = this.middleware;\n    const prepareTypeHierarchy = (document, position, token) => {\n      const params = client.code2ProtocolConverter.asTextDocumentPositionParams(document, position);\n      return client.sendRequest(vscode_languageserver_protocol_1.TypeHierarchyPrepareRequest.type, params, token).then(result => {\n        if (token.isCancellationRequested) {\n          return null;\n        }\n        return client.protocol2CodeConverter.asTypeHierarchyItems(result, token);\n      }, error => {\n        return client.handleFailedRequest(vscode_languageserver_protocol_1.TypeHierarchyPrepareRequest.type, token, error, null);\n      });\n    };\n    return middleware.prepareTypeHierarchy ? middleware.prepareTypeHierarchy(document, position, token, prepareTypeHierarchy) : prepareTypeHierarchy(document, position, token);\n  }\n  provideTypeHierarchySupertypes(item, token) {\n    const client = this.client;\n    const middleware = this.middleware;\n    const provideTypeHierarchySupertypes = (item, token) => {\n      const params = {\n        item: client.code2ProtocolConverter.asTypeHierarchyItem(item)\n      };\n      return client.sendRequest(vscode_languageserver_protocol_1.TypeHierarchySupertypesRequest.type, params, token).then(result => {\n        if (token.isCancellationRequested) {\n          return null;\n        }\n        return client.protocol2CodeConverter.asTypeHierarchyItems(result, token);\n      }, error => {\n        return client.handleFailedRequest(vscode_languageserver_protocol_1.TypeHierarchySupertypesRequest.type, token, error, null);\n      });\n    };\n    return middleware.provideTypeHierarchySupertypes ? middleware.provideTypeHierarchySupertypes(item, token, provideTypeHierarchySupertypes) : provideTypeHierarchySupertypes(item, token);\n  }\n  provideTypeHierarchySubtypes(item, token) {\n    const client = this.client;\n    const middleware = this.middleware;\n    const provideTypeHierarchySubtypes = (item, token) => {\n      const params = {\n        item: client.code2ProtocolConverter.asTypeHierarchyItem(item)\n      };\n      return client.sendRequest(vscode_languageserver_protocol_1.TypeHierarchySubtypesRequest.type, params, token).then(result => {\n        if (token.isCancellationRequested) {\n          return null;\n        }\n        return client.protocol2CodeConverter.asTypeHierarchyItems(result, token);\n      }, error => {\n        return client.handleFailedRequest(vscode_languageserver_protocol_1.TypeHierarchySubtypesRequest.type, token, error, null);\n      });\n    };\n    return middleware.provideTypeHierarchySubtypes ? middleware.provideTypeHierarchySubtypes(item, token, provideTypeHierarchySubtypes) : provideTypeHierarchySubtypes(item, token);\n  }\n}\nclass TypeHierarchyFeature extends features_1.TextDocumentLanguageFeature {\n  constructor(client) {\n    super(client, vscode_languageserver_protocol_1.TypeHierarchyPrepareRequest.type);\n  }\n  fillClientCapabilities(capabilities) {\n    const capability = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'typeHierarchy');\n    capability.dynamicRegistration = true;\n  }\n  initialize(capabilities, documentSelector) {\n    const [id, options] = this.getRegistration(documentSelector, capabilities.typeHierarchyProvider);\n    if (!id || !options) {\n      return;\n    }\n    this.register({\n      id: id,\n      registerOptions: options\n    });\n  }\n  registerLanguageProvider(options) {\n    const client = this._client;\n    const provider = new TypeHierarchyProvider(client);\n    return [vscode_1.languages.registerTypeHierarchyProvider(client.protocol2CodeConverter.asDocumentSelector(options.documentSelector), provider), provider];\n  }\n}\nexports.TypeHierarchyFeature = TypeHierarchyFeature;","map":{"version":3,"names":["Object","defineProperty","exports","value","TypeHierarchyFeature","vscode_1","require","vscode_languageserver_protocol_1","features_1","TypeHierarchyProvider","constructor","client","middleware","prepareTypeHierarchy","document","position","token","params","code2ProtocolConverter","asTextDocumentPositionParams","sendRequest","TypeHierarchyPrepareRequest","type","then","result","isCancellationRequested","protocol2CodeConverter","asTypeHierarchyItems","error","handleFailedRequest","provideTypeHierarchySupertypes","item","asTypeHierarchyItem","TypeHierarchySupertypesRequest","provideTypeHierarchySubtypes","TypeHierarchySubtypesRequest","TextDocumentLanguageFeature","fillClientCapabilities","capabilities","capability","ensure","dynamicRegistration","initialize","documentSelector","id","options","getRegistration","typeHierarchyProvider","register","registerOptions","registerLanguageProvider","_client","provider","languages","registerTypeHierarchyProvider","asDocumentSelector"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode-languageclient/lib/common/typeHierarchy.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeHierarchyFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nclass TypeHierarchyProvider {\n    constructor(client) {\n        this.client = client;\n        this.middleware = client.middleware;\n    }\n    prepareTypeHierarchy(document, position, token) {\n        const client = this.client;\n        const middleware = this.middleware;\n        const prepareTypeHierarchy = (document, position, token) => {\n            const params = client.code2ProtocolConverter.asTextDocumentPositionParams(document, position);\n            return client.sendRequest(vscode_languageserver_protocol_1.TypeHierarchyPrepareRequest.type, params, token).then((result) => {\n                if (token.isCancellationRequested) {\n                    return null;\n                }\n                return client.protocol2CodeConverter.asTypeHierarchyItems(result, token);\n            }, (error) => {\n                return client.handleFailedRequest(vscode_languageserver_protocol_1.TypeHierarchyPrepareRequest.type, token, error, null);\n            });\n        };\n        return middleware.prepareTypeHierarchy\n            ? middleware.prepareTypeHierarchy(document, position, token, prepareTypeHierarchy)\n            : prepareTypeHierarchy(document, position, token);\n    }\n    provideTypeHierarchySupertypes(item, token) {\n        const client = this.client;\n        const middleware = this.middleware;\n        const provideTypeHierarchySupertypes = (item, token) => {\n            const params = {\n                item: client.code2ProtocolConverter.asTypeHierarchyItem(item)\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.TypeHierarchySupertypesRequest.type, params, token).then((result) => {\n                if (token.isCancellationRequested) {\n                    return null;\n                }\n                return client.protocol2CodeConverter.asTypeHierarchyItems(result, token);\n            }, (error) => {\n                return client.handleFailedRequest(vscode_languageserver_protocol_1.TypeHierarchySupertypesRequest.type, token, error, null);\n            });\n        };\n        return middleware.provideTypeHierarchySupertypes\n            ? middleware.provideTypeHierarchySupertypes(item, token, provideTypeHierarchySupertypes)\n            : provideTypeHierarchySupertypes(item, token);\n    }\n    provideTypeHierarchySubtypes(item, token) {\n        const client = this.client;\n        const middleware = this.middleware;\n        const provideTypeHierarchySubtypes = (item, token) => {\n            const params = {\n                item: client.code2ProtocolConverter.asTypeHierarchyItem(item)\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.TypeHierarchySubtypesRequest.type, params, token).then((result) => {\n                if (token.isCancellationRequested) {\n                    return null;\n                }\n                return client.protocol2CodeConverter.asTypeHierarchyItems(result, token);\n            }, (error) => {\n                return client.handleFailedRequest(vscode_languageserver_protocol_1.TypeHierarchySubtypesRequest.type, token, error, null);\n            });\n        };\n        return middleware.provideTypeHierarchySubtypes\n            ? middleware.provideTypeHierarchySubtypes(item, token, provideTypeHierarchySubtypes)\n            : provideTypeHierarchySubtypes(item, token);\n    }\n}\nclass TypeHierarchyFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.TypeHierarchyPrepareRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        const capability = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'typeHierarchy');\n        capability.dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const [id, options] = this.getRegistration(documentSelector, capabilities.typeHierarchyProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const client = this._client;\n        const provider = new TypeHierarchyProvider(client);\n        return [vscode_1.languages.registerTypeHierarchyProvider(client.protocol2CodeConverter.asDocumentSelector(options.documentSelector), provider), provider];\n    }\n}\nexports.TypeHierarchyFeature = TypeHierarchyFeature;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}