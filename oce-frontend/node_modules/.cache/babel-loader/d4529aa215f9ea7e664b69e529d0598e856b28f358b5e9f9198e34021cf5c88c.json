{"ast":null,"code":"\"use strict\";\n\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DocumentSymbolFeature = exports.SupportedSymbolTags = exports.SupportedSymbolKinds = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst UUID = require(\"./utils/uuid\");\nexports.SupportedSymbolKinds = [vscode_languageserver_protocol_1.SymbolKind.File, vscode_languageserver_protocol_1.SymbolKind.Module, vscode_languageserver_protocol_1.SymbolKind.Namespace, vscode_languageserver_protocol_1.SymbolKind.Package, vscode_languageserver_protocol_1.SymbolKind.Class, vscode_languageserver_protocol_1.SymbolKind.Method, vscode_languageserver_protocol_1.SymbolKind.Property, vscode_languageserver_protocol_1.SymbolKind.Field, vscode_languageserver_protocol_1.SymbolKind.Constructor, vscode_languageserver_protocol_1.SymbolKind.Enum, vscode_languageserver_protocol_1.SymbolKind.Interface, vscode_languageserver_protocol_1.SymbolKind.Function, vscode_languageserver_protocol_1.SymbolKind.Variable, vscode_languageserver_protocol_1.SymbolKind.Constant, vscode_languageserver_protocol_1.SymbolKind.String, vscode_languageserver_protocol_1.SymbolKind.Number, vscode_languageserver_protocol_1.SymbolKind.Boolean, vscode_languageserver_protocol_1.SymbolKind.Array, vscode_languageserver_protocol_1.SymbolKind.Object, vscode_languageserver_protocol_1.SymbolKind.Key, vscode_languageserver_protocol_1.SymbolKind.Null, vscode_languageserver_protocol_1.SymbolKind.EnumMember, vscode_languageserver_protocol_1.SymbolKind.Struct, vscode_languageserver_protocol_1.SymbolKind.Event, vscode_languageserver_protocol_1.SymbolKind.Operator, vscode_languageserver_protocol_1.SymbolKind.TypeParameter];\nexports.SupportedSymbolTags = [vscode_languageserver_protocol_1.SymbolTag.Deprecated];\nclass DocumentSymbolFeature extends features_1.TextDocumentLanguageFeature {\n  constructor(client) {\n    super(client, vscode_languageserver_protocol_1.DocumentSymbolRequest.type);\n  }\n  fillClientCapabilities(capabilities) {\n    let symbolCapabilities = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'documentSymbol');\n    symbolCapabilities.dynamicRegistration = true;\n    symbolCapabilities.symbolKind = {\n      valueSet: exports.SupportedSymbolKinds\n    };\n    symbolCapabilities.hierarchicalDocumentSymbolSupport = true;\n    symbolCapabilities.tagSupport = {\n      valueSet: exports.SupportedSymbolTags\n    };\n    symbolCapabilities.labelSupport = true;\n  }\n  initialize(capabilities, documentSelector) {\n    const options = this.getRegistrationOptions(documentSelector, capabilities.documentSymbolProvider);\n    if (!options) {\n      return;\n    }\n    this.register({\n      id: UUID.generateUuid(),\n      registerOptions: options\n    });\n  }\n  registerLanguageProvider(options) {\n    const selector = options.documentSelector;\n    const provider = {\n      provideDocumentSymbols: (document, token) => {\n        const client = this._client;\n        const _provideDocumentSymbols = async (document, token) => {\n          try {\n            const data = await client.sendRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, client.code2ProtocolConverter.asDocumentSymbolParams(document), token);\n            if (token.isCancellationRequested || data === undefined || data === null) {\n              return null;\n            }\n            if (data.length === 0) {\n              return [];\n            } else {\n              const first = data[0];\n              if (vscode_languageserver_protocol_1.DocumentSymbol.is(first)) {\n                return await client.protocol2CodeConverter.asDocumentSymbols(data, token);\n              } else {\n                return await client.protocol2CodeConverter.asSymbolInformations(data, token);\n              }\n            }\n          } catch (error) {\n            return client.handleFailedRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, token, error, null);\n          }\n        };\n        const middleware = client.middleware;\n        return middleware.provideDocumentSymbols ? middleware.provideDocumentSymbols(document, token, _provideDocumentSymbols) : _provideDocumentSymbols(document, token);\n      }\n    };\n    const metaData = options.label !== undefined ? {\n      label: options.label\n    } : undefined;\n    return [vscode_1.languages.registerDocumentSymbolProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider, metaData), provider];\n  }\n}\nexports.DocumentSymbolFeature = DocumentSymbolFeature;","map":{"version":3,"names":["Object","defineProperty","exports","value","DocumentSymbolFeature","SupportedSymbolTags","SupportedSymbolKinds","vscode_1","require","vscode_languageserver_protocol_1","features_1","UUID","SymbolKind","File","Module","Namespace","Package","Class","Method","Property","Field","Constructor","Enum","Interface","Function","Variable","Constant","String","Number","Boolean","Array","Key","Null","EnumMember","Struct","Event","Operator","TypeParameter","SymbolTag","Deprecated","TextDocumentLanguageFeature","constructor","client","DocumentSymbolRequest","type","fillClientCapabilities","capabilities","symbolCapabilities","ensure","dynamicRegistration","symbolKind","valueSet","hierarchicalDocumentSymbolSupport","tagSupport","labelSupport","initialize","documentSelector","options","getRegistrationOptions","documentSymbolProvider","register","id","generateUuid","registerOptions","registerLanguageProvider","selector","provider","provideDocumentSymbols","document","token","_client","_provideDocumentSymbols","data","sendRequest","code2ProtocolConverter","asDocumentSymbolParams","isCancellationRequested","undefined","length","first","DocumentSymbol","is","protocol2CodeConverter","asDocumentSymbols","asSymbolInformations","error","handleFailedRequest","middleware","metaData","label","languages","registerDocumentSymbolProvider","asDocumentSelector"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode-languageclient/lib/common/documentSymbol.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DocumentSymbolFeature = exports.SupportedSymbolTags = exports.SupportedSymbolKinds = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst UUID = require(\"./utils/uuid\");\nexports.SupportedSymbolKinds = [\n    vscode_languageserver_protocol_1.SymbolKind.File,\n    vscode_languageserver_protocol_1.SymbolKind.Module,\n    vscode_languageserver_protocol_1.SymbolKind.Namespace,\n    vscode_languageserver_protocol_1.SymbolKind.Package,\n    vscode_languageserver_protocol_1.SymbolKind.Class,\n    vscode_languageserver_protocol_1.SymbolKind.Method,\n    vscode_languageserver_protocol_1.SymbolKind.Property,\n    vscode_languageserver_protocol_1.SymbolKind.Field,\n    vscode_languageserver_protocol_1.SymbolKind.Constructor,\n    vscode_languageserver_protocol_1.SymbolKind.Enum,\n    vscode_languageserver_protocol_1.SymbolKind.Interface,\n    vscode_languageserver_protocol_1.SymbolKind.Function,\n    vscode_languageserver_protocol_1.SymbolKind.Variable,\n    vscode_languageserver_protocol_1.SymbolKind.Constant,\n    vscode_languageserver_protocol_1.SymbolKind.String,\n    vscode_languageserver_protocol_1.SymbolKind.Number,\n    vscode_languageserver_protocol_1.SymbolKind.Boolean,\n    vscode_languageserver_protocol_1.SymbolKind.Array,\n    vscode_languageserver_protocol_1.SymbolKind.Object,\n    vscode_languageserver_protocol_1.SymbolKind.Key,\n    vscode_languageserver_protocol_1.SymbolKind.Null,\n    vscode_languageserver_protocol_1.SymbolKind.EnumMember,\n    vscode_languageserver_protocol_1.SymbolKind.Struct,\n    vscode_languageserver_protocol_1.SymbolKind.Event,\n    vscode_languageserver_protocol_1.SymbolKind.Operator,\n    vscode_languageserver_protocol_1.SymbolKind.TypeParameter\n];\nexports.SupportedSymbolTags = [\n    vscode_languageserver_protocol_1.SymbolTag.Deprecated\n];\nclass DocumentSymbolFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.DocumentSymbolRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let symbolCapabilities = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'documentSymbol');\n        symbolCapabilities.dynamicRegistration = true;\n        symbolCapabilities.symbolKind = {\n            valueSet: exports.SupportedSymbolKinds\n        };\n        symbolCapabilities.hierarchicalDocumentSymbolSupport = true;\n        symbolCapabilities.tagSupport = {\n            valueSet: exports.SupportedSymbolTags\n        };\n        symbolCapabilities.labelSupport = true;\n    }\n    initialize(capabilities, documentSelector) {\n        const options = this.getRegistrationOptions(documentSelector, capabilities.documentSymbolProvider);\n        if (!options) {\n            return;\n        }\n        this.register({ id: UUID.generateUuid(), registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideDocumentSymbols: (document, token) => {\n                const client = this._client;\n                const _provideDocumentSymbols = async (document, token) => {\n                    try {\n                        const data = await client.sendRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, client.code2ProtocolConverter.asDocumentSymbolParams(document), token);\n                        if (token.isCancellationRequested || data === undefined || data === null) {\n                            return null;\n                        }\n                        if (data.length === 0) {\n                            return [];\n                        }\n                        else {\n                            const first = data[0];\n                            if (vscode_languageserver_protocol_1.DocumentSymbol.is(first)) {\n                                return await client.protocol2CodeConverter.asDocumentSymbols(data, token);\n                            }\n                            else {\n                                return await client.protocol2CodeConverter.asSymbolInformations(data, token);\n                            }\n                        }\n                    }\n                    catch (error) {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, token, error, null);\n                    }\n                };\n                const middleware = client.middleware;\n                return middleware.provideDocumentSymbols\n                    ? middleware.provideDocumentSymbols(document, token, _provideDocumentSymbols)\n                    : _provideDocumentSymbols(document, token);\n            }\n        };\n        const metaData = options.label !== undefined ? { label: options.label } : undefined;\n        return [vscode_1.languages.registerDocumentSymbolProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider, metaData), provider];\n    }\n}\nexports.DocumentSymbolFeature = DocumentSymbolFeature;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,qBAAqB,GAAGF,OAAO,CAACG,mBAAmB,GAAGH,OAAO,CAACI,oBAAoB,GAAG,KAAK,CAAC;AACnG,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAClC,MAAMC,gCAAgC,GAAGD,OAAO,CAAC,gCAAgC,CAAC;AAClF,MAAME,UAAU,GAAGF,OAAO,CAAC,YAAY,CAAC;AACxC,MAAMG,IAAI,GAAGH,OAAO,CAAC,cAAc,CAAC;AACpCN,OAAO,CAACI,oBAAoB,GAAG,CAC3BG,gCAAgC,CAACG,UAAU,CAACC,IAAI,EAChDJ,gCAAgC,CAACG,UAAU,CAACE,MAAM,EAClDL,gCAAgC,CAACG,UAAU,CAACG,SAAS,EACrDN,gCAAgC,CAACG,UAAU,CAACI,OAAO,EACnDP,gCAAgC,CAACG,UAAU,CAACK,KAAK,EACjDR,gCAAgC,CAACG,UAAU,CAACM,MAAM,EAClDT,gCAAgC,CAACG,UAAU,CAACO,QAAQ,EACpDV,gCAAgC,CAACG,UAAU,CAACQ,KAAK,EACjDX,gCAAgC,CAACG,UAAU,CAACS,WAAW,EACvDZ,gCAAgC,CAACG,UAAU,CAACU,IAAI,EAChDb,gCAAgC,CAACG,UAAU,CAACW,SAAS,EACrDd,gCAAgC,CAACG,UAAU,CAACY,QAAQ,EACpDf,gCAAgC,CAACG,UAAU,CAACa,QAAQ,EACpDhB,gCAAgC,CAACG,UAAU,CAACc,QAAQ,EACpDjB,gCAAgC,CAACG,UAAU,CAACe,MAAM,EAClDlB,gCAAgC,CAACG,UAAU,CAACgB,MAAM,EAClDnB,gCAAgC,CAACG,UAAU,CAACiB,OAAO,EACnDpB,gCAAgC,CAACG,UAAU,CAACkB,KAAK,EACjDrB,gCAAgC,CAACG,UAAU,CAACZ,MAAM,EAClDS,gCAAgC,CAACG,UAAU,CAACmB,GAAG,EAC/CtB,gCAAgC,CAACG,UAAU,CAACoB,IAAI,EAChDvB,gCAAgC,CAACG,UAAU,CAACqB,UAAU,EACtDxB,gCAAgC,CAACG,UAAU,CAACsB,MAAM,EAClDzB,gCAAgC,CAACG,UAAU,CAACuB,KAAK,EACjD1B,gCAAgC,CAACG,UAAU,CAACwB,QAAQ,EACpD3B,gCAAgC,CAACG,UAAU,CAACyB,aAAa,CAC5D;AACDnC,OAAO,CAACG,mBAAmB,GAAG,CAC1BI,gCAAgC,CAAC6B,SAAS,CAACC,UAAU,CACxD;AACD,MAAMnC,qBAAqB,SAASM,UAAU,CAAC8B,2BAA2B,CAAC;EACvEC,WAAWA,CAACC,MAAM,EAAE;IAChB,KAAK,CAACA,MAAM,EAAEjC,gCAAgC,CAACkC,qBAAqB,CAACC,IAAI,CAAC;EAC9E;EACAC,sBAAsBA,CAACC,YAAY,EAAE;IACjC,IAAIC,kBAAkB,GAAG,CAAC,CAAC,EAAErC,UAAU,CAACsC,MAAM,EAAE,CAAC,CAAC,EAAEtC,UAAU,CAACsC,MAAM,EAAEF,YAAY,EAAE,cAAc,CAAC,EAAE,gBAAgB,CAAC;IACvHC,kBAAkB,CAACE,mBAAmB,GAAG,IAAI;IAC7CF,kBAAkB,CAACG,UAAU,GAAG;MAC5BC,QAAQ,EAAEjD,OAAO,CAACI;IACtB,CAAC;IACDyC,kBAAkB,CAACK,iCAAiC,GAAG,IAAI;IAC3DL,kBAAkB,CAACM,UAAU,GAAG;MAC5BF,QAAQ,EAAEjD,OAAO,CAACG;IACtB,CAAC;IACD0C,kBAAkB,CAACO,YAAY,GAAG,IAAI;EAC1C;EACAC,UAAUA,CAACT,YAAY,EAAEU,gBAAgB,EAAE;IACvC,MAAMC,OAAO,GAAG,IAAI,CAACC,sBAAsB,CAACF,gBAAgB,EAAEV,YAAY,CAACa,sBAAsB,CAAC;IAClG,IAAI,CAACF,OAAO,EAAE;MACV;IACJ;IACA,IAAI,CAACG,QAAQ,CAAC;MAAEC,EAAE,EAAElD,IAAI,CAACmD,YAAY,CAAC,CAAC;MAAEC,eAAe,EAAEN;IAAQ,CAAC,CAAC;EACxE;EACAO,wBAAwBA,CAACP,OAAO,EAAE;IAC9B,MAAMQ,QAAQ,GAAGR,OAAO,CAACD,gBAAgB;IACzC,MAAMU,QAAQ,GAAG;MACbC,sBAAsB,EAAEA,CAACC,QAAQ,EAAEC,KAAK,KAAK;QACzC,MAAM3B,MAAM,GAAG,IAAI,CAAC4B,OAAO;QAC3B,MAAMC,uBAAuB,GAAG,MAAAA,CAAOH,QAAQ,EAAEC,KAAK,KAAK;UACvD,IAAI;YACA,MAAMG,IAAI,GAAG,MAAM9B,MAAM,CAAC+B,WAAW,CAAChE,gCAAgC,CAACkC,qBAAqB,CAACC,IAAI,EAAEF,MAAM,CAACgC,sBAAsB,CAACC,sBAAsB,CAACP,QAAQ,CAAC,EAAEC,KAAK,CAAC;YACzK,IAAIA,KAAK,CAACO,uBAAuB,IAAIJ,IAAI,KAAKK,SAAS,IAAIL,IAAI,KAAK,IAAI,EAAE;cACtE,OAAO,IAAI;YACf;YACA,IAAIA,IAAI,CAACM,MAAM,KAAK,CAAC,EAAE;cACnB,OAAO,EAAE;YACb,CAAC,MACI;cACD,MAAMC,KAAK,GAAGP,IAAI,CAAC,CAAC,CAAC;cACrB,IAAI/D,gCAAgC,CAACuE,cAAc,CAACC,EAAE,CAACF,KAAK,CAAC,EAAE;gBAC3D,OAAO,MAAMrC,MAAM,CAACwC,sBAAsB,CAACC,iBAAiB,CAACX,IAAI,EAAEH,KAAK,CAAC;cAC7E,CAAC,MACI;gBACD,OAAO,MAAM3B,MAAM,CAACwC,sBAAsB,CAACE,oBAAoB,CAACZ,IAAI,EAAEH,KAAK,CAAC;cAChF;YACJ;UACJ,CAAC,CACD,OAAOgB,KAAK,EAAE;YACV,OAAO3C,MAAM,CAAC4C,mBAAmB,CAAC7E,gCAAgC,CAACkC,qBAAqB,CAACC,IAAI,EAAEyB,KAAK,EAAEgB,KAAK,EAAE,IAAI,CAAC;UACtH;QACJ,CAAC;QACD,MAAME,UAAU,GAAG7C,MAAM,CAAC6C,UAAU;QACpC,OAAOA,UAAU,CAACpB,sBAAsB,GAClCoB,UAAU,CAACpB,sBAAsB,CAACC,QAAQ,EAAEC,KAAK,EAAEE,uBAAuB,CAAC,GAC3EA,uBAAuB,CAACH,QAAQ,EAAEC,KAAK,CAAC;MAClD;IACJ,CAAC;IACD,MAAMmB,QAAQ,GAAG/B,OAAO,CAACgC,KAAK,KAAKZ,SAAS,GAAG;MAAEY,KAAK,EAAEhC,OAAO,CAACgC;IAAM,CAAC,GAAGZ,SAAS;IACnF,OAAO,CAACtE,QAAQ,CAACmF,SAAS,CAACC,8BAA8B,CAAC,IAAI,CAACrB,OAAO,CAACY,sBAAsB,CAACU,kBAAkB,CAAC3B,QAAQ,CAAC,EAAEC,QAAQ,EAAEsB,QAAQ,CAAC,EAAEtB,QAAQ,CAAC;EAC9J;AACJ;AACAhE,OAAO,CAACE,qBAAqB,GAAGA,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}