{"ast":null,"code":"import { extname } from './path.js';\nconst Mimes = Object.freeze({\n  text: 'text/plain',\n  binary: 'application/octet-stream',\n  unknown: 'application/unknown',\n  markdown: 'text/markdown',\n  latex: 'text/latex',\n  uriList: 'text/uri-list'\n});\nconst mapExtToTextMimes = {\n  '.css': 'text/css',\n  '.csv': 'text/csv',\n  '.htm': 'text/html',\n  '.html': 'text/html',\n  '.ics': 'text/calendar',\n  '.js': 'text/javascript',\n  '.mjs': 'text/javascript',\n  '.txt': 'text/plain',\n  '.xml': 'text/xml'\n};\nconst mapExtToMediaMimes = {\n  '.aac': 'audio/x-aac',\n  '.avi': 'video/x-msvideo',\n  '.bmp': 'image/bmp',\n  '.flv': 'video/x-flv',\n  '.gif': 'image/gif',\n  '.ico': 'image/x-icon',\n  '.jpe': 'image/jpg',\n  '.jpeg': 'image/jpg',\n  '.jpg': 'image/jpg',\n  '.m1v': 'video/mpeg',\n  '.m2a': 'audio/mpeg',\n  '.m2v': 'video/mpeg',\n  '.m3a': 'audio/mpeg',\n  '.mid': 'audio/midi',\n  '.midi': 'audio/midi',\n  '.mk3d': 'video/x-matroska',\n  '.mks': 'video/x-matroska',\n  '.mkv': 'video/x-matroska',\n  '.mov': 'video/quicktime',\n  '.movie': 'video/x-sgi-movie',\n  '.mp2': 'audio/mpeg',\n  '.mp2a': 'audio/mpeg',\n  '.mp3': 'audio/mpeg',\n  '.mp4': 'video/mp4',\n  '.mp4a': 'audio/mp4',\n  '.mp4v': 'video/mp4',\n  '.mpe': 'video/mpeg',\n  '.mpeg': 'video/mpeg',\n  '.mpg': 'video/mpeg',\n  '.mpg4': 'video/mp4',\n  '.mpga': 'audio/mpeg',\n  '.oga': 'audio/ogg',\n  '.ogg': 'audio/ogg',\n  '.opus': 'audio/opus',\n  '.ogv': 'video/ogg',\n  '.png': 'image/png',\n  '.psd': 'image/vnd.adobe.photoshop',\n  '.qt': 'video/quicktime',\n  '.spx': 'audio/ogg',\n  '.svg': 'image/svg+xml',\n  '.tga': 'image/x-tga',\n  '.tif': 'image/tiff',\n  '.tiff': 'image/tiff',\n  '.wav': 'audio/x-wav',\n  '.webm': 'video/webm',\n  '.webp': 'image/webp',\n  '.wma': 'audio/x-ms-wma',\n  '.wmv': 'video/x-ms-wmv',\n  '.woff': 'application/font-woff'\n};\nfunction getMediaOrTextMime(path) {\n  const ext = extname(path);\n  const textMime = mapExtToTextMimes[ext.toLowerCase()];\n  if (textMime !== undefined) {\n    return textMime;\n  } else {\n    return getMediaMime(path);\n  }\n}\nfunction getMediaMime(path) {\n  const ext = extname(path);\n  return mapExtToMediaMimes[ext.toLowerCase()];\n}\nfunction getExtensionForMimeType(mimeType) {\n  for (const extension in mapExtToMediaMimes) {\n    if (mapExtToMediaMimes[extension] === mimeType) {\n      return extension;\n    }\n  }\n  return undefined;\n}\nconst _simplePattern = /^(.+)\\/(.+?)(;.+)?$/;\nfunction normalizeMimeType(mimeType, strict) {\n  const match = _simplePattern.exec(mimeType);\n  if (!match) {\n    return strict ? undefined : mimeType;\n  }\n  return `${match[1].toLowerCase()}/${match[2].toLowerCase()}${match[3] ?? ''}`;\n}\nexport { Mimes, getExtensionForMimeType, getMediaMime, getMediaOrTextMime, normalizeMimeType };","map":{"version":3,"names":["extname","Mimes","Object","freeze","text","binary","unknown","markdown","latex","uriList","mapExtToTextMimes","mapExtToMediaMimes","getMediaOrTextMime","path","ext","textMime","toLowerCase","undefined","getMediaMime","getExtensionForMimeType","mimeType","extension","_simplePattern","normalizeMimeType","strict","match","exec"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode/vscode/src/vs/base/common/mime.js"],"sourcesContent":["import { extname } from './path.js';\nconst Mimes = ( Object.freeze({\n    text: 'text/plain',\n    binary: 'application/octet-stream',\n    unknown: 'application/unknown',\n    markdown: 'text/markdown',\n    latex: 'text/latex',\n    uriList: 'text/uri-list',\n}));\nconst mapExtToTextMimes = {\n    '.css': 'text/css',\n    '.csv': 'text/csv',\n    '.htm': 'text/html',\n    '.html': 'text/html',\n    '.ics': 'text/calendar',\n    '.js': 'text/javascript',\n    '.mjs': 'text/javascript',\n    '.txt': 'text/plain',\n    '.xml': 'text/xml'\n};\nconst mapExtToMediaMimes = {\n    '.aac': 'audio/x-aac',\n    '.avi': 'video/x-msvideo',\n    '.bmp': 'image/bmp',\n    '.flv': 'video/x-flv',\n    '.gif': 'image/gif',\n    '.ico': 'image/x-icon',\n    '.jpe': 'image/jpg',\n    '.jpeg': 'image/jpg',\n    '.jpg': 'image/jpg',\n    '.m1v': 'video/mpeg',\n    '.m2a': 'audio/mpeg',\n    '.m2v': 'video/mpeg',\n    '.m3a': 'audio/mpeg',\n    '.mid': 'audio/midi',\n    '.midi': 'audio/midi',\n    '.mk3d': 'video/x-matroska',\n    '.mks': 'video/x-matroska',\n    '.mkv': 'video/x-matroska',\n    '.mov': 'video/quicktime',\n    '.movie': 'video/x-sgi-movie',\n    '.mp2': 'audio/mpeg',\n    '.mp2a': 'audio/mpeg',\n    '.mp3': 'audio/mpeg',\n    '.mp4': 'video/mp4',\n    '.mp4a': 'audio/mp4',\n    '.mp4v': 'video/mp4',\n    '.mpe': 'video/mpeg',\n    '.mpeg': 'video/mpeg',\n    '.mpg': 'video/mpeg',\n    '.mpg4': 'video/mp4',\n    '.mpga': 'audio/mpeg',\n    '.oga': 'audio/ogg',\n    '.ogg': 'audio/ogg',\n    '.opus': 'audio/opus',\n    '.ogv': 'video/ogg',\n    '.png': 'image/png',\n    '.psd': 'image/vnd.adobe.photoshop',\n    '.qt': 'video/quicktime',\n    '.spx': 'audio/ogg',\n    '.svg': 'image/svg+xml',\n    '.tga': 'image/x-tga',\n    '.tif': 'image/tiff',\n    '.tiff': 'image/tiff',\n    '.wav': 'audio/x-wav',\n    '.webm': 'video/webm',\n    '.webp': 'image/webp',\n    '.wma': 'audio/x-ms-wma',\n    '.wmv': 'video/x-ms-wmv',\n    '.woff': 'application/font-woff',\n};\nfunction getMediaOrTextMime(path) {\n    const ext = extname(path);\n    const textMime = mapExtToTextMimes[ext.toLowerCase()];\n    if (textMime !== undefined) {\n        return textMime;\n    }\n    else {\n        return getMediaMime(path);\n    }\n}\nfunction getMediaMime(path) {\n    const ext = extname(path);\n    return mapExtToMediaMimes[ext.toLowerCase()];\n}\nfunction getExtensionForMimeType(mimeType) {\n    for (const extension in mapExtToMediaMimes) {\n        if (mapExtToMediaMimes[extension] === mimeType) {\n            return extension;\n        }\n    }\n    return undefined;\n}\nconst _simplePattern = /^(.+)\\/(.+?)(;.+)?$/;\nfunction normalizeMimeType(mimeType, strict) {\n    const match = _simplePattern.exec(mimeType);\n    if (!match) {\n        return strict\n            ? undefined\n            : mimeType;\n    }\n    return `${match[1].toLowerCase()}/${match[2].toLowerCase()}${match[3] ?? ''}`;\n}\nexport { Mimes, getExtensionForMimeType, getMediaMime, getMediaOrTextMime, normalizeMimeType };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}