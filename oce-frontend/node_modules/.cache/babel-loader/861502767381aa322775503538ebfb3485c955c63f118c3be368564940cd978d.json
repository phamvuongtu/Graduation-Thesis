{"ast":null,"code":"import { matchesFuzzy } from './filters.js';\nimport { ltrim } from './strings.js';\nimport { ThemeIcon } from './themables.js';\nconst iconStartMarker = '$(';\nconst iconsRegex = new RegExp(`\\\\$\\\\(${ThemeIcon.iconNameExpression}(?:${ThemeIcon.iconModifierExpression})?\\\\)`, 'g');\nconst escapeIconsRegex = new RegExp(`(\\\\\\\\)?${iconsRegex.source}`, 'g');\nfunction escapeIcons(text) {\n  return text.replace(escapeIconsRegex, (match, escaped) => escaped ? match : `\\\\${match}`);\n}\nconst markdownEscapedIconsRegex = new RegExp(`\\\\\\\\${iconsRegex.source}`, 'g');\nfunction markdownEscapeEscapedIcons(text) {\n  return text.replace(markdownEscapedIconsRegex, match => `\\\\${match}`);\n}\nconst stripIconsRegex = new RegExp(`(\\\\s)?(\\\\\\\\)?${iconsRegex.source}(\\\\s)?`, 'g');\nfunction stripIcons(text) {\n  if (text.indexOf(iconStartMarker) === -1) {\n    return text;\n  }\n  return text.replace(stripIconsRegex, (match, preWhitespace, escaped, postWhitespace) => escaped ? match : preWhitespace || postWhitespace || '');\n}\nfunction getCodiconAriaLabel(text) {\n  if (!text) {\n    return '';\n  }\n  return text.replace(/\\$\\((.*?)\\)/g, (_match, codiconName) => ` ${codiconName} `).trim();\n}\nconst _parseIconsRegex = new RegExp(`\\\\$\\\\(${ThemeIcon.iconNameCharacter}+\\\\)`, 'g');\nfunction parseLabelWithIcons(input) {\n  _parseIconsRegex.lastIndex = 0;\n  let text = '';\n  const iconOffsets = [];\n  let iconsOffset = 0;\n  while (true) {\n    const pos = _parseIconsRegex.lastIndex;\n    const match = _parseIconsRegex.exec(input);\n    const chars = input.substring(pos, match?.index);\n    if (chars.length > 0) {\n      text += chars;\n      for (let i = 0; i < chars.length; i++) {\n        iconOffsets.push(iconsOffset);\n      }\n    }\n    if (!match) {\n      break;\n    }\n    iconsOffset += match[0].length;\n  }\n  return {\n    text,\n    iconOffsets\n  };\n}\nfunction matchesFuzzyIconAware(query, target, enableSeparateSubstringMatching = false) {\n  const {\n    text,\n    iconOffsets\n  } = target;\n  if (!iconOffsets || iconOffsets.length === 0) {\n    return matchesFuzzy(query, text, enableSeparateSubstringMatching);\n  }\n  const wordToMatchAgainstWithoutIconsTrimmed = ltrim(text, ' ');\n  const leadingWhitespaceOffset = text.length - wordToMatchAgainstWithoutIconsTrimmed.length;\n  const matches = matchesFuzzy(query, wordToMatchAgainstWithoutIconsTrimmed, enableSeparateSubstringMatching);\n  if (matches) {\n    for (const match of matches) {\n      const iconOffset = iconOffsets[match.start + leadingWhitespaceOffset] + leadingWhitespaceOffset;\n      match.start += iconOffset;\n      match.end += iconOffset;\n    }\n  }\n  return matches;\n}\nexport { escapeIcons, getCodiconAriaLabel, markdownEscapeEscapedIcons, matchesFuzzyIconAware, parseLabelWithIcons, stripIcons };","map":{"version":3,"names":["matchesFuzzy","ltrim","ThemeIcon","iconStartMarker","iconsRegex","RegExp","iconNameExpression","iconModifierExpression","escapeIconsRegex","source","escapeIcons","text","replace","match","escaped","markdownEscapedIconsRegex","markdownEscapeEscapedIcons","stripIconsRegex","stripIcons","indexOf","preWhitespace","postWhitespace","getCodiconAriaLabel","_match","codiconName","trim","_parseIconsRegex","iconNameCharacter","parseLabelWithIcons","input","lastIndex","iconOffsets","iconsOffset","pos","exec","chars","substring","index","length","i","push","matchesFuzzyIconAware","query","target","enableSeparateSubstringMatching","wordToMatchAgainstWithoutIconsTrimmed","leadingWhitespaceOffset","matches","iconOffset","start","end"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode/vscode/src/vs/base/common/iconLabels.js"],"sourcesContent":["import { matchesFuzzy } from './filters.js';\nimport { ltrim } from './strings.js';\nimport { ThemeIcon } from './themables.js';\nconst iconStartMarker = '$(';\nconst iconsRegex = ( new RegExp(\n    `\\\\$\\\\(${ThemeIcon.iconNameExpression}(?:${ThemeIcon.iconModifierExpression})?\\\\)`,\n    'g'\n));\nconst escapeIconsRegex = ( new RegExp(`(\\\\\\\\)?${iconsRegex.source}`, 'g'));\nfunction escapeIcons(text) {\n    return text.replace(escapeIconsRegex, (match, escaped) => escaped ? match : `\\\\${match}`);\n}\nconst markdownEscapedIconsRegex = ( new RegExp(`\\\\\\\\${iconsRegex.source}`, 'g'));\nfunction markdownEscapeEscapedIcons(text) {\n    return text.replace(markdownEscapedIconsRegex, match => `\\\\${match}`);\n}\nconst stripIconsRegex = ( new RegExp(`(\\\\s)?(\\\\\\\\)?${iconsRegex.source}(\\\\s)?`, 'g'));\nfunction stripIcons(text) {\n    if (text.indexOf(iconStartMarker) === -1) {\n        return text;\n    }\n    return text.replace(stripIconsRegex, (match, preWhitespace, escaped, postWhitespace) => escaped ? match : preWhitespace || postWhitespace || '');\n}\nfunction getCodiconAriaLabel(text) {\n    if (!text) {\n        return '';\n    }\n    return text.replace(/\\$\\((.*?)\\)/g, (_match, codiconName) => ` ${codiconName} `).trim();\n}\nconst _parseIconsRegex = ( new RegExp(`\\\\$\\\\(${ThemeIcon.iconNameCharacter}+\\\\)`, 'g'));\nfunction parseLabelWithIcons(input) {\n    _parseIconsRegex.lastIndex = 0;\n    let text = '';\n    const iconOffsets = [];\n    let iconsOffset = 0;\n    while (true) {\n        const pos = _parseIconsRegex.lastIndex;\n        const match = _parseIconsRegex.exec(input);\n        const chars = input.substring(pos, match?.index);\n        if (chars.length > 0) {\n            text += chars;\n            for (let i = 0; i < chars.length; i++) {\n                iconOffsets.push(iconsOffset);\n            }\n        }\n        if (!match) {\n            break;\n        }\n        iconsOffset += match[0].length;\n    }\n    return { text, iconOffsets };\n}\nfunction matchesFuzzyIconAware(query, target, enableSeparateSubstringMatching = false) {\n    const { text, iconOffsets } = target;\n    if (!iconOffsets || iconOffsets.length === 0) {\n        return matchesFuzzy(query, text, enableSeparateSubstringMatching);\n    }\n    const wordToMatchAgainstWithoutIconsTrimmed = ltrim(text, ' ');\n    const leadingWhitespaceOffset = text.length - wordToMatchAgainstWithoutIconsTrimmed.length;\n    const matches = matchesFuzzy(query, wordToMatchAgainstWithoutIconsTrimmed, enableSeparateSubstringMatching);\n    if (matches) {\n        for (const match of matches) {\n            const iconOffset = iconOffsets[match.start + leadingWhitespaceOffset]  + leadingWhitespaceOffset ;\n            match.start += iconOffset;\n            match.end += iconOffset;\n        }\n    }\n    return matches;\n}\nexport { escapeIcons, getCodiconAriaLabel, markdownEscapeEscapedIcons, matchesFuzzyIconAware, parseLabelWithIcons, stripIcons };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}