{"ast":null,"code":"\"use strict\";\n\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkspaceSymbolFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst documentSymbol_1 = require(\"./documentSymbol\");\nconst UUID = require(\"./utils/uuid\");\nclass WorkspaceSymbolFeature extends features_1.WorkspaceFeature {\n  constructor(client) {\n    super(client, vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type);\n  }\n  fillClientCapabilities(capabilities) {\n    let symbolCapabilities = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'workspace'), 'symbol');\n    symbolCapabilities.dynamicRegistration = true;\n    symbolCapabilities.symbolKind = {\n      valueSet: documentSymbol_1.SupportedSymbolKinds\n    };\n    symbolCapabilities.tagSupport = {\n      valueSet: documentSymbol_1.SupportedSymbolTags\n    };\n    symbolCapabilities.resolveSupport = {\n      properties: ['location.range']\n    };\n  }\n  initialize(capabilities) {\n    if (!capabilities.workspaceSymbolProvider) {\n      return;\n    }\n    this.register({\n      id: UUID.generateUuid(),\n      registerOptions: capabilities.workspaceSymbolProvider === true ? {\n        workDoneProgress: false\n      } : capabilities.workspaceSymbolProvider\n    });\n  }\n  registerLanguageProvider(options) {\n    const provider = {\n      provideWorkspaceSymbols: (query, token) => {\n        const client = this._client;\n        const provideWorkspaceSymbols = (query, token) => {\n          return client.sendRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, {\n            query\n          }, token).then(result => {\n            if (token.isCancellationRequested) {\n              return null;\n            }\n            return client.protocol2CodeConverter.asSymbolInformations(result, token);\n          }, error => {\n            return client.handleFailedRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, token, error, null);\n          });\n        };\n        const middleware = client.middleware;\n        return middleware.provideWorkspaceSymbols ? middleware.provideWorkspaceSymbols(query, token, provideWorkspaceSymbols) : provideWorkspaceSymbols(query, token);\n      },\n      resolveWorkspaceSymbol: options.resolveProvider === true ? (item, token) => {\n        const client = this._client;\n        const resolveWorkspaceSymbol = (item, token) => {\n          return client.sendRequest(vscode_languageserver_protocol_1.WorkspaceSymbolResolveRequest.type, client.code2ProtocolConverter.asWorkspaceSymbol(item), token).then(result => {\n            if (token.isCancellationRequested) {\n              return null;\n            }\n            return client.protocol2CodeConverter.asSymbolInformation(result);\n          }, error => {\n            return client.handleFailedRequest(vscode_languageserver_protocol_1.WorkspaceSymbolResolveRequest.type, token, error, null);\n          });\n        };\n        const middleware = client.middleware;\n        return middleware.resolveWorkspaceSymbol ? middleware.resolveWorkspaceSymbol(item, token, resolveWorkspaceSymbol) : resolveWorkspaceSymbol(item, token);\n      } : undefined\n    };\n    return [vscode_1.languages.registerWorkspaceSymbolProvider(provider), provider];\n  }\n}\nexports.WorkspaceSymbolFeature = WorkspaceSymbolFeature;","map":{"version":3,"names":["Object","defineProperty","exports","value","WorkspaceSymbolFeature","vscode_1","require","vscode_languageserver_protocol_1","features_1","documentSymbol_1","UUID","WorkspaceFeature","constructor","client","WorkspaceSymbolRequest","type","fillClientCapabilities","capabilities","symbolCapabilities","ensure","dynamicRegistration","symbolKind","valueSet","SupportedSymbolKinds","tagSupport","SupportedSymbolTags","resolveSupport","properties","initialize","workspaceSymbolProvider","register","id","generateUuid","registerOptions","workDoneProgress","registerLanguageProvider","options","provider","provideWorkspaceSymbols","query","token","_client","sendRequest","then","result","isCancellationRequested","protocol2CodeConverter","asSymbolInformations","error","handleFailedRequest","middleware","resolveWorkspaceSymbol","resolveProvider","item","WorkspaceSymbolResolveRequest","code2ProtocolConverter","asWorkspaceSymbol","asSymbolInformation","undefined","languages","registerWorkspaceSymbolProvider"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode-languageclient/lib/common/workspaceSymbol.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkspaceSymbolFeature = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nconst documentSymbol_1 = require(\"./documentSymbol\");\nconst UUID = require(\"./utils/uuid\");\nclass WorkspaceSymbolFeature extends features_1.WorkspaceFeature {\n    constructor(client) {\n        super(client, vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        let symbolCapabilities = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'workspace'), 'symbol');\n        symbolCapabilities.dynamicRegistration = true;\n        symbolCapabilities.symbolKind = {\n            valueSet: documentSymbol_1.SupportedSymbolKinds\n        };\n        symbolCapabilities.tagSupport = {\n            valueSet: documentSymbol_1.SupportedSymbolTags\n        };\n        symbolCapabilities.resolveSupport = { properties: ['location.range'] };\n    }\n    initialize(capabilities) {\n        if (!capabilities.workspaceSymbolProvider) {\n            return;\n        }\n        this.register({\n            id: UUID.generateUuid(),\n            registerOptions: capabilities.workspaceSymbolProvider === true ? { workDoneProgress: false } : capabilities.workspaceSymbolProvider\n        });\n    }\n    registerLanguageProvider(options) {\n        const provider = {\n            provideWorkspaceSymbols: (query, token) => {\n                const client = this._client;\n                const provideWorkspaceSymbols = (query, token) => {\n                    return client.sendRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, { query }, token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asSymbolInformations(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideWorkspaceSymbols\n                    ? middleware.provideWorkspaceSymbols(query, token, provideWorkspaceSymbols)\n                    : provideWorkspaceSymbols(query, token);\n            },\n            resolveWorkspaceSymbol: options.resolveProvider === true\n                ? (item, token) => {\n                    const client = this._client;\n                    const resolveWorkspaceSymbol = (item, token) => {\n                        return client.sendRequest(vscode_languageserver_protocol_1.WorkspaceSymbolResolveRequest.type, client.code2ProtocolConverter.asWorkspaceSymbol(item), token).then((result) => {\n                            if (token.isCancellationRequested) {\n                                return null;\n                            }\n                            return client.protocol2CodeConverter.asSymbolInformation(result);\n                        }, (error) => {\n                            return client.handleFailedRequest(vscode_languageserver_protocol_1.WorkspaceSymbolResolveRequest.type, token, error, null);\n                        });\n                    };\n                    const middleware = client.middleware;\n                    return middleware.resolveWorkspaceSymbol\n                        ? middleware.resolveWorkspaceSymbol(item, token, resolveWorkspaceSymbol)\n                        : resolveWorkspaceSymbol(item, token);\n                }\n                : undefined\n        };\n        return [vscode_1.languages.registerWorkspaceSymbolProvider(provider), provider];\n    }\n}\nexports.WorkspaceSymbolFeature = WorkspaceSymbolFeature;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}