{"ast":null,"code":"import { isUndefinedOrNull, isObject, isTypedArray } from './types.js';\nfunction deepClone(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return obj;\n  }\n  if (obj instanceof RegExp) {\n    return obj;\n  }\n  const result = Array.isArray(obj) ? [] : {};\n  Object.entries(obj).forEach(([key, value]) => {\n    result[key] = value && typeof value === 'object' ? deepClone(value) : value;\n  });\n  return result;\n}\nfunction deepFreeze(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return obj;\n  }\n  const stack = [obj];\n  while (stack.length > 0) {\n    const obj = stack.shift();\n    for (const key in obj) {\n      if (_hasOwnProperty.call(obj, key)) {\n        const prop = obj[key];\n        if (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n          stack.push(prop);\n        }\n      }\n    }\n  }\n  return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction cloneAndChange(obj, changer) {\n  return _cloneAndChange(obj, changer, new Set());\n}\nfunction _cloneAndChange(obj, changer, seen) {\n  if (isUndefinedOrNull(obj)) {\n    return obj;\n  }\n  const changed = changer(obj);\n  if (typeof changed !== 'undefined') {\n    return changed;\n  }\n  if (Array.isArray(obj)) {\n    const r1 = [];\n    for (const e of obj) {\n      r1.push(_cloneAndChange(e, changer, seen));\n    }\n    return r1;\n  }\n  if (isObject(obj)) {\n    if (seen.has(obj)) {\n      throw new Error('Cannot clone recursive data-structure');\n    }\n    seen.add(obj);\n    const r2 = {};\n    for (const i2 in obj) {\n      if (_hasOwnProperty.call(obj, i2)) {\n        r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n      }\n    }\n    seen.delete(obj);\n    return r2;\n  }\n  return obj;\n}\nfunction mixin(destination, source, overwrite = true) {\n  if (!isObject(destination)) {\n    return source;\n  }\n  if (isObject(source)) {\n    Object.keys(source).forEach(key => {\n      if (key in destination) {\n        if (overwrite) {\n          if (isObject(destination[key]) && isObject(source[key])) {\n            mixin(destination[key], source[key], overwrite);\n          } else {\n            destination[key] = source[key];\n          }\n        }\n      } else {\n        destination[key] = source[key];\n      }\n    });\n  }\n  return destination;\n}\nfunction equals(one, other) {\n  if (one === other) {\n    return true;\n  }\n  if (one === null || one === undefined || other === null || other === undefined) {\n    return false;\n  }\n  if (typeof one !== typeof other) {\n    return false;\n  }\n  if (typeof one !== 'object') {\n    return false;\n  }\n  if (Array.isArray(one) !== Array.isArray(other)) {\n    return false;\n  }\n  let i;\n  let key;\n  if (Array.isArray(one)) {\n    if (one.length !== other.length) {\n      return false;\n    }\n    for (i = 0; i < one.length; i++) {\n      if (!equals(one[i], other[i])) {\n        return false;\n      }\n    }\n  } else {\n    const oneKeys = [];\n    for (key in one) {\n      oneKeys.push(key);\n    }\n    oneKeys.sort();\n    const otherKeys = [];\n    for (key in other) {\n      otherKeys.push(key);\n    }\n    otherKeys.sort();\n    if (!equals(oneKeys, otherKeys)) {\n      return false;\n    }\n    for (i = 0; i < oneKeys.length; i++) {\n      if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\nfunction safeStringify(obj) {\n  const seen = new Set();\n  return JSON.stringify(obj, (key, value) => {\n    if (isObject(value) || Array.isArray(value)) {\n      if (seen.has(value)) {\n        return '[Circular]';\n      } else {\n        seen.add(value);\n      }\n    }\n    if (typeof value === 'bigint') {\n      return `[BigInt ${value.toString()}]`;\n    }\n    return value;\n  });\n}\nfunction distinct(base, target) {\n  const result = Object.create(null);\n  if (!base || !target) {\n    return result;\n  }\n  const targetKeys = Object.keys(target);\n  targetKeys.forEach(k => {\n    const baseValue = base[k];\n    const targetValue = target[k];\n    if (!equals(baseValue, targetValue)) {\n      result[k] = targetValue;\n    }\n  });\n  return result;\n}\nfunction filter(obj, predicate) {\n  const result = Object.create(null);\n  for (const [key, value] of Object.entries(obj)) {\n    if (predicate(key, value)) {\n      result[key] = value;\n    }\n  }\n  return result;\n}\nfunction getAllPropertyNames(obj) {\n  let res = [];\n  while (Object.prototype !== obj) {\n    res = res.concat(Object.getOwnPropertyNames(obj));\n    obj = Object.getPrototypeOf(obj);\n  }\n  return res;\n}\nfunction getAllMethodNames(obj) {\n  const methods = [];\n  for (const prop of getAllPropertyNames(obj)) {\n    if (typeof obj[prop] === 'function') {\n      methods.push(prop);\n    }\n  }\n  return methods;\n}\nfunction createProxyObject(methodNames, invoke) {\n  const createProxyMethod = method => {\n    return function () {\n      const args = Array.prototype.slice.call(arguments, 0);\n      return invoke(method, args);\n    };\n  };\n  const result = {};\n  for (const methodName of methodNames) {\n    result[methodName] = createProxyMethod(methodName);\n  }\n  return result;\n}\nexport { cloneAndChange, createProxyObject, deepClone, deepFreeze, distinct, equals, filter, getAllMethodNames, getAllPropertyNames, mixin, safeStringify };","map":{"version":3,"names":["isUndefinedOrNull","isObject","isTypedArray","deepClone","obj","RegExp","result","Array","isArray","Object","entries","forEach","key","value","deepFreeze","stack","length","shift","_hasOwnProperty","call","prop","isFrozen","push","prototype","hasOwnProperty","cloneAndChange","changer","_cloneAndChange","Set","seen","changed","r1","e","has","Error","add","r2","i2","delete","mixin","destination","source","overwrite","keys","equals","one","other","undefined","i","oneKeys","sort","otherKeys","safeStringify","JSON","stringify","toString","distinct","base","target","create","targetKeys","k","baseValue","targetValue","filter","predicate","getAllPropertyNames","res","concat","getOwnPropertyNames","getPrototypeOf","getAllMethodNames","methods","createProxyObject","methodNames","invoke","createProxyMethod","method","args","slice","arguments","methodName"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode/vscode/src/vs/base/common/objects.js"],"sourcesContent":["import { isUndefinedOrNull, isObject, isTypedArray } from './types.js';\nfunction deepClone(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        return obj;\n    }\n    const result = Array.isArray(obj) ? [] : {};\n    Object.entries(obj).forEach(([key, value]) => {\n        result[key] = value && typeof value === 'object' ? deepClone(value) : value;\n    });\n    return result;\n}\nfunction deepFreeze(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    const stack = [obj];\n    while (stack.length > 0) {\n        const obj = stack.shift();\n        for (const key in obj) {\n            if (_hasOwnProperty.call(obj, key)) {\n                const prop = obj[key];\n                if (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction cloneAndChange(obj, changer) {\n    return _cloneAndChange(obj, changer, ( new Set()));\n}\nfunction _cloneAndChange(obj, changer, seen) {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n    const changed = changer(obj);\n    if (typeof changed !== 'undefined') {\n        return changed;\n    }\n    if (Array.isArray(obj)) {\n        const r1 = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n    if (isObject(obj)) {\n        if (( seen.has(obj))) {\n            throw ( new Error('Cannot clone recursive data-structure'));\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (const i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n    return obj;\n}\nfunction mixin(destination, source, overwrite = true) {\n    if (!isObject(destination)) {\n        return source;\n    }\n    if (isObject(source)) {\n        ( Object.keys(source)).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    }\n                    else {\n                        destination[key] = source[key];\n                    }\n                }\n            }\n            else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\nfunction equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    let i;\n    let key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        const oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        const otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nfunction safeStringify(obj) {\n    const seen = ( new Set());\n    return JSON.stringify(obj, (key, value) => {\n        if (isObject(value) || Array.isArray(value)) {\n            if (( seen.has(value))) {\n                return '[Circular]';\n            }\n            else {\n                seen.add(value);\n            }\n        }\n        if (typeof value === 'bigint') {\n            return `[BigInt ${( value.toString())}]`;\n        }\n        return value;\n    });\n}\nfunction distinct(base, target) {\n    const result = Object.create(null);\n    if (!base || !target) {\n        return result;\n    }\n    const targetKeys = ( Object.keys(target));\n    targetKeys.forEach(k => {\n        const baseValue = base[k];\n        const targetValue = target[k];\n        if (!equals(baseValue, targetValue)) {\n            result[k] = targetValue;\n        }\n    });\n    return result;\n}\nfunction filter(obj, predicate) {\n    const result = Object.create(null);\n    for (const [key, value] of Object.entries(obj)) {\n        if (predicate(key, value)) {\n            result[key] = value;\n        }\n    }\n    return result;\n}\nfunction getAllPropertyNames(obj) {\n    let res = [];\n    while (Object.prototype !== obj) {\n        res = res.concat(Object.getOwnPropertyNames(obj));\n        obj = Object.getPrototypeOf(obj);\n    }\n    return res;\n}\nfunction getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nfunction createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    const result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\nexport { cloneAndChange, createProxyObject, deepClone, deepFreeze, distinct, equals, filter, getAllMethodNames, getAllPropertyNames, mixin, safeStringify };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}