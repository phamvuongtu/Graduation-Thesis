{"ast":null,"code":"\"use strict\";\n\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DiagnosticRefreshRequest = exports.WorkspaceDiagnosticRequest = exports.DocumentDiagnosticRequest = exports.DocumentDiagnosticReportKind = exports.DiagnosticServerCancellationData = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nconst Is = require(\"./utils/is\");\nconst messages_1 = require(\"./messages\");\n/**\n * @since 3.17.0\n */\nvar DiagnosticServerCancellationData;\n(function (DiagnosticServerCancellationData) {\n  function is(value) {\n    const candidate = value;\n    return candidate && Is.boolean(candidate.retriggerRequest);\n  }\n  DiagnosticServerCancellationData.is = is;\n})(DiagnosticServerCancellationData || (exports.DiagnosticServerCancellationData = DiagnosticServerCancellationData = {}));\n/**\n * The document diagnostic report kinds.\n *\n * @since 3.17.0\n */\nvar DocumentDiagnosticReportKind;\n(function (DocumentDiagnosticReportKind) {\n  /**\n   * A diagnostic report with a full\n   * set of problems.\n   */\n  DocumentDiagnosticReportKind.Full = 'full';\n  /**\n   * A report indicating that the last\n   * returned report is still accurate.\n   */\n  DocumentDiagnosticReportKind.Unchanged = 'unchanged';\n})(DocumentDiagnosticReportKind || (exports.DocumentDiagnosticReportKind = DocumentDiagnosticReportKind = {}));\n/**\n * The document diagnostic request definition.\n *\n * @since 3.17.0\n */\nvar DocumentDiagnosticRequest;\n(function (DocumentDiagnosticRequest) {\n  DocumentDiagnosticRequest.method = 'textDocument/diagnostic';\n  DocumentDiagnosticRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n  DocumentDiagnosticRequest.type = new messages_1.ProtocolRequestType(DocumentDiagnosticRequest.method);\n  DocumentDiagnosticRequest.partialResult = new vscode_jsonrpc_1.ProgressType();\n})(DocumentDiagnosticRequest || (exports.DocumentDiagnosticRequest = DocumentDiagnosticRequest = {}));\n/**\n * The workspace diagnostic request definition.\n *\n * @since 3.17.0\n */\nvar WorkspaceDiagnosticRequest;\n(function (WorkspaceDiagnosticRequest) {\n  WorkspaceDiagnosticRequest.method = 'workspace/diagnostic';\n  WorkspaceDiagnosticRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n  WorkspaceDiagnosticRequest.type = new messages_1.ProtocolRequestType(WorkspaceDiagnosticRequest.method);\n  WorkspaceDiagnosticRequest.partialResult = new vscode_jsonrpc_1.ProgressType();\n})(WorkspaceDiagnosticRequest || (exports.WorkspaceDiagnosticRequest = WorkspaceDiagnosticRequest = {}));\n/**\n * The diagnostic refresh request definition.\n *\n * @since 3.17.0\n */\nvar DiagnosticRefreshRequest;\n(function (DiagnosticRefreshRequest) {\n  DiagnosticRefreshRequest.method = `workspace/diagnostic/refresh`;\n  DiagnosticRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n  DiagnosticRefreshRequest.type = new messages_1.ProtocolRequestType0(DiagnosticRefreshRequest.method);\n})(DiagnosticRefreshRequest || (exports.DiagnosticRefreshRequest = DiagnosticRefreshRequest = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","DiagnosticRefreshRequest","WorkspaceDiagnosticRequest","DocumentDiagnosticRequest","DocumentDiagnosticReportKind","DiagnosticServerCancellationData","vscode_jsonrpc_1","require","Is","messages_1","is","candidate","boolean","retriggerRequest","Full","Unchanged","method","messageDirection","MessageDirection","clientToServer","type","ProtocolRequestType","partialResult","ProgressType","serverToClient","ProtocolRequestType0"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode-languageserver-protocol/lib/common/protocol.diagnostic.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiagnosticRefreshRequest = exports.WorkspaceDiagnosticRequest = exports.DocumentDiagnosticRequest = exports.DocumentDiagnosticReportKind = exports.DiagnosticServerCancellationData = void 0;\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\nconst Is = require(\"./utils/is\");\nconst messages_1 = require(\"./messages\");\n/**\n * @since 3.17.0\n */\nvar DiagnosticServerCancellationData;\n(function (DiagnosticServerCancellationData) {\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.boolean(candidate.retriggerRequest);\n    }\n    DiagnosticServerCancellationData.is = is;\n})(DiagnosticServerCancellationData || (exports.DiagnosticServerCancellationData = DiagnosticServerCancellationData = {}));\n/**\n * The document diagnostic report kinds.\n *\n * @since 3.17.0\n */\nvar DocumentDiagnosticReportKind;\n(function (DocumentDiagnosticReportKind) {\n    /**\n     * A diagnostic report with a full\n     * set of problems.\n     */\n    DocumentDiagnosticReportKind.Full = 'full';\n    /**\n     * A report indicating that the last\n     * returned report is still accurate.\n     */\n    DocumentDiagnosticReportKind.Unchanged = 'unchanged';\n})(DocumentDiagnosticReportKind || (exports.DocumentDiagnosticReportKind = DocumentDiagnosticReportKind = {}));\n/**\n * The document diagnostic request definition.\n *\n * @since 3.17.0\n */\nvar DocumentDiagnosticRequest;\n(function (DocumentDiagnosticRequest) {\n    DocumentDiagnosticRequest.method = 'textDocument/diagnostic';\n    DocumentDiagnosticRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    DocumentDiagnosticRequest.type = new messages_1.ProtocolRequestType(DocumentDiagnosticRequest.method);\n    DocumentDiagnosticRequest.partialResult = new vscode_jsonrpc_1.ProgressType();\n})(DocumentDiagnosticRequest || (exports.DocumentDiagnosticRequest = DocumentDiagnosticRequest = {}));\n/**\n * The workspace diagnostic request definition.\n *\n * @since 3.17.0\n */\nvar WorkspaceDiagnosticRequest;\n(function (WorkspaceDiagnosticRequest) {\n    WorkspaceDiagnosticRequest.method = 'workspace/diagnostic';\n    WorkspaceDiagnosticRequest.messageDirection = messages_1.MessageDirection.clientToServer;\n    WorkspaceDiagnosticRequest.type = new messages_1.ProtocolRequestType(WorkspaceDiagnosticRequest.method);\n    WorkspaceDiagnosticRequest.partialResult = new vscode_jsonrpc_1.ProgressType();\n})(WorkspaceDiagnosticRequest || (exports.WorkspaceDiagnosticRequest = WorkspaceDiagnosticRequest = {}));\n/**\n * The diagnostic refresh request definition.\n *\n * @since 3.17.0\n */\nvar DiagnosticRefreshRequest;\n(function (DiagnosticRefreshRequest) {\n    DiagnosticRefreshRequest.method = `workspace/diagnostic/refresh`;\n    DiagnosticRefreshRequest.messageDirection = messages_1.MessageDirection.serverToClient;\n    DiagnosticRefreshRequest.type = new messages_1.ProtocolRequestType0(DiagnosticRefreshRequest.method);\n})(DiagnosticRefreshRequest || (exports.DiagnosticRefreshRequest = DiagnosticRefreshRequest = {}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}