{"ast":null,"code":"\"use strict\";\n\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LinkedEditingFeature = void 0;\nconst code = require(\"vscode\");\nconst proto = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nclass LinkedEditingFeature extends features_1.TextDocumentLanguageFeature {\n  constructor(client) {\n    super(client, proto.LinkedEditingRangeRequest.type);\n  }\n  fillClientCapabilities(capabilities) {\n    const linkedEditingSupport = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'linkedEditingRange');\n    linkedEditingSupport.dynamicRegistration = true;\n  }\n  initialize(capabilities, documentSelector) {\n    let [id, options] = this.getRegistration(documentSelector, capabilities.linkedEditingRangeProvider);\n    if (!id || !options) {\n      return;\n    }\n    this.register({\n      id: id,\n      registerOptions: options\n    });\n  }\n  registerLanguageProvider(options) {\n    const selector = options.documentSelector;\n    const provider = {\n      provideLinkedEditingRanges: (document, position, token) => {\n        const client = this._client;\n        const provideLinkedEditing = (document, position, token) => {\n          return client.sendRequest(proto.LinkedEditingRangeRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(result => {\n            if (token.isCancellationRequested) {\n              return null;\n            }\n            return client.protocol2CodeConverter.asLinkedEditingRanges(result, token);\n          }, error => {\n            return client.handleFailedRequest(proto.LinkedEditingRangeRequest.type, token, error, null);\n          });\n        };\n        const middleware = client.middleware;\n        return middleware.provideLinkedEditingRange ? middleware.provideLinkedEditingRange(document, position, token, provideLinkedEditing) : provideLinkedEditing(document, position, token);\n      }\n    };\n    return [this.registerProvider(selector, provider), provider];\n  }\n  registerProvider(selector, provider) {\n    return code.languages.registerLinkedEditingRangeProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider);\n  }\n}\nexports.LinkedEditingFeature = LinkedEditingFeature;","map":{"version":3,"names":["Object","defineProperty","exports","value","LinkedEditingFeature","code","require","proto","features_1","TextDocumentLanguageFeature","constructor","client","LinkedEditingRangeRequest","type","fillClientCapabilities","capabilities","linkedEditingSupport","ensure","dynamicRegistration","initialize","documentSelector","id","options","getRegistration","linkedEditingRangeProvider","register","registerOptions","registerLanguageProvider","selector","provider","provideLinkedEditingRanges","document","position","token","_client","provideLinkedEditing","sendRequest","code2ProtocolConverter","asTextDocumentPositionParams","then","result","isCancellationRequested","protocol2CodeConverter","asLinkedEditingRanges","error","handleFailedRequest","middleware","provideLinkedEditingRange","registerProvider","languages","registerLinkedEditingRangeProvider","asDocumentSelector"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode-languageclient/lib/common/linkedEditingRange.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinkedEditingFeature = void 0;\nconst code = require(\"vscode\");\nconst proto = require(\"vscode-languageserver-protocol\");\nconst features_1 = require(\"./features\");\nclass LinkedEditingFeature extends features_1.TextDocumentLanguageFeature {\n    constructor(client) {\n        super(client, proto.LinkedEditingRangeRequest.type);\n    }\n    fillClientCapabilities(capabilities) {\n        const linkedEditingSupport = (0, features_1.ensure)((0, features_1.ensure)(capabilities, 'textDocument'), 'linkedEditingRange');\n        linkedEditingSupport.dynamicRegistration = true;\n    }\n    initialize(capabilities, documentSelector) {\n        let [id, options] = this.getRegistration(documentSelector, capabilities.linkedEditingRangeProvider);\n        if (!id || !options) {\n            return;\n        }\n        this.register({ id: id, registerOptions: options });\n    }\n    registerLanguageProvider(options) {\n        const selector = options.documentSelector;\n        const provider = {\n            provideLinkedEditingRanges: (document, position, token) => {\n                const client = this._client;\n                const provideLinkedEditing = (document, position, token) => {\n                    return client.sendRequest(proto.LinkedEditingRangeRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then((result) => {\n                        if (token.isCancellationRequested) {\n                            return null;\n                        }\n                        return client.protocol2CodeConverter.asLinkedEditingRanges(result, token);\n                    }, (error) => {\n                        return client.handleFailedRequest(proto.LinkedEditingRangeRequest.type, token, error, null);\n                    });\n                };\n                const middleware = client.middleware;\n                return middleware.provideLinkedEditingRange\n                    ? middleware.provideLinkedEditingRange(document, position, token, provideLinkedEditing)\n                    : provideLinkedEditing(document, position, token);\n            }\n        };\n        return [this.registerProvider(selector, provider), provider];\n    }\n    registerProvider(selector, provider) {\n        return code.languages.registerLinkedEditingRangeProvider(this._client.protocol2CodeConverter.asDocumentSelector(selector), provider);\n    }\n}\nexports.LinkedEditingFeature = LinkedEditingFeature;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}