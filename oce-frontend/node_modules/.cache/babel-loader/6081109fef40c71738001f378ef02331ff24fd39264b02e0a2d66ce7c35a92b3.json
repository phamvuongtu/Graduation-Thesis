{"ast":null,"code":"var _jsxFileName = \"/Users/phamtu/Downloads/Code/OCE/oce-frontend/src/components/CodeEditorSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Editor, { useMonaco } from \"@monaco-editor/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditorSection = ({\n  onChange,\n  language,\n  code,\n  theme,\n  darkMode\n}) => {\n  _s();\n  const [value, setValue] = useState(code || \"\");\n  const [editorTheme, setEditorTheme] = useState(theme ? theme.value : \"vs-dark\");\n  const editorRef = useRef(null);\n  const monaco = useMonaco();\n  const handleEditorChange = value => {\n    setValue(value);\n    onChange(\"code\", value);\n  };\n  useEffect(() => {\n    setValue(code); // Update the value when code prop changes\n  }, [code]);\n  useEffect(() => {\n    setEditorTheme(darkMode ? \"vs-dark\" : theme ? theme.value : \"vs-light\");\n  }, [theme, darkMode]);\n  useEffect(() => {\n    if (monaco && editorRef.current) {\n      monaco.editor.setModelLanguage(editorRef.current.getModel(), language === \"py\" ? \"python\" : language);\n    }\n  }, [language, monaco]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay rounded-md overflow-hidden w-full h-full shadow-4xl\",\n    children: /*#__PURE__*/_jsxDEV(Editor, {\n      height: \"85vh\",\n      width: \"100%\",\n      language: language === \"py\" ? \"python\" : language,\n      value: value,\n      theme: editorTheme,\n      onChange: handleEditorChange,\n      onMount: editor => {\n        editorRef.current = editor;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditorSection, \"arpveRUVOKXRzGxEFpKzENoLefY=\", false, function () {\n  return [useMonaco];\n});\n_c = CodeEditorSection;\nexport default CodeEditorSection;\nvar _c;\n$RefreshReg$(_c, \"CodeEditorSection\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Editor","useMonaco","jsxDEV","_jsxDEV","CodeEditorSection","onChange","language","code","theme","darkMode","_s","value","setValue","editorTheme","setEditorTheme","editorRef","monaco","handleEditorChange","current","editor","setModelLanguage","getModel","className","children","height","width","onMount","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/src/components/CodeEditorSection.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Editor, { useMonaco } from \"@monaco-editor/react\";\n\nconst CodeEditorSection = ({ onChange, language, code, theme, darkMode }) => {\n  const [value, setValue] = useState(code || \"\");\n  const [editorTheme, setEditorTheme] = useState(theme ? theme.value : \"vs-dark\");\n  const editorRef = useRef(null);\n  const monaco = useMonaco();\n\n  const handleEditorChange = (value) => {\n    setValue(value);\n    onChange(\"code\", value);\n  };\n\n  useEffect(() => {\n    setValue(code); // Update the value when code prop changes\n  }, [code]);\n\n  useEffect(() => {\n    setEditorTheme(darkMode ? \"vs-dark\" : (theme ? theme.value : \"vs-light\"));\n  }, [theme, darkMode]);\n\n  useEffect(() => {\n    if (monaco && editorRef.current) {\n      monaco.editor.setModelLanguage(editorRef.current.getModel(), language === \"py\" ? \"python\" : language);\n    }\n  }, [language, monaco]);\n\n  return (\n    <div className=\"overlay rounded-md overflow-hidden w-full h-full shadow-4xl\">\n      <Editor\n        height=\"85vh\"\n        width=\"100%\"\n        language={language === \"py\" ? \"python\" : language}\n        value={value}\n        theme={editorTheme}\n        onChange={handleEditorChange}\n        onMount={(editor) => {\n          editorRef.current = editor;\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CodeEditorSection;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,MAAM,IAAIC,SAAS,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAACU,IAAI,IAAI,EAAE,CAAC;EAC9C,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAACW,KAAK,GAAGA,KAAK,CAACG,KAAK,GAAG,SAAS,CAAC;EAC/E,MAAMI,SAAS,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMiB,MAAM,GAAGf,SAAS,CAAC,CAAC;EAE1B,MAAMgB,kBAAkB,GAAIN,KAAK,IAAK;IACpCC,QAAQ,CAACD,KAAK,CAAC;IACfN,QAAQ,CAAC,MAAM,EAAEM,KAAK,CAAC;EACzB,CAAC;EAEDb,SAAS,CAAC,MAAM;IACdc,QAAQ,CAACL,IAAI,CAAC,CAAC,CAAC;EAClB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEVT,SAAS,CAAC,MAAM;IACdgB,cAAc,CAACL,QAAQ,GAAG,SAAS,GAAID,KAAK,GAAGA,KAAK,CAACG,KAAK,GAAG,UAAW,CAAC;EAC3E,CAAC,EAAE,CAACH,KAAK,EAAEC,QAAQ,CAAC,CAAC;EAErBX,SAAS,CAAC,MAAM;IACd,IAAIkB,MAAM,IAAID,SAAS,CAACG,OAAO,EAAE;MAC/BF,MAAM,CAACG,MAAM,CAACC,gBAAgB,CAACL,SAAS,CAACG,OAAO,CAACG,QAAQ,CAAC,CAAC,EAAEf,QAAQ,KAAK,IAAI,GAAG,QAAQ,GAAGA,QAAQ,CAAC;IACvG;EACF,CAAC,EAAE,CAACA,QAAQ,EAAEU,MAAM,CAAC,CAAC;EAEtB,oBACEb,OAAA;IAAKmB,SAAS,EAAC,6DAA6D;IAAAC,QAAA,eAC1EpB,OAAA,CAACH,MAAM;MACLwB,MAAM,EAAC,MAAM;MACbC,KAAK,EAAC,MAAM;MACZnB,QAAQ,EAAEA,QAAQ,KAAK,IAAI,GAAG,QAAQ,GAAGA,QAAS;MAClDK,KAAK,EAAEA,KAAM;MACbH,KAAK,EAAEK,WAAY;MACnBR,QAAQ,EAAEY,kBAAmB;MAC7BS,OAAO,EAAGP,MAAM,IAAK;QACnBJ,SAAS,CAACG,OAAO,GAAGC,MAAM;MAC5B;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CAxCIN,iBAAiB;EAAA,QAINH,SAAS;AAAA;AAAA8B,EAAA,GAJpB3B,iBAAiB;AA0CvB,eAAeA,iBAAiB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}