{"ast":null,"code":"import { Schemas } from '../../../base/common/network.js';\nfunction getRemoteAuthority(uri) {\n  return uri.scheme === Schemas.vscodeRemote ? uri.authority : undefined;\n}\nfunction getRemoteName(authority) {\n  if (!authority) {\n    return undefined;\n  }\n  const pos = authority.indexOf('+');\n  if (pos < 0) {\n    return authority;\n  }\n  return authority.substr(0, pos);\n}\nfunction parseAuthorityWithOptionalPort(authority, defaultPort) {\n  let {\n    host,\n    port\n  } = parseAuthority(authority);\n  if (typeof port === 'undefined') {\n    port = defaultPort;\n  }\n  return {\n    host,\n    port\n  };\n}\nfunction parseAuthority(authority) {\n  const m1 = authority.match(/^(\\[[0-9a-z:]+\\]):(\\d+)$/);\n  if (m1) {\n    return {\n      host: m1[1],\n      port: parseInt(m1[2], 10)\n    };\n  }\n  const m2 = authority.match(/^(\\[[0-9a-z:]+\\])$/);\n  if (m2) {\n    return {\n      host: m2[1],\n      port: undefined\n    };\n  }\n  const m3 = authority.match(/(.*):(\\d+)$/);\n  if (m3) {\n    return {\n      host: m3[1],\n      port: parseInt(m3[2], 10)\n    };\n  }\n  return {\n    host: authority,\n    port: undefined\n  };\n}\nexport { getRemoteAuthority, getRemoteName, parseAuthorityWithOptionalPort };","map":{"version":3,"names":["Schemas","getRemoteAuthority","uri","scheme","vscodeRemote","authority","undefined","getRemoteName","pos","indexOf","substr","parseAuthorityWithOptionalPort","defaultPort","host","port","parseAuthority","m1","match","parseInt","m2","m3"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode/vscode/src/vs/platform/remote/common/remoteHosts.js"],"sourcesContent":["import { Schemas } from '../../../base/common/network.js';\nfunction getRemoteAuthority(uri) {\n    return uri.scheme === Schemas.vscodeRemote ? uri.authority : undefined;\n}\nfunction getRemoteName(authority) {\n    if (!authority) {\n        return undefined;\n    }\n    const pos = authority.indexOf('+');\n    if (pos < 0) {\n        return authority;\n    }\n    return authority.substr(0, pos);\n}\nfunction parseAuthorityWithOptionalPort(authority, defaultPort) {\n    let { host, port } = parseAuthority(authority);\n    if (typeof port === 'undefined') {\n        port = defaultPort;\n    }\n    return { host, port };\n}\nfunction parseAuthority(authority) {\n    const m1 = authority.match(/^(\\[[0-9a-z:]+\\]):(\\d+)$/);\n    if (m1) {\n        return { host: m1[1], port: parseInt(m1[2], 10) };\n    }\n    const m2 = authority.match(/^(\\[[0-9a-z:]+\\])$/);\n    if (m2) {\n        return { host: m2[1], port: undefined };\n    }\n    const m3 = authority.match(/(.*):(\\d+)$/);\n    if (m3) {\n        return { host: m3[1], port: parseInt(m3[2], 10) };\n    }\n    return { host: authority, port: undefined };\n}\nexport { getRemoteAuthority, getRemoteName, parseAuthorityWithOptionalPort };\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,iCAAiC;AACzD,SAASC,kBAAkBA,CAACC,GAAG,EAAE;EAC7B,OAAOA,GAAG,CAACC,MAAM,KAAKH,OAAO,CAACI,YAAY,GAAGF,GAAG,CAACG,SAAS,GAAGC,SAAS;AAC1E;AACA,SAASC,aAAaA,CAACF,SAAS,EAAE;EAC9B,IAAI,CAACA,SAAS,EAAE;IACZ,OAAOC,SAAS;EACpB;EACA,MAAME,GAAG,GAAGH,SAAS,CAACI,OAAO,CAAC,GAAG,CAAC;EAClC,IAAID,GAAG,GAAG,CAAC,EAAE;IACT,OAAOH,SAAS;EACpB;EACA,OAAOA,SAAS,CAACK,MAAM,CAAC,CAAC,EAAEF,GAAG,CAAC;AACnC;AACA,SAASG,8BAA8BA,CAACN,SAAS,EAAEO,WAAW,EAAE;EAC5D,IAAI;IAAEC,IAAI;IAAEC;EAAK,CAAC,GAAGC,cAAc,CAACV,SAAS,CAAC;EAC9C,IAAI,OAAOS,IAAI,KAAK,WAAW,EAAE;IAC7BA,IAAI,GAAGF,WAAW;EACtB;EACA,OAAO;IAAEC,IAAI;IAAEC;EAAK,CAAC;AACzB;AACA,SAASC,cAAcA,CAACV,SAAS,EAAE;EAC/B,MAAMW,EAAE,GAAGX,SAAS,CAACY,KAAK,CAAC,0BAA0B,CAAC;EACtD,IAAID,EAAE,EAAE;IACJ,OAAO;MAAEH,IAAI,EAAEG,EAAE,CAAC,CAAC,CAAC;MAAEF,IAAI,EAAEI,QAAQ,CAACF,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE;IAAE,CAAC;EACrD;EACA,MAAMG,EAAE,GAAGd,SAAS,CAACY,KAAK,CAAC,oBAAoB,CAAC;EAChD,IAAIE,EAAE,EAAE;IACJ,OAAO;MAAEN,IAAI,EAAEM,EAAE,CAAC,CAAC,CAAC;MAAEL,IAAI,EAAER;IAAU,CAAC;EAC3C;EACA,MAAMc,EAAE,GAAGf,SAAS,CAACY,KAAK,CAAC,aAAa,CAAC;EACzC,IAAIG,EAAE,EAAE;IACJ,OAAO;MAAEP,IAAI,EAAEO,EAAE,CAAC,CAAC,CAAC;MAAEN,IAAI,EAAEI,QAAQ,CAACE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE;IAAE,CAAC;EACrD;EACA,OAAO;IAAEP,IAAI,EAAER,SAAS;IAAES,IAAI,EAAER;EAAU,CAAC;AAC/C;AACA,SAASL,kBAAkB,EAAEM,aAAa,EAAEI,8BAA8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}