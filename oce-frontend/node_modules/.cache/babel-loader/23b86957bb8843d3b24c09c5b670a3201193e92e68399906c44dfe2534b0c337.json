{"ast":null,"code":"/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.objectLiteral = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n  return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n  return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n  return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n  return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n  return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n  return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n  return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\nfunction typedArray(value, check) {\n  return Array.isArray(value) && value.every(check);\n}\nexports.typedArray = typedArray;\nfunction objectLiteral(value) {\n  // Strictly speaking class instances pass this check as well. Since the LSP\n  // doesn't use classes we ignore this for now. If we do we need to add something\n  // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n  return value !== null && typeof value === 'object';\n}\nexports.objectLiteral = objectLiteral;","map":{"version":3,"names":["Object","defineProperty","exports","value","objectLiteral","typedArray","stringArray","array","func","error","number","string","boolean","String","Number","Error","Array","isArray","every","elem","check"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode-languageserver-protocol/lib/common/utils/is.js"],"sourcesContent":["/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.objectLiteral = exports.typedArray = exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\nfunction typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n}\nexports.typedArray = typedArray;\nfunction objectLiteral(value) {\n    // Strictly speaking class instances pass this check as well. Since the LSP\n    // doesn't use classes we ignore this for now. If we do we need to add something\n    // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n    return value !== null && typeof value === 'object';\n}\nexports.objectLiteral = objectLiteral;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,aAAa,GAAGF,OAAO,CAACG,UAAU,GAAGH,OAAO,CAACI,WAAW,GAAGJ,OAAO,CAACK,KAAK,GAAGL,OAAO,CAACM,IAAI,GAAGN,OAAO,CAACO,KAAK,GAAGP,OAAO,CAACQ,MAAM,GAAGR,OAAO,CAACS,MAAM,GAAGT,OAAO,CAACU,OAAO,GAAG,KAAK,CAAC;AAC5K,SAASA,OAAOA,CAACT,KAAK,EAAE;EACpB,OAAOA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK;AAC5C;AACAD,OAAO,CAACU,OAAO,GAAGA,OAAO;AACzB,SAASD,MAAMA,CAACR,KAAK,EAAE;EACnB,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,YAAYU,MAAM;AAC/D;AACAX,OAAO,CAACS,MAAM,GAAGA,MAAM;AACvB,SAASD,MAAMA,CAACP,KAAK,EAAE;EACnB,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,YAAYW,MAAM;AAC/D;AACAZ,OAAO,CAACQ,MAAM,GAAGA,MAAM;AACvB,SAASD,KAAKA,CAACN,KAAK,EAAE;EAClB,OAAOA,KAAK,YAAYY,KAAK;AACjC;AACAb,OAAO,CAACO,KAAK,GAAGA,KAAK;AACrB,SAASD,IAAIA,CAACL,KAAK,EAAE;EACjB,OAAO,OAAOA,KAAK,KAAK,UAAU;AACtC;AACAD,OAAO,CAACM,IAAI,GAAGA,IAAI;AACnB,SAASD,KAAKA,CAACJ,KAAK,EAAE;EAClB,OAAOa,KAAK,CAACC,OAAO,CAACd,KAAK,CAAC;AAC/B;AACAD,OAAO,CAACK,KAAK,GAAGA,KAAK;AACrB,SAASD,WAAWA,CAACH,KAAK,EAAE;EACxB,OAAOI,KAAK,CAACJ,KAAK,CAAC,IAAIA,KAAK,CAACe,KAAK,CAACC,IAAI,IAAIR,MAAM,CAACQ,IAAI,CAAC,CAAC;AAC5D;AACAjB,OAAO,CAACI,WAAW,GAAGA,WAAW;AACjC,SAASD,UAAUA,CAACF,KAAK,EAAEiB,KAAK,EAAE;EAC9B,OAAOJ,KAAK,CAACC,OAAO,CAACd,KAAK,CAAC,IAAIA,KAAK,CAACe,KAAK,CAACE,KAAK,CAAC;AACrD;AACAlB,OAAO,CAACG,UAAU,GAAGA,UAAU;AAC/B,SAASD,aAAaA,CAACD,KAAK,EAAE;EAC1B;EACA;EACA;EACA,OAAOA,KAAK,KAAK,IAAI,IAAI,OAAOA,KAAK,KAAK,QAAQ;AACtD;AACAD,OAAO,CAACE,aAAa,GAAGA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}