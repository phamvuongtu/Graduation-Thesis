{"ast":null,"code":"import { getConfiguredDefaultLocale } from '../../nls.js';\nconst LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _platformLocale = LANGUAGE_DEFAULT;\nlet _userAgent = undefined;\nconst $globalThis = globalThis;\nlet nodeProcess = undefined;\nif (typeof $globalThis.vscode !== 'undefined' && typeof $globalThis.vscode.process !== 'undefined') {\n  nodeProcess = $globalThis.vscode.process;\n} else if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n  nodeProcess = process;\n}\nconst isElectronProcess = typeof nodeProcess?.versions?.electron === 'string';\nconst isElectronRenderer = isElectronProcess && nodeProcess?.type === 'renderer';\nif (typeof nodeProcess === 'object') {\n  _isWindows = nodeProcess.platform === 'win32';\n  _isMacintosh = nodeProcess.platform === 'darwin';\n  _isLinux = nodeProcess.platform === 'linux';\n  _isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n  _locale = LANGUAGE_DEFAULT;\n  _language = LANGUAGE_DEFAULT;\n  const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n  if (rawNlsConfig) {\n    try {\n      const nlsConfig = JSON.parse(rawNlsConfig);\n      const resolved = nlsConfig.availableLanguages['*'];\n      _locale = nlsConfig.locale;\n      _platformLocale = nlsConfig.osLocale;\n      _language = resolved ? resolved : LANGUAGE_DEFAULT;\n    } catch (e) {}\n  }\n  _isNative = true;\n} else if (typeof navigator === 'object' && !isElectronRenderer) {\n  _userAgent = navigator.userAgent;\n  _isWindows = _userAgent.indexOf('Windows') >= 0;\n  _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n  _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n  _isLinux = _userAgent.indexOf('Linux') >= 0;\n  _isMobile = _userAgent?.indexOf('Mobi') >= 0;\n  _isWeb = true;\n  const configuredLocale = getConfiguredDefaultLocale();\n  _locale = configuredLocale || LANGUAGE_DEFAULT;\n  _language = _locale;\n  _platformLocale = navigator.language;\n} else {\n  console.error('Unable to resolve platform.');\n}\nfunction PlatformToString(platform) {\n  switch (platform) {\n    case 0:\n      return 'Web';\n    case 1:\n      return 'Mac';\n    case 2:\n      return 'Linux';\n    case 3:\n      return 'Windows';\n  }\n}\nlet _platform = 0;\nif (_isMacintosh) {\n  _platform = 1;\n} else if (_isWindows) {\n  _platform = 3;\n} else if (_isLinux) {\n  _platform = 2;\n}\nconst isWindows = _isWindows;\nconst isMacintosh = _isMacintosh;\nconst isLinux = _isLinux;\nconst isNative = _isNative;\nconst isWeb = _isWeb;\nconst isWebWorker = _isWeb && typeof $globalThis.importScripts === 'function';\nconst webWorkerOrigin = isWebWorker ? $globalThis.origin : undefined;\nconst isIOS = _isIOS;\nconst isMobile = _isMobile;\nconst isCI = _isCI;\nconst platform = _platform;\nconst userAgent = _userAgent;\nconst language = _language;\nvar Language;\n(function (Language) {\n  function value() {\n    return language;\n  }\n  Language.value = value;\n  function isDefaultVariant() {\n    if (language.length === 2) {\n      return language === 'en';\n    } else if (language.length >= 3) {\n      return language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n    } else {\n      return false;\n    }\n  }\n  Language.isDefaultVariant = isDefaultVariant;\n  function isDefault() {\n    return language === 'en';\n  }\n  Language.isDefault = isDefault;\n})(Language || (Language = {}));\nconst locale = _locale;\nconst platformLocale = _platformLocale;\nconst setTimeout0IsFaster = typeof $globalThis.postMessage === 'function' && !$globalThis.importScripts;\nconst setTimeout0 = (() => {\n  if (setTimeout0IsFaster) {\n    const pending = [];\n    $globalThis.addEventListener('message', e => {\n      if (e.data && e.data.vscodeScheduleAsyncWork) {\n        for (let i = 0, len = pending.length; i < len; i++) {\n          const candidate = pending[i];\n          if (candidate.id === e.data.vscodeScheduleAsyncWork) {\n            pending.splice(i, 1);\n            candidate.callback();\n            return;\n          }\n        }\n      }\n    });\n    let lastId = 0;\n    return callback => {\n      const myId = ++lastId;\n      pending.push({\n        id: myId,\n        callback: callback\n      });\n      $globalThis.postMessage({\n        vscodeScheduleAsyncWork: myId\n      }, '*');\n    };\n  }\n  return callback => setTimeout(callback);\n})();\nconst OS = _isMacintosh || _isIOS ? 2 : _isWindows ? 1 : 3;\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nfunction isLittleEndian() {\n  if (!_isLittleEndianComputed) {\n    _isLittleEndianComputed = true;\n    const test = new Uint8Array(2);\n    test[0] = 1;\n    test[1] = 2;\n    const view = new Uint16Array(test.buffer);\n    _isLittleEndian = view[0] === (2 << 8) + 1;\n  }\n  return _isLittleEndian;\n}\nconst isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nconst isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nconst isSafari = !!(!isChrome && userAgent && userAgent.indexOf('Safari') >= 0);\nconst isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nconst isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\nexport { LANGUAGE_DEFAULT, Language, OS, PlatformToString, isAndroid, isCI, isChrome, isEdge, isFirefox, isIOS, isLinux, isLittleEndian, isMacintosh, isMobile, isNative, isSafari, isWeb, isWebWorker, isWindows, language, locale, platform, platformLocale, setTimeout0, setTimeout0IsFaster, userAgent, webWorkerOrigin };","map":{"version":3,"names":["getConfiguredDefaultLocale","LANGUAGE_DEFAULT","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_isCI","_isMobile","_locale","undefined","_language","_platformLocale","_userAgent","$globalThis","globalThis","nodeProcess","vscode","process","versions","node","isElectronProcess","electron","isElectronRenderer","type","platform","env","rawNlsConfig","nlsConfig","JSON","parse","resolved","availableLanguages","locale","osLocale","e","navigator","userAgent","indexOf","maxTouchPoints","configuredLocale","language","console","error","PlatformToString","_platform","isWindows","isMacintosh","isLinux","isNative","isWeb","isWebWorker","importScripts","webWorkerOrigin","origin","isIOS","isMobile","isCI","Language","value","isDefaultVariant","length","isDefault","platformLocale","setTimeout0IsFaster","postMessage","setTimeout0","pending","addEventListener","data","vscodeScheduleAsyncWork","i","len","candidate","id","splice","callback","lastId","myId","push","setTimeout","OS","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","test","Uint8Array","view","Uint16Array","buffer","isChrome","isFirefox","isSafari","isEdge","isAndroid"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode/vscode/src/vs/base/common/platform.js"],"sourcesContent":["import { getConfiguredDefaultLocale } from '../../nls.js';\nconst LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _platformLocale = LANGUAGE_DEFAULT;\nlet _userAgent = undefined;\nconst $globalThis = globalThis;\nlet nodeProcess = undefined;\nif (typeof $globalThis.vscode !== 'undefined' && typeof $globalThis.vscode.process !== 'undefined') {\n    nodeProcess = $globalThis.vscode.process;\n}\nelse if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n    nodeProcess = process;\n}\nconst isElectronProcess = typeof nodeProcess?.versions?.electron === 'string';\nconst isElectronRenderer = isElectronProcess && nodeProcess?.type === 'renderer';\nif (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            const resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            _platformLocale = nlsConfig.osLocale;\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\nelse if (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isMobile = _userAgent?.indexOf('Mobi') >= 0;\n    _isWeb = true;\n    const configuredLocale = getConfiguredDefaultLocale();\n    _locale = configuredLocale || LANGUAGE_DEFAULT;\n    _language = _locale;\n    _platformLocale = navigator.language;\n}\nelse {\n    console.error('Unable to resolve platform.');\n}\nfunction PlatformToString(platform) {\n    switch (platform) {\n        case 0 : return 'Web';\n        case 1 : return 'Mac';\n        case 2 : return 'Linux';\n        case 3 : return 'Windows';\n    }\n}\nlet _platform = 0 ;\nif (_isMacintosh) {\n    _platform = 1 ;\n}\nelse if (_isWindows) {\n    _platform = 3 ;\n}\nelse if (_isLinux) {\n    _platform = 2 ;\n}\nconst isWindows = _isWindows;\nconst isMacintosh = _isMacintosh;\nconst isLinux = _isLinux;\nconst isNative = _isNative;\nconst isWeb = _isWeb;\nconst isWebWorker = (_isWeb && typeof $globalThis.importScripts === 'function');\nconst webWorkerOrigin = isWebWorker ? $globalThis.origin : undefined;\nconst isIOS = _isIOS;\nconst isMobile = _isMobile;\nconst isCI = _isCI;\nconst platform = _platform;\nconst userAgent = _userAgent;\nconst language = _language;\nvar Language;\n( ((function(Language) {\n    function value() {\n        return language;\n    }\n    Language.value = value;\n    function isDefaultVariant() {\n        if (language.length === 2) {\n            return language === 'en';\n        }\n        else if (language.length >= 3) {\n            return language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n        }\n        else {\n            return false;\n        }\n    }\n    Language.isDefaultVariant = isDefaultVariant;\n    function isDefault() {\n        return language === 'en';\n    }\n    Language.isDefault = isDefault;\n})(Language || (Language = {}))));\nconst locale = _locale;\nconst platformLocale = _platformLocale;\nconst setTimeout0IsFaster = (typeof $globalThis.postMessage === 'function' && !$globalThis.importScripts);\nconst setTimeout0 = (() => {\n    if (setTimeout0IsFaster) {\n        const pending = [];\n        $globalThis.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeScheduleAsyncWork) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeScheduleAsyncWork) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            $globalThis.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n        };\n    }\n    return (callback) => setTimeout(callback);\n})();\nconst OS = (_isMacintosh || _isIOS ? 2  : ((_isWindows ? 1  : 3) ));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nfunction isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = ( (new Uint8Array(2)));\n        test[0] = 1;\n        test[1] = 2;\n        const view = ( (new Uint16Array(test.buffer)));\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\nconst isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nconst isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nconst isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nconst isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nconst isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\nexport { LANGUAGE_DEFAULT, Language, OS, PlatformToString, isAndroid, isCI, isChrome, isEdge, isFirefox, isIOS, isLinux, isLittleEndian, isMacintosh, isMobile, isNative, isSafari, isWeb, isWebWorker, isWindows, language, locale, platform, platformLocale, setTimeout0, setTimeout0IsFaster, userAgent, webWorkerOrigin };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}