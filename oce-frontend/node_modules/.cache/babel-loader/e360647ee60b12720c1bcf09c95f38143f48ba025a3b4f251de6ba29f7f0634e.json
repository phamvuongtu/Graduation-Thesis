{"ast":null,"code":"class ErrorHandler {\n  constructor() {\n    this.listeners = [];\n    this.unexpectedErrorHandler = function (e) {\n      setTimeout(() => {\n        if (e.stack) {\n          if (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n            throw new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack);\n          }\n          throw new Error(e.message + '\\n\\n' + e.stack);\n        }\n        throw e;\n      }, 0);\n    };\n  }\n  addListener(listener) {\n    this.listeners.push(listener);\n    return () => {\n      this._removeListener(listener);\n    };\n  }\n  emit(e) {\n    this.listeners.forEach(listener => {\n      listener(e);\n    });\n  }\n  _removeListener(listener) {\n    this.listeners.splice(this.listeners.indexOf(listener), 1);\n  }\n  setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n    this.unexpectedErrorHandler = newUnexpectedErrorHandler;\n  }\n  getUnexpectedErrorHandler() {\n    return this.unexpectedErrorHandler;\n  }\n  onUnexpectedError(e) {\n    this.unexpectedErrorHandler(e);\n    this.emit(e);\n  }\n  onUnexpectedExternalError(e) {\n    this.unexpectedErrorHandler(e);\n  }\n}\nconst errorHandler = new ErrorHandler();\nfunction setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n  errorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\nfunction onUnexpectedError(e) {\n  if (!isCancellationError(e)) {\n    errorHandler.onUnexpectedError(e);\n  }\n  return undefined;\n}\nfunction onUnexpectedExternalError(e) {\n  if (!isCancellationError(e)) {\n    errorHandler.onUnexpectedExternalError(e);\n  }\n  return undefined;\n}\nfunction transformErrorForSerialization(error) {\n  if (error instanceof Error) {\n    const {\n      name,\n      message\n    } = error;\n    const stack = error.stacktrace || error.stack;\n    return {\n      $isError: true,\n      name,\n      message,\n      stack,\n      noTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error)\n    };\n  }\n  return error;\n}\nconst canceledName = 'Canceled';\nfunction isCancellationError(error) {\n  if (error instanceof CancellationError) {\n    return true;\n  }\n  return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\nclass CancellationError extends Error {\n  constructor() {\n    super(canceledName);\n    this.name = this.message;\n  }\n}\nfunction canceled() {\n  const error = new Error(canceledName);\n  error.name = error.message;\n  return error;\n}\nfunction illegalArgument(name) {\n  if (name) {\n    return new Error(`Illegal argument: ${name}`);\n  } else {\n    return new Error('Illegal argument');\n  }\n}\nfunction illegalState(name) {\n  if (name) {\n    return new Error(`Illegal state: ${name}`);\n  } else {\n    return new Error('Illegal state');\n  }\n}\nclass ReadonlyError extends TypeError {\n  constructor(name) {\n    super(name ? `${name} is read-only and cannot be changed` : 'Cannot change read-only property');\n  }\n}\nfunction getErrorMessage(err) {\n  if (!err) {\n    return 'Error';\n  }\n  if (err.message) {\n    return err.message;\n  }\n  if (err.stack) {\n    return err.stack.split('\\n')[0];\n  }\n  return String(err);\n}\nclass NotImplementedError extends Error {\n  constructor(message) {\n    super('NotImplemented');\n    if (message) {\n      this.message = message;\n    }\n  }\n}\nclass NotSupportedError extends Error {\n  constructor(message) {\n    super('NotSupported');\n    if (message) {\n      this.message = message;\n    }\n  }\n}\nclass ErrorNoTelemetry extends Error {\n  constructor(msg) {\n    super(msg);\n    this.name = 'CodeExpectedError';\n  }\n  static fromError(err) {\n    if (err instanceof ErrorNoTelemetry) {\n      return err;\n    }\n    const result = new ErrorNoTelemetry();\n    result.message = err.message;\n    result.stack = err.stack;\n    return result;\n  }\n  static isErrorNoTelemetry(err) {\n    return err.name === 'CodeExpectedError';\n  }\n}\nclass BugIndicatingError extends Error {\n  constructor(message) {\n    super(message || 'An unexpected bug occurred.');\n    Object.setPrototypeOf(this, BugIndicatingError.prototype);\n  }\n}\nexport { BugIndicatingError, CancellationError, ErrorHandler, ErrorNoTelemetry, NotImplementedError, NotSupportedError, ReadonlyError, canceled, errorHandler, getErrorMessage, illegalArgument, illegalState, isCancellationError, onUnexpectedError, onUnexpectedExternalError, setUnexpectedErrorHandler, transformErrorForSerialization };","map":{"version":3,"names":["ErrorHandler","constructor","listeners","unexpectedErrorHandler","e","setTimeout","stack","ErrorNoTelemetry","isErrorNoTelemetry","message","Error","addListener","listener","push","_removeListener","emit","forEach","splice","indexOf","setUnexpectedErrorHandler","newUnexpectedErrorHandler","getUnexpectedErrorHandler","onUnexpectedError","onUnexpectedExternalError","errorHandler","isCancellationError","undefined","transformErrorForSerialization","error","name","stacktrace","$isError","noTelemetry","canceledName","CancellationError","canceled","illegalArgument","illegalState","ReadonlyError","TypeError","getErrorMessage","err","split","String","NotImplementedError","NotSupportedError","msg","fromError","result","BugIndicatingError","Object","setPrototypeOf","prototype"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode/vscode/src/vs/base/common/errors.js"],"sourcesContent":["class ErrorHandler {\n    constructor() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(() => {\n                if (e.stack) {\n                    if (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n                        throw ( new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack));\n                    }\n                    throw ( new Error(e.message + '\\n\\n' + e.stack));\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    addListener(listener) {\n        this.listeners.push(listener);\n        return () => {\n            this._removeListener(listener);\n        };\n    }\n    emit(e) {\n        this.listeners.forEach((listener) => {\n            listener(e);\n        });\n    }\n    _removeListener(listener) {\n        this.listeners.splice(this.listeners.indexOf(listener), 1);\n    }\n    setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n        this.unexpectedErrorHandler = newUnexpectedErrorHandler;\n    }\n    getUnexpectedErrorHandler() {\n        return this.unexpectedErrorHandler;\n    }\n    onUnexpectedError(e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    }\n    onUnexpectedExternalError(e) {\n        this.unexpectedErrorHandler(e);\n    }\n}\nconst errorHandler = ( new ErrorHandler());\nfunction setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n    errorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\nfunction onUnexpectedError(e) {\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nfunction onUnexpectedExternalError(e) {\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nfunction transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        const { name, message } = error;\n        const stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name,\n            message,\n            stack,\n            noTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error)\n        };\n    }\n    return error;\n}\nconst canceledName = 'Canceled';\nfunction isCancellationError(error) {\n    if (error instanceof CancellationError) {\n        return true;\n    }\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\nclass CancellationError extends Error {\n    constructor() {\n        super(canceledName);\n        this.name = this.message;\n    }\n}\nfunction canceled() {\n    const error = ( new Error(canceledName));\n    error.name = error.message;\n    return error;\n}\nfunction illegalArgument(name) {\n    if (name) {\n        return ( new Error(`Illegal argument: ${name}`));\n    }\n    else {\n        return ( new Error('Illegal argument'));\n    }\n}\nfunction illegalState(name) {\n    if (name) {\n        return ( new Error(`Illegal state: ${name}`));\n    }\n    else {\n        return ( new Error('Illegal state'));\n    }\n}\nclass ReadonlyError extends TypeError {\n    constructor(name) {\n        super(name ? `${name} is read-only and cannot be changed` : 'Cannot change read-only property');\n    }\n}\nfunction getErrorMessage(err) {\n    if (!err) {\n        return 'Error';\n    }\n    if (err.message) {\n        return err.message;\n    }\n    if (err.stack) {\n        return err.stack.split('\\n')[0];\n    }\n    return String(err);\n}\nclass NotImplementedError extends Error {\n    constructor(message) {\n        super('NotImplemented');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\nclass NotSupportedError extends Error {\n    constructor(message) {\n        super('NotSupported');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\nclass ErrorNoTelemetry extends Error {\n    constructor(msg) {\n        super(msg);\n        this.name = 'CodeExpectedError';\n    }\n    static fromError(err) {\n        if (err instanceof ErrorNoTelemetry) {\n            return err;\n        }\n        const result = ( new ErrorNoTelemetry());\n        result.message = err.message;\n        result.stack = err.stack;\n        return result;\n    }\n    static isErrorNoTelemetry(err) {\n        return err.name === 'CodeExpectedError';\n    }\n}\nclass BugIndicatingError extends Error {\n    constructor(message) {\n        super(message || 'An unexpected bug occurred.');\n        Object.setPrototypeOf(this, BugIndicatingError.prototype);\n    }\n}\nexport { BugIndicatingError, CancellationError, ErrorHandler, ErrorNoTelemetry, NotImplementedError, NotSupportedError, ReadonlyError, canceled, errorHandler, getErrorMessage, illegalArgument, illegalState, isCancellationError, onUnexpectedError, onUnexpectedExternalError, setUnexpectedErrorHandler, transformErrorForSerialization };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}