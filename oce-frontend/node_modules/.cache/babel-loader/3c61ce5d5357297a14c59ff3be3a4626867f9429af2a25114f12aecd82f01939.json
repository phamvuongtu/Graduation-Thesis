{"ast":null,"code":"\"use strict\";\n\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkspaceFeature = exports.TextDocumentLanguageFeature = exports.TextDocumentEventFeature = exports.DynamicDocumentFeature = exports.DynamicFeature = exports.StaticFeature = exports.ensure = exports.LSPCancellationError = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nconst UUID = require(\"./utils/uuid\");\nclass LSPCancellationError extends vscode_1.CancellationError {\n  constructor(data) {\n    super();\n    this.data = data;\n  }\n}\nexports.LSPCancellationError = LSPCancellationError;\nfunction ensure(target, key) {\n  if (target[key] === undefined) {\n    target[key] = {};\n  }\n  return target[key];\n}\nexports.ensure = ensure;\nvar StaticFeature;\n(function (StaticFeature) {\n  function is(value) {\n    const candidate = value;\n    return candidate !== undefined && candidate !== null && Is.func(candidate.fillClientCapabilities) && Is.func(candidate.initialize) && Is.func(candidate.getState) && Is.func(candidate.clear) && (candidate.fillInitializeParams === undefined || Is.func(candidate.fillInitializeParams));\n  }\n  StaticFeature.is = is;\n})(StaticFeature || (exports.StaticFeature = StaticFeature = {}));\nvar DynamicFeature;\n(function (DynamicFeature) {\n  function is(value) {\n    const candidate = value;\n    return candidate !== undefined && candidate !== null && Is.func(candidate.fillClientCapabilities) && Is.func(candidate.initialize) && Is.func(candidate.getState) && Is.func(candidate.clear) && (candidate.fillInitializeParams === undefined || Is.func(candidate.fillInitializeParams)) && Is.func(candidate.register) && Is.func(candidate.unregister) && candidate.registrationType !== undefined;\n  }\n  DynamicFeature.is = is;\n})(DynamicFeature || (exports.DynamicFeature = DynamicFeature = {}));\n/**\n * An abstract dynamic feature implementation that operates on documents (e.g. text\n * documents or notebooks).\n */\nclass DynamicDocumentFeature {\n  constructor(client) {\n    this._client = client;\n  }\n  /**\n   * Returns the state the feature is in.\n   */\n  getState() {\n    const selectors = this.getDocumentSelectors();\n    let count = 0;\n    for (const selector of selectors) {\n      count++;\n      for (const document of vscode_1.workspace.textDocuments) {\n        if (vscode_1.languages.match(selector, document) > 0) {\n          return {\n            kind: 'document',\n            id: this.registrationType.method,\n            registrations: true,\n            matches: true\n          };\n        }\n      }\n    }\n    const registrations = count > 0;\n    return {\n      kind: 'document',\n      id: this.registrationType.method,\n      registrations,\n      matches: false\n    };\n  }\n}\nexports.DynamicDocumentFeature = DynamicDocumentFeature;\n/**\n * An abstract base class to implement features that react to events\n * emitted from text documents.\n */\nclass TextDocumentEventFeature extends DynamicDocumentFeature {\n  static textDocumentFilter(selectors, textDocument) {\n    for (const selector of selectors) {\n      if (vscode_1.languages.match(selector, textDocument) > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n  constructor(client, event, type, middleware, createParams, textDocument, selectorFilter) {\n    super(client);\n    this._event = event;\n    this._type = type;\n    this._middleware = middleware;\n    this._createParams = createParams;\n    this._textDocument = textDocument;\n    this._selectorFilter = selectorFilter;\n    this._selectors = new Map();\n    this._onNotificationSent = new vscode_1.EventEmitter();\n  }\n  getStateInfo() {\n    return [this._selectors.values(), false];\n  }\n  getDocumentSelectors() {\n    return this._selectors.values();\n  }\n  register(data) {\n    if (!data.registerOptions.documentSelector) {\n      return;\n    }\n    if (!this._listener) {\n      this._listener = this._event(data => {\n        this.callback(data).catch(error => {\n          this._client.error(`Sending document notification ${this._type.method} failed.`, error);\n        });\n      });\n    }\n    this._selectors.set(data.id, this._client.protocol2CodeConverter.asDocumentSelector(data.registerOptions.documentSelector));\n  }\n  async callback(data) {\n    const doSend = async data => {\n      const params = this._createParams(data);\n      await this._client.sendNotification(this._type, params);\n      this.notificationSent(this.getTextDocument(data), this._type, params);\n    };\n    if (this.matches(data)) {\n      const middleware = this._middleware();\n      return middleware ? middleware(data, data => doSend(data)) : doSend(data);\n    }\n  }\n  matches(data) {\n    if (this._client.hasDedicatedTextSynchronizationFeature(this._textDocument(data))) {\n      return false;\n    }\n    return !this._selectorFilter || this._selectorFilter(this._selectors.values(), data);\n  }\n  get onNotificationSent() {\n    return this._onNotificationSent.event;\n  }\n  notificationSent(textDocument, type, params) {\n    this._onNotificationSent.fire({\n      textDocument,\n      type,\n      params\n    });\n  }\n  unregister(id) {\n    this._selectors.delete(id);\n    if (this._selectors.size === 0 && this._listener) {\n      this._listener.dispose();\n      this._listener = undefined;\n    }\n  }\n  clear() {\n    this._selectors.clear();\n    this._onNotificationSent.dispose();\n    if (this._listener) {\n      this._listener.dispose();\n      this._listener = undefined;\n    }\n  }\n  getProvider(document) {\n    for (const selector of this._selectors.values()) {\n      if (vscode_1.languages.match(selector, document) > 0) {\n        return {\n          send: data => {\n            return this.callback(data);\n          }\n        };\n      }\n    }\n    return undefined;\n  }\n}\nexports.TextDocumentEventFeature = TextDocumentEventFeature;\n/**\n * A abstract feature implementation that registers language providers\n * for text documents using a given document selector.\n */\nclass TextDocumentLanguageFeature extends DynamicDocumentFeature {\n  constructor(client, registrationType) {\n    super(client);\n    this._registrationType = registrationType;\n    this._registrations = new Map();\n  }\n  *getDocumentSelectors() {\n    for (const registration of this._registrations.values()) {\n      const selector = registration.data.registerOptions.documentSelector;\n      if (selector === null) {\n        continue;\n      }\n      yield this._client.protocol2CodeConverter.asDocumentSelector(selector);\n    }\n  }\n  get registrationType() {\n    return this._registrationType;\n  }\n  register(data) {\n    if (!data.registerOptions.documentSelector) {\n      return;\n    }\n    let registration = this.registerLanguageProvider(data.registerOptions, data.id);\n    this._registrations.set(data.id, {\n      disposable: registration[0],\n      data,\n      provider: registration[1]\n    });\n  }\n  unregister(id) {\n    let registration = this._registrations.get(id);\n    if (registration !== undefined) {\n      registration.disposable.dispose();\n    }\n  }\n  clear() {\n    this._registrations.forEach(value => {\n      value.disposable.dispose();\n    });\n    this._registrations.clear();\n  }\n  getRegistration(documentSelector, capability) {\n    if (!capability) {\n      return [undefined, undefined];\n    } else if (vscode_languageserver_protocol_1.TextDocumentRegistrationOptions.is(capability)) {\n      const id = vscode_languageserver_protocol_1.StaticRegistrationOptions.hasId(capability) ? capability.id : UUID.generateUuid();\n      const selector = capability.documentSelector ?? documentSelector;\n      if (selector) {\n        return [id, Object.assign({}, capability, {\n          documentSelector: selector\n        })];\n      }\n    } else if (Is.boolean(capability) && capability === true || vscode_languageserver_protocol_1.WorkDoneProgressOptions.is(capability)) {\n      if (!documentSelector) {\n        return [undefined, undefined];\n      }\n      const options = Is.boolean(capability) && capability === true ? {\n        documentSelector\n      } : Object.assign({}, capability, {\n        documentSelector\n      });\n      return [UUID.generateUuid(), options];\n    }\n    return [undefined, undefined];\n  }\n  getRegistrationOptions(documentSelector, capability) {\n    if (!documentSelector || !capability) {\n      return undefined;\n    }\n    return Is.boolean(capability) && capability === true ? {\n      documentSelector\n    } : Object.assign({}, capability, {\n      documentSelector\n    });\n  }\n  getProvider(textDocument) {\n    for (const registration of this._registrations.values()) {\n      let selector = registration.data.registerOptions.documentSelector;\n      if (selector !== null && vscode_1.languages.match(this._client.protocol2CodeConverter.asDocumentSelector(selector), textDocument) > 0) {\n        return registration.provider;\n      }\n    }\n    return undefined;\n  }\n  getAllProviders() {\n    const result = [];\n    for (const item of this._registrations.values()) {\n      result.push(item.provider);\n    }\n    return result;\n  }\n}\nexports.TextDocumentLanguageFeature = TextDocumentLanguageFeature;\nclass WorkspaceFeature {\n  constructor(client, registrationType) {\n    this._client = client;\n    this._registrationType = registrationType;\n    this._registrations = new Map();\n  }\n  getState() {\n    const registrations = this._registrations.size > 0;\n    return {\n      kind: 'workspace',\n      id: this._registrationType.method,\n      registrations\n    };\n  }\n  get registrationType() {\n    return this._registrationType;\n  }\n  register(data) {\n    const registration = this.registerLanguageProvider(data.registerOptions);\n    this._registrations.set(data.id, {\n      disposable: registration[0],\n      provider: registration[1]\n    });\n  }\n  unregister(id) {\n    let registration = this._registrations.get(id);\n    if (registration !== undefined) {\n      registration.disposable.dispose();\n    }\n  }\n  clear() {\n    this._registrations.forEach(registration => {\n      registration.disposable.dispose();\n    });\n    this._registrations.clear();\n  }\n  getProviders() {\n    const result = [];\n    for (const registration of this._registrations.values()) {\n      result.push(registration.provider);\n    }\n    return result;\n  }\n}\nexports.WorkspaceFeature = WorkspaceFeature;","map":{"version":3,"names":["Object","defineProperty","exports","value","WorkspaceFeature","TextDocumentLanguageFeature","TextDocumentEventFeature","DynamicDocumentFeature","DynamicFeature","StaticFeature","ensure","LSPCancellationError","vscode_1","require","vscode_languageserver_protocol_1","Is","UUID","CancellationError","constructor","data","target","key","undefined","is","candidate","func","fillClientCapabilities","initialize","getState","clear","fillInitializeParams","register","unregister","registrationType","client","_client","selectors","getDocumentSelectors","count","selector","document","workspace","textDocuments","languages","match","kind","id","method","registrations","matches","textDocumentFilter","textDocument","event","type","middleware","createParams","selectorFilter","_event","_type","_middleware","_createParams","_textDocument","_selectorFilter","_selectors","Map","_onNotificationSent","EventEmitter","getStateInfo","values","registerOptions","documentSelector","_listener","callback","catch","error","set","protocol2CodeConverter","asDocumentSelector","doSend","params","sendNotification","notificationSent","getTextDocument","hasDedicatedTextSynchronizationFeature","onNotificationSent","fire","delete","size","dispose","getProvider","send","_registrationType","_registrations","registration","registerLanguageProvider","disposable","provider","get","forEach","getRegistration","capability","TextDocumentRegistrationOptions","StaticRegistrationOptions","hasId","generateUuid","assign","boolean","WorkDoneProgressOptions","options","getRegistrationOptions","getAllProviders","result","item","push","getProviders"],"sources":["/Users/phamtu/Downloads/Code/OCE/oce-frontend/node_modules/vscode-languageclient/lib/common/features.js"],"sourcesContent":["\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkspaceFeature = exports.TextDocumentLanguageFeature = exports.TextDocumentEventFeature = exports.DynamicDocumentFeature = exports.DynamicFeature = exports.StaticFeature = exports.ensure = exports.LSPCancellationError = void 0;\nconst vscode_1 = require(\"vscode\");\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nconst Is = require(\"./utils/is\");\nconst UUID = require(\"./utils/uuid\");\nclass LSPCancellationError extends vscode_1.CancellationError {\n    constructor(data) {\n        super();\n        this.data = data;\n    }\n}\nexports.LSPCancellationError = LSPCancellationError;\nfunction ensure(target, key) {\n    if (target[key] === undefined) {\n        target[key] = {};\n    }\n    return target[key];\n}\nexports.ensure = ensure;\nvar StaticFeature;\n(function (StaticFeature) {\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null &&\n            Is.func(candidate.fillClientCapabilities) && Is.func(candidate.initialize) && Is.func(candidate.getState) && Is.func(candidate.clear) &&\n            (candidate.fillInitializeParams === undefined || Is.func(candidate.fillInitializeParams));\n    }\n    StaticFeature.is = is;\n})(StaticFeature || (exports.StaticFeature = StaticFeature = {}));\nvar DynamicFeature;\n(function (DynamicFeature) {\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null &&\n            Is.func(candidate.fillClientCapabilities) && Is.func(candidate.initialize) && Is.func(candidate.getState) && Is.func(candidate.clear) &&\n            (candidate.fillInitializeParams === undefined || Is.func(candidate.fillInitializeParams)) && Is.func(candidate.register) &&\n            Is.func(candidate.unregister) && candidate.registrationType !== undefined;\n    }\n    DynamicFeature.is = is;\n})(DynamicFeature || (exports.DynamicFeature = DynamicFeature = {}));\n/**\n * An abstract dynamic feature implementation that operates on documents (e.g. text\n * documents or notebooks).\n */\nclass DynamicDocumentFeature {\n    constructor(client) {\n        this._client = client;\n    }\n    /**\n     * Returns the state the feature is in.\n     */\n    getState() {\n        const selectors = this.getDocumentSelectors();\n        let count = 0;\n        for (const selector of selectors) {\n            count++;\n            for (const document of vscode_1.workspace.textDocuments) {\n                if (vscode_1.languages.match(selector, document) > 0) {\n                    return { kind: 'document', id: this.registrationType.method, registrations: true, matches: true };\n                }\n            }\n        }\n        const registrations = count > 0;\n        return { kind: 'document', id: this.registrationType.method, registrations, matches: false };\n    }\n}\nexports.DynamicDocumentFeature = DynamicDocumentFeature;\n/**\n * An abstract base class to implement features that react to events\n * emitted from text documents.\n */\nclass TextDocumentEventFeature extends DynamicDocumentFeature {\n    static textDocumentFilter(selectors, textDocument) {\n        for (const selector of selectors) {\n            if (vscode_1.languages.match(selector, textDocument) > 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n    constructor(client, event, type, middleware, createParams, textDocument, selectorFilter) {\n        super(client);\n        this._event = event;\n        this._type = type;\n        this._middleware = middleware;\n        this._createParams = createParams;\n        this._textDocument = textDocument;\n        this._selectorFilter = selectorFilter;\n        this._selectors = new Map();\n        this._onNotificationSent = new vscode_1.EventEmitter();\n    }\n    getStateInfo() {\n        return [this._selectors.values(), false];\n    }\n    getDocumentSelectors() {\n        return this._selectors.values();\n    }\n    register(data) {\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        if (!this._listener) {\n            this._listener = this._event((data) => {\n                this.callback(data).catch((error) => {\n                    this._client.error(`Sending document notification ${this._type.method} failed.`, error);\n                });\n            });\n        }\n        this._selectors.set(data.id, this._client.protocol2CodeConverter.asDocumentSelector(data.registerOptions.documentSelector));\n    }\n    async callback(data) {\n        const doSend = async (data) => {\n            const params = this._createParams(data);\n            await this._client.sendNotification(this._type, params);\n            this.notificationSent(this.getTextDocument(data), this._type, params);\n        };\n        if (this.matches(data)) {\n            const middleware = this._middleware();\n            return middleware ? middleware(data, (data) => doSend(data)) : doSend(data);\n        }\n    }\n    matches(data) {\n        if (this._client.hasDedicatedTextSynchronizationFeature(this._textDocument(data))) {\n            return false;\n        }\n        return !this._selectorFilter || this._selectorFilter(this._selectors.values(), data);\n    }\n    get onNotificationSent() {\n        return this._onNotificationSent.event;\n    }\n    notificationSent(textDocument, type, params) {\n        this._onNotificationSent.fire({ textDocument, type, params });\n    }\n    unregister(id) {\n        this._selectors.delete(id);\n        if (this._selectors.size === 0 && this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    clear() {\n        this._selectors.clear();\n        this._onNotificationSent.dispose();\n        if (this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    }\n    getProvider(document) {\n        for (const selector of this._selectors.values()) {\n            if (vscode_1.languages.match(selector, document) > 0) {\n                return {\n                    send: (data) => {\n                        return this.callback(data);\n                    }\n                };\n            }\n        }\n        return undefined;\n    }\n}\nexports.TextDocumentEventFeature = TextDocumentEventFeature;\n/**\n * A abstract feature implementation that registers language providers\n * for text documents using a given document selector.\n */\nclass TextDocumentLanguageFeature extends DynamicDocumentFeature {\n    constructor(client, registrationType) {\n        super(client);\n        this._registrationType = registrationType;\n        this._registrations = new Map();\n    }\n    *getDocumentSelectors() {\n        for (const registration of this._registrations.values()) {\n            const selector = registration.data.registerOptions.documentSelector;\n            if (selector === null) {\n                continue;\n            }\n            yield this._client.protocol2CodeConverter.asDocumentSelector(selector);\n        }\n    }\n    get registrationType() {\n        return this._registrationType;\n    }\n    register(data) {\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        let registration = this.registerLanguageProvider(data.registerOptions, data.id);\n        this._registrations.set(data.id, { disposable: registration[0], data, provider: registration[1] });\n    }\n    unregister(id) {\n        let registration = this._registrations.get(id);\n        if (registration !== undefined) {\n            registration.disposable.dispose();\n        }\n    }\n    clear() {\n        this._registrations.forEach((value) => {\n            value.disposable.dispose();\n        });\n        this._registrations.clear();\n    }\n    getRegistration(documentSelector, capability) {\n        if (!capability) {\n            return [undefined, undefined];\n        }\n        else if (vscode_languageserver_protocol_1.TextDocumentRegistrationOptions.is(capability)) {\n            const id = vscode_languageserver_protocol_1.StaticRegistrationOptions.hasId(capability) ? capability.id : UUID.generateUuid();\n            const selector = capability.documentSelector ?? documentSelector;\n            if (selector) {\n                return [id, Object.assign({}, capability, { documentSelector: selector })];\n            }\n        }\n        else if (Is.boolean(capability) && capability === true || vscode_languageserver_protocol_1.WorkDoneProgressOptions.is(capability)) {\n            if (!documentSelector) {\n                return [undefined, undefined];\n            }\n            const options = (Is.boolean(capability) && capability === true ? { documentSelector } : Object.assign({}, capability, { documentSelector }));\n            return [UUID.generateUuid(), options];\n        }\n        return [undefined, undefined];\n    }\n    getRegistrationOptions(documentSelector, capability) {\n        if (!documentSelector || !capability) {\n            return undefined;\n        }\n        return (Is.boolean(capability) && capability === true ? { documentSelector } : Object.assign({}, capability, { documentSelector }));\n    }\n    getProvider(textDocument) {\n        for (const registration of this._registrations.values()) {\n            let selector = registration.data.registerOptions.documentSelector;\n            if (selector !== null && vscode_1.languages.match(this._client.protocol2CodeConverter.asDocumentSelector(selector), textDocument) > 0) {\n                return registration.provider;\n            }\n        }\n        return undefined;\n    }\n    getAllProviders() {\n        const result = [];\n        for (const item of this._registrations.values()) {\n            result.push(item.provider);\n        }\n        return result;\n    }\n}\nexports.TextDocumentLanguageFeature = TextDocumentLanguageFeature;\nclass WorkspaceFeature {\n    constructor(client, registrationType) {\n        this._client = client;\n        this._registrationType = registrationType;\n        this._registrations = new Map();\n    }\n    getState() {\n        const registrations = this._registrations.size > 0;\n        return { kind: 'workspace', id: this._registrationType.method, registrations };\n    }\n    get registrationType() {\n        return this._registrationType;\n    }\n    register(data) {\n        const registration = this.registerLanguageProvider(data.registerOptions);\n        this._registrations.set(data.id, { disposable: registration[0], provider: registration[1] });\n    }\n    unregister(id) {\n        let registration = this._registrations.get(id);\n        if (registration !== undefined) {\n            registration.disposable.dispose();\n        }\n    }\n    clear() {\n        this._registrations.forEach((registration) => {\n            registration.disposable.dispose();\n        });\n        this._registrations.clear();\n    }\n    getProviders() {\n        const result = [];\n        for (const registration of this._registrations.values()) {\n            result.push(registration.provider);\n        }\n        return result;\n    }\n}\nexports.WorkspaceFeature = WorkspaceFeature;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}