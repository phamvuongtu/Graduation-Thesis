import { IFileService } from '../vscode/src/vs/platform/files/common/files.service.js';
import { ILifecycleService } from '../vscode/src/vs/workbench/services/lifecycle/common/lifecycle.service.js';
import { IExtensionService } from '../vscode/src/vs/workbench/services/extensions/common/extensions.service.js';
import { ILogService } from '../vscode/src/vs/platform/log/common/log.service.js';
import { IExtension, IRelaxedExtensionDescription } from '../vscode/src/vs/platform/extensions/common/extensions.js';
import { IWorkspaceContextService } from '../vscode/src/vs/platform/workspace/common/workspace.service.js';
import { IInstantiationService } from '../vscode/src/vs/platform/instantiation/common/instantiation.js';
import { INotificationService } from '../vscode/src/vs/platform/notification/common/notification.service.js';
import { ITelemetryService } from '../vscode/src/vs/platform/telemetry/common/telemetry.service.js';
import { IDialogService } from '../vscode/src/vs/platform/dialogs/common/dialogs.service.js';
import { IRemoteAuthorityResolverService } from '../vscode/src/vs/platform/remote/common/remoteAuthorityResolver.service.js';
import { IRemoteExtensionsScannerService } from '../vscode/src/vs/platform/remote/common/remoteExtensionsScanner.service.js';
import { IRemoteAgentService } from '../vscode/src/vs/workbench/services/remote/common/remoteAgentService.service.js';
import { IWorkbenchExtensionEnablementService, IWorkbenchExtensionManagementService, IWebExtensionsScannerService } from '../vscode/src/vs/workbench/services/extensionManagement/common/extensionManagement.service.js';
import { IExtensionManifestPropertiesService } from '../vscode/src/vs/workbench/services/extensions/common/extensionManifestPropertiesService.service.js';
import { IConfigurationService } from '../vscode/src/vs/platform/configuration/common/configuration.service.js';
import { IProductService } from '../vscode/src/vs/platform/product/common/productService.service.js';
import { IBrowserWorkbenchEnvironmentService } from '../vscode/src/vs/workbench/services/environment/browser/environmentService.service.js';
import { IEditorOverrideServices } from '../vscode/src/vs/editor/standalone/browser/standaloneServices.js';
import { IUserDataInitializationService } from '../vscode/src/vs/workbench/services/userData/browser/userDataInit.service.js';
import { ExtensionService } from '../vscode/src/vs/workbench/services/extensions/browser/extensionService.js';
import { ExtensionHostKind } from '../vscode/src/vs/workbench/services/extensions/common/extensionHostKind.js';
import { IUserDataProfileService } from '../vscode/src/vs/workbench/services/userDataProfile/common/userDataProfile.service.js';
import { IWorkspaceTrustManagementService } from '../vscode/src/vs/platform/workspace/common/workspaceTrust.service.js';
import { IRemoteExplorerService } from '../vscode/src/vs/workbench/services/remote/common/remoteExplorerService.service.js';
import { LocalExtensionHost } from '../localExtensionHost.js';

interface WorkerConfig {
    url: string;
    options?: WorkerOptions;
}
declare function setLocalExtensionHost(_localExtensionHost: typeof LocalExtensionHost): void;
interface IExtensionWithExtHostKind extends IExtension {
    extHostKind?: ExtensionHostKind;
}
declare class ExtensionServiceOverride extends ExtensionService implements IExtensionService {
    constructor(workerConfig: WorkerConfig | undefined, instantiationService: IInstantiationService, notificationService: INotificationService, browserEnvironmentService: IBrowserWorkbenchEnvironmentService, telemetryService: ITelemetryService, extensionEnablementService: IWorkbenchExtensionEnablementService, fileService: IFileService, productService: IProductService, extensionManagementService: IWorkbenchExtensionManagementService, contextService: IWorkspaceContextService, configurationService: IConfigurationService, extensionManifestPropertiesService: IExtensionManifestPropertiesService, webExtensionsScannerService: IWebExtensionsScannerService, logService: ILogService, remoteAgentService: IRemoteAgentService, remoteExtensionsScannerService: IRemoteExtensionsScannerService, lifecycleService: ILifecycleService, remoteAuthorityResolverService: IRemoteAuthorityResolverService, userDataInitializationService: IUserDataInitializationService, userDataProfileService: IUserDataProfileService, workspaceTrustManagementService: IWorkspaceTrustManagementService, remoteExplorerService: IRemoteExplorerService, dialogService: IDialogService);
    deltaExtensions(toAdd: IExtensionWithExtHostKind[], toRemove: IExtension[]): Promise<void>;
    protected _scanSingleExtension(extension: IExtension): Promise<Readonly<IRelaxedExtensionDescription> | null>;
}
declare function getServiceOverride(workerConfig?: WorkerConfig, _iframeAlternateDomains?: string): IEditorOverrideServices;

export { ExtensionHostKind, ExtensionServiceOverride, type IExtensionWithExtHostKind, type WorkerConfig, getServiceOverride as default, setLocalExtensionHost };
