import { IEditorOverrideServices } from '../vscode/src/vs/editor/standalone/browser/standaloneServices.js';
export { IUserFriendlyKeybinding } from '../vscode/src/vs/platform/keybinding/common/keybinding.js';
import { IFileWriteOptions } from '../vscode/src/vs/platform/files/common/files.js';
import { URI } from '../vscode/src/vs/base/common/uri.js';
import '../vscode/src/vs/editor/editor.api.js';

declare const defaultUserKeybindindsFile: URI;
/**
 * Should be called only BEFORE the service are initialized to initialize the file on the filesystem before the keybindings service initializes
 */
declare function initUserKeybindings(configurationJson: string, options?: Partial<IFileWriteOptions>, file?: URI): Promise<void>;
/**
 * Can be called at any time after the services are initialized to update the user configuration
 */
declare function updateUserKeybindings(keybindingsJson: string): Promise<void>;
interface KeybindingsProps {
    shouldUseGlobalKeybindings?: () => boolean;
}
declare function getServiceOverride({ shouldUseGlobalKeybindings }?: KeybindingsProps): IEditorOverrideServices;

export { getServiceOverride as default, defaultUserKeybindindsFile, initUserKeybindings, updateUserKeybindings };
