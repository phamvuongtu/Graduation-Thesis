import { IEditorOverrideServices } from '../vscode/src/vs/editor/standalone/browser/standaloneServices.js';
export { SidebarPart } from '../vscode/src/vs/workbench/browser/parts/sidebar/sidebarPart.js';
export { ActivityService } from '../vscode/src/vs/workbench/services/activity/browser/activityService.js';
export { ActivitybarPart } from '../vscode/src/vs/workbench/browser/parts/activitybar/activitybarPart.js';
import { IDisposable } from '../vscode/src/vs/base/common/lifecycle.js';
export { IReference } from '../vscode/src/vs/base/common/lifecycle.js';
export { PanelPart } from '../vscode/src/vs/workbench/browser/parts/panel/panelPart.js';
import { Part } from '../vscode/src/vs/workbench/browser/part.js';
export { GroupOrientation } from '../vscode/src/vs/workbench/services/editor/common/editorGroupsService.js';
export { IEditorOptions } from '../vscode/src/vs/platform/editor/common/editor.js';
export { IResolvedTextEditorModel } from '../vscode/src/vs/editor/common/services/resolverService.js';
import { Parts } from '../vscode/src/vs/workbench/services/layout/browser/layoutService.js';
export { Position } from '../vscode/src/vs/workbench/services/layout/browser/layoutService.js';
import { ILayoutInitializationState } from '../vscode/src/vs/workbench/browser/layout.js';
import { OpenEditor } from './tools/editor.js';
export { CustomViewOption, EditorPane, SimpleEditorInput, SimpleEditorPane, getPanelPosition, getSideBarPosition, isPartVisibile, onDidChangePanelPosition, onDidChangeSideBarPosition, registerCustomView, registerEditor, registerEditorPane, registerEditorSerializer, setPartVisibility, viewContainerRegistry, viewRegistry } from './tools/views.js';
export { IViewContainerDescriptor, IViewDescriptor, ViewContainer, ViewContainerLocation } from '../vscode/src/vs/workbench/common/views.js';
export { ViewPaneContainer } from '../vscode/src/vs/workbench/browser/parts/views/viewPaneContainer.js';
export { EditorInput, IEditorCloseHandler } from '../vscode/src/vs/workbench/common/editor/editorInput.js';
export { ConfirmResult } from '../vscode/src/vs/platform/dialogs/common/dialogs.js';
export { EditorInputFactoryObject, RegisteredEditorInfo, RegisteredEditorOptions, RegisteredEditorPriority } from '../vscode/src/vs/workbench/services/editor/common/editorResolverService.js';
export { AbstractResourceEditorInput } from '../vscode/src/vs/workbench/common/editor/resourceEditorInput.js';
export { AbstractTextResourceEditorInput } from '../vscode/src/vs/workbench/common/editor/textResourceEditorInput.js';
export { EditorInputCapabilities, IEditorSerializer } from '../vscode/src/vs/workbench/common/editor.js';
export { IView, SplitView } from '../vscode/src/vs/base/browser/ui/splitview/splitview.js';
export { DomScrollableElement } from '../vscode/src/vs/base/browser/ui/scrollbar/scrollableElement.js';

declare function renderPart(partContainer: HTMLElement, part: Part): void;
declare function attachPart(part: Parts, container: HTMLElement): IDisposable;
declare function onPartVisibilityChange(part: Parts, listener: (visible: boolean) => void): IDisposable;
declare function renderActivitybarPar(container: HTMLElement): IDisposable;
declare function renderSidebarPart(container: HTMLElement): IDisposable;
declare function renderPanelPart(container: HTMLElement): IDisposable;
declare function renderAuxiliaryPart(container: HTMLElement): IDisposable;
declare function renderEditorPart(container: HTMLElement): IDisposable;
declare function renderStatusBarPart(container: HTMLElement): IDisposable;
declare function isEditorPartVisible(): boolean;
type InitializationStateTransformer = (state: ILayoutInitializationState) => ILayoutInitializationState;
declare function getServiceOverride(openEditorFallback?: OpenEditor, _webviewIframeAlternateDomains?: string): IEditorOverrideServices;
/**
 * @deprecated Provide restoreEditors with the initializationState.editor.restoreEditors params
 */
declare function getServiceOverride(openEditorFallback?: OpenEditor, _webviewIframeAlternateDomains?: string, restoreEditors?: boolean): IEditorOverrideServices;
declare function getServiceOverride(openEditorFallback?: OpenEditor, _webviewIframeAlternateDomains?: string, initializationState?: InitializationStateTransformer): IEditorOverrideServices;

export { ILayoutInitializationState, type InitializationStateTransformer, OpenEditor, Parts, attachPart, getServiceOverride as default, isEditorPartVisible, onPartVisibilityChange, renderActivitybarPar, renderAuxiliaryPart, renderEditorPart, renderPanelPart, renderPart, renderSidebarPart, renderStatusBarPart };
