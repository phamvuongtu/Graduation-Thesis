import { URI } from '../../../../base/common/uri.js';
import '../../../../editor/editor.api.js';
import { ExplorerItem } from '../common/explorerModel.js';

interface IExplorerView {
    autoReveal: boolean | 'force' | 'focusNoScroll';
    getContext(respectMultiSelection: boolean): ExplorerItem[];
    refresh(recursive: boolean, item?: ExplorerItem, cancelEditing?: boolean): Promise<void>;
    selectResource(resource: URI | undefined, reveal?: boolean | string, retry?: number): Promise<void>;
    setTreeInput(): Promise<void>;
    itemsCopied(tats: ExplorerItem[], cut: boolean, previousCut: ExplorerItem[] | undefined): void;
    setEditable(stat: ExplorerItem, isEditing: boolean): Promise<void>;
    isItemVisible(item: ExplorerItem): boolean;
    isItemCollapsed(item: ExplorerItem): boolean;
    hasFocus(): boolean;
    getFocus(): ExplorerItem[];
    focusNext(): void;
    focusLast(): void;
}

export type { IExplorerView };
