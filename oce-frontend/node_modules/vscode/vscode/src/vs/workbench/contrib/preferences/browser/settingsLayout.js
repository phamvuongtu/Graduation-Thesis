import { localizeWithPath } from '../../../../nls.js';
const _moduleId = "vs/workbench/contrib/preferences/browser/settingsLayout";
const defaultCommonlyUsedSettings = [
    'files.autoSave',
    'editor.fontSize',
    'editor.fontFamily',
    'editor.tabSize',
    'editor.renderWhitespace',
    'editor.cursorStyle',
    'editor.multiCursorModifier',
    'editor.insertSpaces',
    'editor.wordWrap',
    'files.exclude',
    'files.associations',
    'workbench.editor.enablePreview'
];
function getCommonlyUsedData(toggleData) {
    return {
        id: 'commonlyUsed',
        label: ( localizeWithPath(_moduleId, 0, "Commonly Used")),
        settings: toggleData?.commonlyUsed ?? defaultCommonlyUsedSettings
    };
}
const tocData = {
    id: 'root',
    label: 'root',
    children: [
        {
            id: 'editor',
            label: ( localizeWithPath(_moduleId, 1, "Text Editor")),
            settings: ['editor.*'],
            children: [
                {
                    id: 'editor/cursor',
                    label: ( localizeWithPath(_moduleId, 2, "Cursor")),
                    settings: ['editor.cursor*']
                },
                {
                    id: 'editor/find',
                    label: ( localizeWithPath(_moduleId, 3, "Find")),
                    settings: ['editor.find.*']
                },
                {
                    id: 'editor/font',
                    label: ( localizeWithPath(_moduleId, 4, "Font")),
                    settings: ['editor.font*']
                },
                {
                    id: 'editor/format',
                    label: ( localizeWithPath(_moduleId, 5, "Formatting")),
                    settings: ['editor.format*']
                },
                {
                    id: 'editor/diffEditor',
                    label: ( localizeWithPath(_moduleId, 6, "Diff Editor")),
                    settings: ['diffEditor.*']
                },
                {
                    id: 'editor/multiDiffEditor',
                    label: ( localizeWithPath(_moduleId, 7, "Multi-File Diff Editor")),
                    settings: ['multiDiffEditor.*']
                },
                {
                    id: 'editor/minimap',
                    label: ( localizeWithPath(_moduleId, 8, "Minimap")),
                    settings: ['editor.minimap.*']
                },
                {
                    id: 'editor/suggestions',
                    label: ( localizeWithPath(_moduleId, 9, "Suggestions")),
                    settings: ['editor.*suggest*']
                },
                {
                    id: 'editor/files',
                    label: ( localizeWithPath(_moduleId, 10, "Files")),
                    settings: ['files.*']
                }
            ]
        },
        {
            id: 'workbench',
            label: ( localizeWithPath(_moduleId, 11, "Workbench")),
            settings: ['workbench.*'],
            children: [
                {
                    id: 'workbench/appearance',
                    label: ( localizeWithPath(_moduleId, 12, "Appearance")),
                    settings: ['workbench.activityBar.*', 'workbench.*color*', 'workbench.fontAliasing', 'workbench.iconTheme', 'workbench.sidebar.location', 'workbench.*.visible', 'workbench.tips.enabled', 'workbench.tree.*', 'workbench.view.*']
                },
                {
                    id: 'workbench/breadcrumbs',
                    label: ( localizeWithPath(_moduleId, 13, "Breadcrumbs")),
                    settings: ['breadcrumbs.*']
                },
                {
                    id: 'workbench/editor',
                    label: ( localizeWithPath(_moduleId, 14, "Editor Management")),
                    settings: ['workbench.editor.*']
                },
                {
                    id: 'workbench/settings',
                    label: ( localizeWithPath(_moduleId, 15, "Settings Editor")),
                    settings: ['workbench.settings.*']
                },
                {
                    id: 'workbench/zenmode',
                    label: ( localizeWithPath(_moduleId, 16, "Zen Mode")),
                    settings: ['zenmode.*']
                },
                {
                    id: 'workbench/screencastmode',
                    label: ( localizeWithPath(_moduleId, 17, "Screencast Mode")),
                    settings: ['screencastMode.*']
                }
            ]
        },
        {
            id: 'window',
            label: ( localizeWithPath(_moduleId, 18, "Window")),
            settings: ['window.*'],
            children: [
                {
                    id: 'window/newWindow',
                    label: ( localizeWithPath(_moduleId, 19, "New Window")),
                    settings: ['window.*newwindow*']
                }
            ]
        },
        {
            id: 'features',
            label: ( localizeWithPath(_moduleId, 20, "Features")),
            children: [
                {
                    id: 'features/accessibilitySignals',
                    label: ( localizeWithPath(_moduleId, 21, 'Accessibility Signals')),
                    settings: ['accessibility.signals.*', 'audioCues.*']
                },
                {
                    id: 'features/accessibility',
                    label: ( localizeWithPath(_moduleId, 22, "Accessibility")),
                    settings: ['accessibility.*']
                },
                {
                    id: 'features/explorer',
                    label: ( localizeWithPath(_moduleId, 23, "Explorer")),
                    settings: ['explorer.*', 'outline.*']
                },
                {
                    id: 'features/search',
                    label: ( localizeWithPath(_moduleId, 24, "Search")),
                    settings: ['search.*']
                },
                {
                    id: 'features/debug',
                    label: ( localizeWithPath(_moduleId, 25, "Debug")),
                    settings: ['debug.*', 'launch']
                },
                {
                    id: 'features/testing',
                    label: ( localizeWithPath(_moduleId, 26, "Testing")),
                    settings: ['testing.*']
                },
                {
                    id: 'features/scm',
                    label: ( localizeWithPath(_moduleId, 27, "Source Control")),
                    settings: ['scm.*']
                },
                {
                    id: 'features/extensions',
                    label: ( localizeWithPath(_moduleId, 28, "Extensions")),
                    settings: ['extensions.*']
                },
                {
                    id: 'features/terminal',
                    label: ( localizeWithPath(_moduleId, 29, "Terminal")),
                    settings: ['terminal.*']
                },
                {
                    id: 'features/task',
                    label: ( localizeWithPath(_moduleId, 30, "Task")),
                    settings: ['task.*']
                },
                {
                    id: 'features/problems',
                    label: ( localizeWithPath(_moduleId, 31, "Problems")),
                    settings: ['problems.*']
                },
                {
                    id: 'features/output',
                    label: ( localizeWithPath(_moduleId, 32, "Output")),
                    settings: ['output.*']
                },
                {
                    id: 'features/comments',
                    label: ( localizeWithPath(_moduleId, 33, "Comments")),
                    settings: ['comments.*']
                },
                {
                    id: 'features/remote',
                    label: ( localizeWithPath(_moduleId, 34, "Remote")),
                    settings: ['remote.*']
                },
                {
                    id: 'features/timeline',
                    label: ( localizeWithPath(_moduleId, 35, "Timeline")),
                    settings: ['timeline.*']
                },
                {
                    id: 'features/notebook',
                    label: ( localizeWithPath(_moduleId, 36, 'Notebook')),
                    settings: ['notebook.*', 'interactiveWindow.*']
                },
                {
                    id: 'features/mergeEditor',
                    label: ( localizeWithPath(_moduleId, 37, 'Merge Editor')),
                    settings: ['mergeEditor.*']
                },
                {
                    id: 'features/chat',
                    label: ( localizeWithPath(_moduleId, 38, 'Chat')),
                    settings: ['chat.*', 'inlineChat.*']
                }
            ]
        },
        {
            id: 'application',
            label: ( localizeWithPath(_moduleId, 39, "Application")),
            children: [
                {
                    id: 'application/http',
                    label: ( localizeWithPath(_moduleId, 40, "Proxy")),
                    settings: ['http.*']
                },
                {
                    id: 'application/keyboard',
                    label: ( localizeWithPath(_moduleId, 41, "Keyboard")),
                    settings: ['keyboard.*']
                },
                {
                    id: 'application/update',
                    label: ( localizeWithPath(_moduleId, 42, "Update")),
                    settings: ['update.*']
                },
                {
                    id: 'application/telemetry',
                    label: ( localizeWithPath(_moduleId, 43, "Telemetry")),
                    settings: ['telemetry.*']
                },
                {
                    id: 'application/settingsSync',
                    label: ( localizeWithPath(_moduleId, 44, "Settings Sync")),
                    settings: ['settingsSync.*']
                },
                {
                    id: 'application/experimental',
                    label: ( localizeWithPath(_moduleId, 45, "Experimental")),
                    settings: ['application.experimental.*']
                },
                {
                    id: 'application/other',
                    label: ( localizeWithPath(_moduleId, 46, "Other")),
                    settings: ['application.*']
                }
            ]
        },
        {
            id: 'security',
            label: ( localizeWithPath(_moduleId, 47, "Security")),
            settings: ['security.*'],
            children: [
                {
                    id: 'security/workspace',
                    label: ( localizeWithPath(_moduleId, 48, "Workspace")),
                    settings: ['security.workspace.*']
                }
            ]
        }
    ]
};
const knownAcronyms = ( (new Set()));
[
    'css',
    'html',
    'scss',
    'less',
    'json',
    'js',
    'ts',
    'ie',
    'id',
    'php',
    'scm',
].forEach(str => knownAcronyms.add(str));
const knownTermMappings = ( (new Map()));
knownTermMappings.set('power shell', 'PowerShell');
knownTermMappings.set('powershell', 'PowerShell');
knownTermMappings.set('javascript', 'JavaScript');
knownTermMappings.set('typescript', 'TypeScript');
export { getCommonlyUsedData, knownAcronyms, knownTermMappings, tocData };
