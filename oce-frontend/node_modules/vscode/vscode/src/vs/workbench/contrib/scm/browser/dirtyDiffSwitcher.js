import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';
import { localizeWithPath } from '../../../../nls.js';
import { Action } from '../../../../base/common/actions.js';
import { IContextViewService } from '../../../../platform/contextview/browser/contextView.service.js';
import { SelectActionViewItem } from '../../../../base/browser/ui/actionbar/actionViewItems.js';
import { defaultSelectBoxStyles } from '../../../../platform/theme/browser/defaultStyles.js';
import { IThemeService } from '../../../../platform/theme/common/themeService.service.js';
import { peekViewTitleBackground } from '../../../../editor/contrib/peekView/browser/peekView.js';
import '../../../../platform/theme/common/colorUtils.js';
import '../../../../platform/theme/common/colors/baseColors.js';
import '../../../../platform/theme/common/colors/chartsColors.js';
import { editorBackground } from '../../../../platform/theme/common/colors/editorColors.js';
import '../../../../platform/theme/common/colors/inputColors.js';
import '../../../../platform/theme/common/colors/listColors.js';
import '../../../../platform/theme/common/colors/menuColors.js';
import '../../../../platform/theme/common/colors/minimapColors.js';
import '../../../../platform/theme/common/colors/miscColors.js';
import '../../../../platform/theme/common/colors/quickpickColors.js';
import '../../../../platform/theme/common/colors/searchColors.js';
const _moduleId = "vs/workbench/contrib/scm/browser/dirtyDiffSwitcher";
let SwitchQuickDiffViewItem = class SwitchQuickDiffViewItem extends SelectActionViewItem {
    constructor(action, providers, selected, contextViewService, themeService) {
        const items = ( (providers.map(provider => ({ provider, text: provider }))));
        let startingSelection = providers.indexOf(selected);
        if (startingSelection === -1) {
            startingSelection = 0;
        }
        const styles = { ...defaultSelectBoxStyles };
        const theme = themeService.getColorTheme();
        const editorBackgroundColor = theme.getColor(editorBackground);
        const peekTitleColor = theme.getColor(peekViewTitleBackground);
        const opaqueTitleColor = peekTitleColor?.makeOpaque(editorBackgroundColor) ?? editorBackgroundColor;
        styles.selectBackground = ( (( (opaqueTitleColor.lighten(.6))).toString()));
        super(null, action, items, startingSelection, contextViewService, styles, { ariaLabel: ( localizeWithPath(_moduleId, 0, 'Switch quick diff base')) });
        this.optionsItems = items;
    }
    setSelection(provider) {
        const index = this.optionsItems.findIndex(item => item.provider === provider);
        this.select(index);
    }
    getActionContext(_, index) {
        return this.optionsItems[index];
    }
    render(container) {
        super.render(container);
        this.setFocusable(true);
    }
};
SwitchQuickDiffViewItem = ( (__decorate([
    ( (__param(3, IContextViewService))),
    ( (__param(4, IThemeService)))
], SwitchQuickDiffViewItem)));
class SwitchQuickDiffBaseAction extends Action {
    static { this.ID = 'quickDiff.base.switch'; }
    static { this.LABEL = ( localizeWithPath(_moduleId, 1, "Switch Quick Diff Base")); }
    constructor(callback) {
        super(SwitchQuickDiffBaseAction.ID, SwitchQuickDiffBaseAction.LABEL, undefined, undefined);
        this.callback = callback;
    }
    async run(event) {
        return this.callback(event);
    }
}
export { SwitchQuickDiffBaseAction, SwitchQuickDiffViewItem };
