import { __decorate, __param } from '../../../../../../external/tslib/tslib.es6.js';
import { localizeWithPath } from '../../../nls.js';
import { ILoggerService } from '../../../platform/log/common/log.service.js';
import { LogService } from '../../../platform/log/common/logService.js';
import { IExtHostInitDataService } from './extHostInitDataService.js';
const _moduleId = "vs/workbench/api/common/extHostLogService";
let ExtHostLogService = class ExtHostLogService extends LogService {
    constructor(isWorker, loggerService, initData) {
        const id = initData.remote.isRemote ? 'remoteexthost' : isWorker ? 'workerexthost' : 'exthost';
        const name = initData.remote.isRemote ? ( localizeWithPath(_moduleId, 0, "Extension Host (Remote)")) : isWorker ? ( localizeWithPath(_moduleId, 1, "Extension Host (Worker)")) : ( localizeWithPath(_moduleId, 2, "Extension Host"));
        super(loggerService.createLogger(id, { name }));
    }
};
ExtHostLogService = ( (__decorate([
    ( (__param(1, ILoggerService))),
    ( (__param(2, IExtHostInitDataService)))
], ExtHostLogService)));
export { ExtHostLogService };
