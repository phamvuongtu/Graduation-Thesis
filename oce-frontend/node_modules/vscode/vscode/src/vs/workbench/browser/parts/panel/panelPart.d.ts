import { IWorkbenchLayoutService } from '../../../services/layout/browser/layoutService.service.js';
import { IStorageService } from '../../../../platform/storage/common/storage.service.js';
import { IContextMenuService } from '../../../../platform/contextview/browser/contextView.service.js';
import { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.service.js';
import { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';
import { IThemeService } from '../../../../platform/theme/common/themeService.service.js';
import { INotificationService } from '../../../../platform/notification/common/notification.service.js';
import { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.service.js';
import { IExtensionService } from '../../../services/extensions/common/extensions.service.js';
import { IViewDescriptorService } from '../../../common/views.service.js';
import { IMenuService } from '../../../../platform/actions/common/actions.service.js';
import { AbstractPaneCompositePart, CompositeBarPosition } from '../paneCompositePart.js';
import { ICommandService } from '../../../../platform/commands/common/commands.service.js';
import { IPaneCompositeBarOptions } from '../paneCompositeBar.js';
import { IHoverService } from '../../../../platform/hover/browser/hover.service.js';

declare class PanelPart extends AbstractPaneCompositePart {
    private commandService;
    readonly minimumWidth: number;
    readonly maximumWidth: number;
    readonly minimumHeight: number;
    readonly maximumHeight: number;
    get preferredHeight(): number | undefined;
    get preferredWidth(): number | undefined;
    static readonly activePanelSettingsKey = "workbench.panelpart.activepanelid";
    constructor(notificationService: INotificationService, storageService: IStorageService, contextMenuService: IContextMenuService, layoutService: IWorkbenchLayoutService, keybindingService: IKeybindingService, hoverService: IHoverService, instantiationService: IInstantiationService, themeService: IThemeService, viewDescriptorService: IViewDescriptorService, contextKeyService: IContextKeyService, extensionService: IExtensionService, commandService: ICommandService, menuService: IMenuService);
    updateStyles(): void;
    protected getCompositeBarOptions(): IPaneCompositeBarOptions;
    private fillExtraContextMenuActions;
    layout(width: number, height: number, top: number, left: number): void;
    protected shouldShowCompositeBar(): boolean;
    protected getCompositeBarPosition(): CompositeBarPosition;
    toJSON(): object;
}

export { PanelPart };
