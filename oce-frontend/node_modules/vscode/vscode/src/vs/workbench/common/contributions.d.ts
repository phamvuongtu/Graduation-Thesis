declare const enum WorkbenchPhase {
    /**
     * The first phase signals that we are about to startup getting ready.
     *
     * Note: doing work in this phase blocks an editor from showing to
     * the user, so please rather consider to use the other types, preferable
     * `Lazy` to only instantiate the contribution when really needed.
     */
    BlockStartup = 1,
    /**
     * Services are ready and the window is about to restore its UI state.
     *
     * Note: doing work in this phase blocks an editor from showing to
     * the user, so please rather consider to use the other types, preferable
     * `Lazy` to only instantiate the contribution when really needed.
     */
    BlockRestore = 2,
    /**
     * Views, panels and editors have restored. Editors are given a bit of
     * time to restore their contents.
     */
    AfterRestored = 3,
    /**
     * The last phase after views, panels and editors have restored and
     * some time has passed (2-5 seconds).
     */
    Eventually = 4
}
/**
 * A workbenchch contribution that will only be instantiated
 * when calling `getWorkbenchContribution`.
 */
interface ILazyWorkbenchContributionInstantiation {
    readonly lazy: true;
}
/**
 * A workbench contribution that will be instantiated when the
 * corresponding editor is being created.
 */
interface IOnEditorWorkbenchContributionInstantiation {
    readonly editorTypeId: string;
}
type WorkbenchContributionInstantiation = WorkbenchPhase | ILazyWorkbenchContributionInstantiation | IOnEditorWorkbenchContributionInstantiation;

export { type ILazyWorkbenchContributionInstantiation, type IOnEditorWorkbenchContributionInstantiation, type WorkbenchContributionInstantiation, WorkbenchPhase };
