import { localizeWithPath } from '../../nls.js';
const _moduleId = "vs/base/common/jsonErrorMessages";
function getParseErrorMessage(errorCode) {
    switch (errorCode) {
        case 1 : return ( localizeWithPath(_moduleId, 0, 'Invalid symbol'));
        case 2 : return ( localizeWithPath(_moduleId, 1, 'Invalid number format'));
        case 3 : return ( localizeWithPath(_moduleId, 2, 'Property name expected'));
        case 4 : return ( localizeWithPath(_moduleId, 3, 'Value expected'));
        case 5 : return ( localizeWithPath(_moduleId, 4, 'Colon expected'));
        case 6 : return ( localizeWithPath(_moduleId, 5, 'Comma expected'));
        case 7 : return ( localizeWithPath(_moduleId, 6, 'Closing brace expected'));
        case 8 : return ( localizeWithPath(_moduleId, 7, 'Closing bracket expected'));
        case 9 : return ( localizeWithPath(_moduleId, 8, 'End of file expected'));
        default:
            return '';
    }
}
export { getParseErrorMessage };
