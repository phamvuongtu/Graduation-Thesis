import { editor } from '../../editor.api.js';
import { ServiceIdentifier, IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';
import { IDisposable } from '../../../base/common/lifecycle.js';

type IEditorOverrideServices = editor.IEditorOverrideServices
/**
 * We don't want to eagerly instantiate services because embedders get a one time chance
 * to override services when they create the first editor.
 */
declare namespace StandaloneServices {
    function get<T>(serviceId: ServiceIdentifier<T>): T;
    function initialize(overrides: IEditorOverrideServices): IInstantiationService;
    /**
     * Executes callback once services are initialized.
     */
    function withServices(callback: () => IDisposable): IDisposable;
}

export { type IEditorOverrideServices, StandaloneServices };
