import { Schemas } from '../../../base/common/network.js';
const NO_KEY_MODS = { ctrlCmd: false, alt: false };
var QuickInputHideReason;
( (function(QuickInputHideReason) {
    QuickInputHideReason[QuickInputHideReason["Blur"] = 1] = "Blur";
    QuickInputHideReason[QuickInputHideReason["Gesture"] = 2] = "Gesture";
    QuickInputHideReason[QuickInputHideReason["Other"] = 3] = "Other";
})(QuickInputHideReason || (QuickInputHideReason = {})));
var ItemActivation;
( (function(ItemActivation) {
    ItemActivation[ItemActivation["NONE"] = 0] = "NONE";
    ItemActivation[ItemActivation["FIRST"] = 1] = "FIRST";
    ItemActivation[ItemActivation["SECOND"] = 2] = "SECOND";
    ItemActivation[ItemActivation["LAST"] = 3] = "LAST";
})(ItemActivation || (ItemActivation = {})));
class QuickPickItemScorerAccessor {
    constructor(options) {
        this.options = options;
    }
    getItemLabel(entry) {
        return entry.label;
    }
    getItemDescription(entry) {
        if (this.options?.skipDescription) {
            return undefined;
        }
        return entry.description;
    }
    getItemPath(entry) {
        if (this.options?.skipPath) {
            return undefined;
        }
        if (entry.resource?.scheme === Schemas.file) {
            return entry.resource.fsPath;
        }
        return entry.resource?.path;
    }
}
const quickPickItemScorerAccessor = ( new QuickPickItemScorerAccessor());
export { ItemActivation, NO_KEY_MODS, QuickInputHideReason, QuickPickItemScorerAccessor, quickPickItemScorerAccessor };
