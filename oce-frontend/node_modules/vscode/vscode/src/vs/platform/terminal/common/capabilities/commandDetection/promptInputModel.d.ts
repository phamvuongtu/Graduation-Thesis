import { Event } from '../../../../../base/common/event.js';

/**
 * A model of the prompt input state using shell integration and analyzing the terminal buffer. This
 * may not be 100% accurate but provides a best guess.
 */
interface IPromptInputModel {
    readonly onDidStartInput: Event<IPromptInputModelState>;
    readonly onDidChangeInput: Event<IPromptInputModelState>;
    readonly onDidFinishInput: Event<IPromptInputModelState>;
    /**
     * Fires immediately before {@link onDidFinishInput} when a SIGINT/Ctrl+C/^C is detected.
     */
    readonly onDidInterrupt: Event<IPromptInputModelState>;
    readonly value: string;
    readonly cursorIndex: number;
    readonly ghostTextIndex: number;
    /**
     * Gets the prompt input as a user-friendly string where `|` is the cursor position and `[` and
     * `]` wrap any ghost text.
     */
    getCombinedString(): string;
}
interface IPromptInputModelState {
    readonly value: string;
    readonly cursorIndex: number;
    readonly ghostTextIndex: number;
}

export type { IPromptInputModel, IPromptInputModelState };
